AWSTemplateFormatVersion: 2010-09-09
Description: Deploys a multi-instance Spot node pool to an existing EKS Quick Start cluster (qs-1pipqrqj1)
Parameters:
  KeyPairName:
    Description: The name of an existing public/private key pair, which allows you to securely connect to your instance after it launches
    Type: AWS::EC2::KeyPair::KeyName
  VPCID:
    Type: "AWS::EC2::VPC::Id"
  PrivateSubnet1ID:
    Type: "AWS::EC2::Subnet::Id"
  PrivateSubnet2ID:
    Type: "AWS::EC2::Subnet::Id"
  PrivateSubnet3ID:
    Type: "AWS::EC2::Subnet::Id"
  SpotNodeInstanceType1:
    Default: m4.large #2x8
    AllowedValues:
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - m5.metal
      - m5d.large
      - m5d.xlarge
      - m5d.2xlarge
      - m5d.4xlarge
      - m5d.12xlarge
      - m5d.24xlarge
      - m5d.metal
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.12xlarge
      - m5a.24xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - x1.16xlarge
      - x1.32xlarge
      - p2.xlarge
      - p2.8xlarge
      - p2.16xlarge
      - p3.2xlarge
      - p3.8xlarge
      - p3.16xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.12xlarge
      - r5.24xlarge
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.12xlarge
      - r5d.24xlarge
      - z1d.large
      - z1d.xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.12xlarge
    ConstraintDescription: Must be a valid EC2 instance type
    Description: Type of EC2 instance for the Spot Node group (1 of 4)
    Type: String
  SpotNodeInstanceType2:
    Default: m5.large #2x8
    AllowedValues:
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - m5.metal
      - m5d.large
      - m5d.xlarge
      - m5d.2xlarge
      - m5d.4xlarge
      - m5d.12xlarge
      - m5d.24xlarge
      - m5d.metal
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.12xlarge
      - m5a.24xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - x1.16xlarge
      - x1.32xlarge
      - p2.xlarge
      - p2.8xlarge
      - p2.16xlarge
      - p3.2xlarge
      - p3.8xlarge
      - p3.16xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.12xlarge
      - r5.24xlarge
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.12xlarge
      - r5d.24xlarge
      - z1d.large
      - z1d.xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.12xlarge
    ConstraintDescription: Must be a valid EC2 instance type
    Description: Type of EC2 instance for the Spot Node group (2 of 4)
    Type: String
  SpotNodeInstanceType3:
    Default: m5a.large #2x8
    AllowedValues:
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - m5.metal
      - m5d.large
      - m5d.xlarge
      - m5d.2xlarge
      - m5d.4xlarge
      - m5d.12xlarge
      - m5d.24xlarge
      - m5d.metal
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.12xlarge
      - m5a.24xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - x1.16xlarge
      - x1.32xlarge
      - p2.xlarge
      - p2.8xlarge
      - p2.16xlarge
      - p3.2xlarge
      - p3.8xlarge
      - p3.16xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.12xlarge
      - r5.24xlarge
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.12xlarge
      - r5d.24xlarge
      - z1d.large
      - z1d.xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.12xlarge
    ConstraintDescription: Must be a valid EC2 instance type
    Description: Type of EC2 instance for the Spot Node group (3 of 4)
    Type: String
  SpotNodeInstanceType4:
    Default: m5d.large #2x8
    AllowedValues:
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - m5.metal
      - m5d.large
      - m5d.xlarge
      - m5d.2xlarge
      - m5d.4xlarge
      - m5d.12xlarge
      - m5d.24xlarge
      - m5d.metal
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.12xlarge
      - m5a.24xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - x1.16xlarge
      - x1.32xlarge
      - p2.xlarge
      - p2.8xlarge
      - p2.16xlarge
      - p3.2xlarge
      - p3.8xlarge
      - p3.16xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.12xlarge
      - r5.24xlarge
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.12xlarge
      - r5d.24xlarge
      - z1d.large
      - z1d.xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.12xlarge
    ConstraintDescription: Must be a valid EC2 instance type
    Description: Type of EC2 instance for the Spot Node group (4 of 4)
    Type: String
  NumberOfNodes:
    Default: 3
    Description: Number of EKS node instances
    Type: Number
  NodeGroupName:
    Default: Default
    Description: Name for EKS node group
    Type: String
  NodeVolumeSize:
    Default: 20
    Description: Size for node volumes
    Type: String
  EKSControlPlane:
    Type: String
  ControlPlaneSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
  NodeInstanceProfile:
    Type: String
  KubernetesVersion:
    Type: String
    AllowedValues: ["1.13", "1.12", "1.11"]
    Default: "1.13"
Mappings:
  K8sVersionMap:
    "1.13":
      STD: AMZNEKS113
      GPU: AMZNEKS113GPU
    "1.12":
      STD: AMZNEKS112
      GPU: AMZNEKS112GPU
    "1.11":
      STD: AMZNEKS111
      GPU: AMZNEKS111GPU
  InstanceTypes:
    t2.small: {Type: STD}
    t2.medium: {Type: STD}
    t2.large: {Type: STD}
    t2.xlarge: {Type: STD}
    t2.2xlarge: {Type: STD}
    t3.nano: {Type: STD}
    t3.micro: {Type: STD}
    t3.small: {Type: STD}
    t3.medium: {Type: STD}
    t3.large: {Type: STD}
    t3.xlarge: {Type: STD}
    t3.2xlarge: {Type: STD}
    m3.medium: {Type: STD}
    m3.large: {Type: STD}
    m3.xlarge: {Type: STD}
    m3.2xlarge: {Type: STD}
    m4.large: {Type: STD}
    m4.xlarge: {Type: STD}
    m4.2xlarge: {Type: STD}
    m4.4xlarge: {Type: STD}
    m4.10xlarge: {Type: STD}
    m5.large: {Type: STD}
    m5.xlarge: {Type: STD}
    m5.2xlarge: {Type: STD}
    m5.4xlarge: {Type: STD}
    m5.12xlarge: {Type: STD}
    m5.24xlarge: {Type: STD}
    m5.metal: {Type: STD}
    m5d.large: {Type: STD}
    m5d.xlarge: {Type: STD}
    m5d.2xlarge: {Type: STD}
    m5d.4xlarge: {Type: STD}
    m5d.12xlarge: {Type: STD}
    m5d.24xlarge: {Type: STD}
    m5d.metal: {Type: STD}
    m5a.large: {Type: STD}
    m5a.xlarge: {Type: STD}
    m5a.2xlarge: {Type: STD}
    m5a.4xlarge: {Type: STD}
    m5a.12xlarge: {Type: STD}
    m5a.24xlarge: {Type: STD}
    c4.large: {Type: STD}
    c4.xlarge: {Type: STD}
    c4.2xlarge: {Type: STD}
    c4.4xlarge: {Type: STD}
    c4.8xlarge: {Type: STD}
    c5.large: {Type: STD}
    c5.xlarge: {Type: STD}
    c5.2xlarge: {Type: STD}
    c5.4xlarge: {Type: STD}
    c5.9xlarge: {Type: STD}
    c5.18xlarge: {Type: STD}
    i3.large: {Type: STD}
    i3.xlarge: {Type: STD}
    i3.2xlarge: {Type: STD}
    i3.4xlarge: {Type: STD}
    i3.8xlarge: {Type: STD}
    i3.16xlarge: {Type: STD}
    r3.xlarge: {Type: STD}
    r3.2xlarge: {Type: STD}
    r3.4xlarge: {Type: STD}
    r3.8xlarge: {Type: STD}
    r4.large: {Type: STD}
    r4.xlarge: {Type: STD}
    r4.2xlarge: {Type: STD}
    r4.4xlarge: {Type: STD}
    r4.8xlarge: {Type: STD}
    r4.16xlarge: {Type: STD}
    x1.16xlarge: {Type: STD}
    x1.32xlarge: {Type: STD}
    p2.xlarge: {Type: GPU}
    p2.8xlarge: {Type: GPU}
    p2.16xlarge: {Type: GPU}
    p3.2xlarge: {Type: GPU}
    p3.8xlarge: {Type: GPU}
    p3.16xlarge: {Type: GPU}
    r5.large: {Type: STD}
    r5.xlarge: {Type: STD}
    r5.2xlarge: {Type: STD}
    r5.4xlarge: {Type: STD}
    r5.12xlarge: {Type: STD}
    r5.24xlarge: {Type: STD}
    r5d.large: {Type: STD}
    r5d.xlarge: {Type: STD}
    r5d.2xlarge: {Type: STD}
    r5d.4xlarge: {Type: STD}
    r5d.12xlarge: {Type: STD}
    r5d.24xlarge: {Type: STD}
    z1d.large: {Type: STD}
    z1d.xlarge: {Type: STD}
    z1d.2xlarge: {Type: STD}
    z1d.3xlarge: {Type: STD}
    z1d.6xlarge: {Type: STD}
    z1d.12xlarge: {Type: STD}
  AWSAMIRegionMap:
    AMI:
      AMZNEKS111: amazon-eks-node-1.11-v20
      AMZNEKS111GPU: amazon-eks-gpu-node-1.11-v20
      AMZNEKS112: amazon-eks-node-1.12-v20
      AMZNEKS112GPU: amazon-eks-gpu-node-1.12-v20
      AMZNEKS113: amazon-eks-node-1.13-v20
      AMZNEKS113GPU: amazon-eks-gpu-node-1.13-v20
    ap-northeast-1:
      AMZNEKS113: ami-0fde798d17145fae1
      AMZNEKS113GPU: ami-04cf69bbd6c0fae0b
      AMZNEKS111: ami-0a0b6606652f9b3b9
      AMZNEKS111GPU: ami-0a8f4e1f9bf09a81f
      AMZNEKS112: ami-0a9b3f8b4b65b402b
      AMZNEKS112GPU: ami-0cd09d7293f31df8a
    ap-northeast-2:
      AMZNEKS113: ami-07fd7609df6c8e39b
      AMZNEKS113GPU: ami-0730e699ed0118737
      AMZNEKS111: ami-0c84b3f055cda1afb
      AMZNEKS111GPU: ami-01db6bb089f6adfcf
      AMZNEKS112: ami-069f6a654a8795f72
      AMZNEKS112GPU: ami-006549812c03748cb
    ap-south-1:
      AMZNEKS113: ami-0a9b1c1807b1a40ab
      AMZNEKS113GPU: ami-005b754faac73f0cc
      AMZNEKS111: ami-00f1adebe5ab9a431
      AMZNEKS111GPU: ami-04645af6384529c5d
      AMZNEKS112: ami-01b6a163133c31994
      AMZNEKS112GPU: ami-09ad3a49fb13389a0
    ap-southeast-1:
      AMZNEKS113: ami-0361e14efd56a71c7
      AMZNEKS113GPU: ami-07be5e97a529cd146
      AMZNEKS111: ami-05e92412054db3f87
      AMZNEKS111GPU: ami-0e001196bd450aa0c
      AMZNEKS112: ami-03737a1ac334a5767
      AMZNEKS112GPU: ami-01be8fddd9b16320c
    ap-southeast-2:
      AMZNEKS113: ami-0237d87bc27daba65
      AMZNEKS113GPU: ami-0a2f4c3aeb596aa7e
      AMZNEKS111: ami-07eb76498b1ba6cd6
      AMZNEKS111GPU: ami-0c7132a332aa55aa6
      AMZNEKS112: ami-07580768e8538626f
      AMZNEKS112GPU: ami-0a1bf783357dd8492
    eu-central-1:
      AMZNEKS113: ami-0b7127e7a2a38802a
      AMZNEKS113GPU: ami-0fbbd205f797ecccd
      AMZNEKS111: ami-0234bc9c2b341aa02
      AMZNEKS111GPU: ami-05cb4f6e8be8b83f1
      AMZNEKS112: ami-0ee5ca4231511cafc
      AMZNEKS112GPU: ami-0ae5976723472b6d4
    eu-north-1:
      AMZNEKS113: ami-0fd05922165907b85
      AMZNEKS113GPU: ami-0641def7f02a4cac5
      AMZNEKS111: ami-02ebf24da505128f9
      AMZNEKS111GPU: ami-078c260b9a737fc35
      AMZNEKS112: ami-03e60b5a990893129
      AMZNEKS112GPU: ami-0122b7e2a6736e3c5
    eu-west-1:
      AMZNEKS113: ami-00ac2e6b3cb38a9b9
      AMZNEKS113GPU: ami-0f9571a3e65dc4e20
      AMZNEKS111: ami-06902949103360023
      AMZNEKS111GPU: ami-02f337476a5c33f1b
      AMZNEKS112: ami-0404d23c7e8188740
      AMZNEKS112GPU: ami-042f9abf2f96a0097
    eu-west-2:
      AMZNEKS113: ami-0147919d2ff9a6ad5
      AMZNEKS113GPU: ami-032348bd69c5dd665
      AMZNEKS111: ami-0db100ad46c7966d2
      AMZNEKS111GPU: ami-0aa2208dbb9bb7cc5
      AMZNEKS112: ami-07346d8553f83f9d6
      AMZNEKS112GPU: ami-0b87e9246afd42760
    eu-west-3:
      AMZNEKS113: ami-0537ee9329c1628a2
      AMZNEKS113GPU: ami-053962359d6859fec
      AMZNEKS111: ami-052046d313576d0ba
      AMZNEKS111GPU: ami-0f6ea479cb4e7a4d2
      AMZNEKS112: ami-038cb36289174bac4
      AMZNEKS112GPU: ami-0d9405868a6e9ee11
    us-east-1:
      AMZNEKS113: ami-0f2e8e5663e16b436
      AMZNEKS113GPU: ami-0017d945a10387606
      AMZNEKS111: ami-0a5f5d5b0f6f58199
      AMZNEKS111GPU: ami-07207754196c1a8fc
      AMZNEKS112: ami-0e380e0a62d368837
      AMZNEKS112GPU: ami-06e46a15650294dfa
    us-east-2:
      AMZNEKS113: ami-0485258c2d1c3608f
      AMZNEKS113GPU: ami-0ccac9d9b57864000
      AMZNEKS111: ami-03c6648b74285020f
      AMZNEKS111GPU: ami-0b87186dda80931ee
      AMZNEKS112: ami-0fe61ae4c397e710d
      AMZNEKS112GPU: ami-067d88fb64d3d7990
    us-west-2:
      AMZNEKS113: ami-03a55127c613349a7
      AMZNEKS113GPU: ami-08335952e837d087b
      AMZNEKS111: ami-057d1c0dcb254a878
      AMZNEKS111GPU: ami-052da6a4e0ae156ad
      AMZNEKS112: ami-0355c210cb3f58aa2
      AMZNEKS112GPU: ami-084e8e620163aa50e
Resources:
  NodeSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for all nodes in the node group
      VpcId: !Ref VPCID
      Tags:
        - Key: !Sub "kubernetes.io/cluster/${EKSControlPlane}"
          Value: 'owned'
  NodeSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow node to communicate with each other
      GroupId: !Ref NodeSecurityGroup
      SourceSecurityGroupId: !Ref NodeSecurityGroup
      IpProtocol: '-1'
      FromPort: 0
      ToPort: 65535
  NodeSecurityGroupFromControlPlaneIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow worker Kubelets and pods to receive communication from the cluster control plane
      GroupId: !Ref NodeSecurityGroup
      SourceSecurityGroupId: !Ref ControlPlaneSecurityGroup
      IpProtocol: tcp
      FromPort: 1025
      ToPort: 65535
  ControlPlaneEgressToNodeSecurityGroup:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Allow the cluster control plane to communicate with worker Kubelet and pods
      GroupId: !Ref ControlPlaneSecurityGroup
      DestinationSecurityGroupId: !Ref NodeSecurityGroup
      IpProtocol: tcp
      FromPort: 1025
      ToPort: 65535
  NodeSecurityGroupFromControlPlaneOn443Ingress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow pods running extension API servers on port 443 to receive communication from cluster control plane
      GroupId: !Ref NodeSecurityGroup
      SourceSecurityGroupId: !Ref ControlPlaneSecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
  ControlPlaneEgressToNodeSecurityGroupOn443:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Allow the cluster control plane to communicate with pods running extension API servers on port 443
      GroupId: !Ref ControlPlaneSecurityGroup
      DestinationSecurityGroupId: !Ref NodeSecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
  ClusterControlPlaneSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow pods to communicate with the cluster API Server
      GroupId: !Ref ControlPlaneSecurityGroup
      SourceSecurityGroupId: !Ref NodeSecurityGroup
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
  NodeGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      #AutoScalingGroupName: String
      # AvailabilityZones:
      #   - String
      #Cooldown: String
      DesiredCapacity: !Ref NumberOfNodes
      #HealthCheckGracePeriod: Integer
      #HealthCheckType: String
      #InstanceId: String
      #LaunchConfigurationName: String
      #LaunchTemplate: !Ref NodeLaunchTemplate
      # LifecycleHookSpecificationList:
      #   - LifecycleHookSpecification
      # LoadBalancerNames:
      #   - String
      MaxSize: !Ref NumberOfNodes
      # MetricsCollection:
      #   - MetricsCollection
      MinSize: !Ref NumberOfNodes
      # NotificationConfigurations:
      #   - NotificationConfiguration
      #PlacementGroup: String
      #ServiceLinkedRoleARN: String
      Tags:
        - Key: Name
          Value: !Sub "${EKSControlPlane}-${NodeGroupName}-SpotNode"
          PropagateAtLaunch: true
        - Key: !Sub 'kubernetes.io/cluster/${EKSControlPlane}'
          Value: 'owned'
          PropagateAtLaunch: true
      # TargetGroupARNs:
      #   - String
      # TerminationPolicies:
      #   - String
      VPCZoneIdentifier: [!Ref PrivateSubnet1ID, !Ref PrivateSubnet2ID, !Ref PrivateSubnet3ID]
      MixedInstancesPolicy:
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref NodeLaunchTemplate
            Version: !GetAtt NodeLaunchTemplate.LatestVersionNumber
          Overrides:
            - InstanceType: !Ref SpotNodeInstanceType1
            - InstanceType: !Ref SpotNodeInstanceType2
            - InstanceType: !Ref SpotNodeInstanceType3
            - InstanceType: !Ref SpotNodeInstanceType4
        InstancesDistribution:
          #OnDemandAllocationStrategy: prioritized
          #OnDemandBaseCapacity: 0
          OnDemandPercentageAboveBaseCapacity: 0 #Spot only
          #SpotAllocationStrategy: lowest-price
          SpotInstancePools: 4
          #SpotMaxPrice: auto set to on demand price
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: 1
        MaxBatchSize: 1
  NodeLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      #LaunchTemplateName:
      LaunchTemplateData:
        #SecurityGroups: !Ref NodeSecurityGroup (EC2 classic, default VPC)
        #SecurityGroupIds: [ !Ref NodeSecurityGroup ]
        # TagSpecifications:
        #   ResourceType: instance
        #   Tags:
        #   - Key: Name
        #     Value: !Sub "${EKSControlPlane}-${NodeGroupName}-LaunchTemplate"
        #   - Key: !Sub 'kubernetes.io/cluster/${EKSControlPlane}'
        #     Value: 'owned'
        #InstanceInitiatedShutdownBehavior: `stop` or `terminate`
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              VolumeSize: !Ref NodeVolumeSize
              VolumeType: gp2
              DeleteOnTermination: true
        IamInstanceProfile:
          Name: !Ref NodeInstanceProfile
        #KernelId: String
        #EbsOptimized: true or false
        KeyName: !Ref KeyPairName
        #DisableApiTermination: Boolean
        # ElasticGpuSpecifications:
        # - ElasticGpuSpecification
        #Placement: Placement
        #InstanceMarketOptions: InstanceMarketOptions
        NetworkInterfaces:
          - DeviceIndex: 0
            AssociatePublicIpAddress: false
            Description: String
            Groups:
              - !Ref NodeSecurityGroup
              #SourceDestCheck: false
        ImageId: !FindInMap
          - AWSAMIRegionMap
          - !Ref "AWS::Region"
          - !FindInMap
            - K8sVersionMap
            - !Ref KubernetesVersion
            - !FindInMap
              - InstanceTypes
              - !Ref SpotNodeInstanceType1
              - Type
        InstanceType: !Ref SpotNodeInstanceType1
        #RamDiskId: String
        #Monitoring: Monitoring
        #CreditSpecification: CreditSpecification
        #CpuCredits: The credit option for CPU usage of a T2 instance. Valid values include standard and unlimited.
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            set -o xtrace
            /etc/eks/bootstrap.sh ${EKSControlPlane} --kubelet-extra-args \
              '--node-labels=partition=spot-agents \
              --register-with-taints=partition=spot-agents:NoSchedule' \
            /opt/aws/bin/cfn-signal --exit-code $? \
                  --stack  ${AWS::StackName} \
                  --resource NodeGroup  \
                  --region ${AWS::Region}
Outputs:
  EKSNodeSecurityGroup:
    Value: !Ref NodeSecurityGroup
