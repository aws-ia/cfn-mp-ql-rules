{"AWSTemplateFormatVersion": "2010-09-09", "Description": "AWS Cloudformation template to create an EC2 instance, installs Data Lake walkthrough webapp and creates ELB. **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.(qs-1nncltg6i)", "Parameters": {"DatasetS3BucketName": {"Description": "Dataset bucket name for the Quick Start dataset. Dataset bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-). Required only if Create Demonstration is set to \"yes\"", "Default": "aws-quickstart-datasets", "Type": "String"}, "DatasetS3KeyPrefix": {"Description": "S3 key prefix for the Quick Start dataset. Dataset key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended. Required only if Create Demonstration is set to \"yes\"", "Default": "quickstart-datalake-qubole/v1", "Type": "String"}, "HadoopMasterInstanceType": {"Description": "The EC2 instance type for Hadoop master node.", "Default": "m3.xlarge", "Type": "String"}, "HadoopMaxNodesCount": {"Default": "2", "Description": "The maximum number of Hadoop nodes.", "Type": "Number"}, "HadoopSlaveInstanceType": {"Description": "The EC2 instance type for Hadoop slave node.", "Default": "m3.xlarge", "Type": "String"}, "InstanceProfileName": {"Description": "The name of the instance profile to create.", "Type": "String"}, "KeyName": {"ConstraintDescription": "Can contain only ASCII characters.", "Description": "Name of an existing EC2 KeyPair to enable SSH access to webserver instance.", "Type": "AWS::EC2::KeyPair::KeyName"}, "PublicSubnet1ID": {"Description": "ID of the public subnet 1 that you want to provision the elastic load balancer into (e.g., subnet-a0246dcd).", "Type": "AWS::EC2::Subnet::Id"}, "QSS3BucketName": {"Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).", "Default": "aws-quickstart", "Type": "String"}, "QSS3KeyPrefix": {"Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.", "Default": "quickstart-datalake-qubole/", "Type": "String"}, "QuboleApiToken": {"Description": "Qubole account API token.", "NoEcho": "true", "Type": "String"}, "QuboleLoggingBucketName": {"Description": "Qubole logging bucket name.", "Type": "String"}, "RDSDatabaseName": {"Description": "The name of the database created when the RDS instance was provisioned.", "Default": "qubole", "Type": "String"}, "RDSHostname": {"Description": "The hostname for the RDS instance.", "Type": "String"}, "RDSPassword": {"Description": "The password that is associated with the master user account for the RDS that was created.", "NoEcho": "true", "Type": "String"}, "RDSPort": {"Description": "The port that the RDS instance listens on.", "Default": "3306", "Type": "Number"}, "RDSUsername": {"Description": "The user name that is associated with the master user account for the RDS that was created.", "Default": "rdsuser", "Type": "String"}, "SparkMasterInstanceType": {"Description": "The EC2 instance type for Spark master node.", "Default": "m3.xlarge", "Type": "String"}, "SparkMaxNodesCount": {"Default": "2", "Description": "The maximum number of Spark nodes.", "Type": "Number"}, "SparkSlaveInstanceType": {"Description": "The EC2 instance type for Spark slave node.", "Default": "m3.2xlarge", "Type": "String"}, "VpcId": {"Description": "ID of your existing VPC (e.g., vpc-0343606e).", "Type": "AWS::EC2::VPC::Id"}, "RemoteAccessCIDR": {"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$", "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x", "Description": "CIDR block allowed to access Webserver and SSH into Webserver instance. You can use http://checkip.amazonaws.com/ to check your IP address. CIDR block parameter must be in the form x.x.x.x/x (e.g., 96.127.8.12/32, YOUR_IP/32).", "Type": "String"}, "WizardInstanceType": {"AllowedValues": ["t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large"], "ConstraintDescription": "must be a valid EC2 instance type.", "Default": "t2.micro", "Description": "The EC2 instance type for the Qubole Quick Start Walkthrough Web server.", "Type": "String"}, "WizardPassword": {"Description": "The password for Qubole Quick Start Walkthrough web application. Password must contain 8 to 64 ASCII characters. It must contain 1 uppercase letter, 1 lowercase letter, and 1 number.", "NoEcho": "true", "Type": "String"}, "WizardUsername": {"Description": "The user name for Qubole Quick Start Walkthrough web application. User name must contain 1 to 64 ASCII characters.", "Default": "QuboleUser", "Type": "String"}}, "Mappings": {"AWSAMIRegionMap": {"AMI": {"AMZNLINUXHVM": "amzn-ami-hvm-2018.03.0.20190611-x86_64-gp2"}, "ap-northeast-1": {"AMZNLINUXHVM": "ami-0ab3e16f9c414dee7"}, "ap-northeast-2": {"AMZNLINUXHVM": "ami-0e1e385b0a934254a"}, "ap-south-1": {"AMZNLINUXHVM": "ami-02913db388613c3e1"}, "ap-southeast-1": {"AMZNLINUXHVM": "ami-05c859630889c79c8"}, "ap-southeast-2": {"AMZNLINUXHVM": "ami-07cc15c3ba6f8e287"}, "ca-central-1": {"AMZNLINUXHVM": "ami-04070f04f450607dc"}, "eu-central-1": {"AMZNLINUXHVM": "ami-010fae13a16763bb4"}, "eu-west-1": {"AMZNLINUXHVM": "ami-028188d9b49b32a80"}, "eu-west-2": {"AMZNLINUXHVM": "ami-04de2b60dd25fbb2e"}, "sa-east-1": {"AMZNLINUXHVM": "ami-0e2c2c29d8017dd99"}, "us-east-1": {"AMZNLINUXHVM": "ami-00eb20669e0990cb4"}, "us-east-2": {"AMZNLINUXHVM": "ami-0c64dd618a49aeee8"}, "us-west-1": {"AMZNLINUXHVM": "ami-0bce08e823ed38bdd"}, "us-west-2": {"AMZNLINUXHVM": "ami-08d489468314a58df"}}}, "Resources": {"InstanceSecurityGroup": {"Properties": {"GroupDescription": "Enable HTTP access for web server", "SecurityGroupIngress": [{"CidrIp": {"Ref": "RemoteAccessCIDR"}, "FromPort": "22", "IpProtocol": "tcp", "ToPort": "22"}, {"CidrIp": "0.0.0.0/0", "FromPort": "80", "IpProtocol": "tcp", "ToPort": "80"}], "VpcId": {"Ref": "VpcId"}}, "Type": "AWS::EC2::SecurityGroup"}, "WebServerEC2Instance": {"Metadata": {"AWS::CloudFormation::Init": {"config": {"commands": {"1_run_bootstrap": {"command": "/etc/bootstrap.sh"}, "2_import_database": {"command": {"Fn::Sub": "mysql -u${RDSUsername} -p'${RDSPassword}' -h ${RDSHostname} -P ${RDSPort} -D ${RDSDatabaseName} < /home/ec2-user/qusql_2017-07-20.sql"}}, "3_run_webserver": {"command": "runuser -l ec2-user -c \"sudo python3.4 /home/ec2-user/assets/web/app.py --config /etc/production.ini > server.log 2>&1 &\""}}, "files": {"/etc/bootstrap.sh": {"content": {"Fn::Join": ["\n", ["#!/bin/bash", "set -e", "# Install python requirements", "pip-3.4 install flask==0.12.1", "pip-3.4 install awscli==1.11.84", "pip-3.4 install psycopg2==2.7.1", "pip-3.4 install jinja2==2.9.6", "pip-3.4 install boto3==1.4.4", "pip-3.4 install qds-sdk==1.9.7", "alias aws=/usr/local/bin/aws", "cd /home/ec2-user", {"Fn::Sub": "aws s3 cp s3://${QSS3BucketName}/${QSS3KeyPrefix}assets/assets.zip ."}, "unzip assets.zip", "rm assets.zip", {"Fn::Sub": "aws s3 cp s3://${DatasetS3BucketName}/${DatasetS3KeyPrefix}/retail-dataset/qusql_2017-07-20.sql ."}, "cd /home/ec2-user/assets", "python3.4 setup.py develop", "chown -R ec2-user:ec2-user /home/ec2-user"]]}, "group": "ec2-user", "mode": "000770", "owner": "ec2-user"}, "/etc/production.ini": {"content": {"Fn::Join": ["\n", ["[webapp]", "port=80", {"Fn::Sub": "webapp_username=${WizardUsername}"}, {"Fn::Sub": "webapp_password=${WizardPassword}"}, "[aws]", {"Fn::Sub": "region_name=${AWS::Region}"}, {"Fn::Sub": "stack_name=${AWS::StackName}"}, "[qubole]", {"Fn::Sub": "qubole_api_token=${QuboleApiToken}"}, {"Fn::Sub": "cluster_vpc_id=${VpcId}"}, {"Fn::Sub": "cluster_subnet_id=${PublicSubnet1ID}"}, "qubole_data_store_name=quickstart_datastore", "qubole_database_name=quboledb", {"Fn::Sub": "qubole_web_logs_s3_url=https://s3.amazonaws.com/${DatasetS3BucketName}/${DatasetS3KeyPrefix}/retail-dataset/web_logs/web_logs"}, {"Fn::Sub": "qubole_web_logs_s3_dir=s3://${DatasetS3BucketName}/${DatasetS3KeyPrefix}/retail-dataset/web_logs/"}, "[rds]", "rds_database_type=mysql", {"Fn::Sub": "rds_database_name=${RDSDatabaseName}"}, {"Fn::Sub": "rds_username=${RDSUsername}"}, {"Fn::Sub": "rds_password=${RDSPassword}"}, {"Fn::Sub": "rds_hostname=${RDSHostname}"}, {"Fn::Sub": "rds_port=${RDSPort}"}, "[hadoop]", "hadoop_cluster_name=hadoop2-quickstart", {"Fn::Sub": "hadoop_master_instance_type=${HadoopMasterInstanceType}"}, {"Fn::Sub": "hadoop_slave_instance_type=${HadoopSlaveInstanceType}"}, {"Fn::Sub": "hadoop_max_nodes_count=${HadoopMaxNodesCount}"}, "[spark]", "spark_cluster_name=spark-quickstart", "spark_notebook_name=spark_quickstart", "spark_dashboard_notebook_name=dashboard_quickstart", {"Fn::Sub": "spark_notebook_s3_url=https://s3.amazonaws.com/${DatasetS3BucketName}/${DatasetS3KeyPrefix}/spark_quickstart.json"}, {"Fn::Sub": "spark_dashboard_notebook_s3_url=https://s3.amazonaws.com/${DatasetS3BucketName}/${DatasetS3KeyPrefix}/dashboard_quickstart.json"}, {"Fn::Sub": "spark_master_instance_type=${SparkMasterInstanceType}"}, {"Fn::Sub": "spark_slave_instance_type=${SparkSlaveInstanceType}"}, {"Fn::Sub": "spark_max_nodes_count=${SparkMaxNodesCount}"}]]}, "group": "ec2-user", "mode": "000444", "owner": "ec2-user"}}, "packages": {"yum": {"gcc": [], "mysql": [], "postgresql93-devel": [], "python34": [], "python34-devel": [], "python34-pip": []}}}}, "Comment": "Install Flask application"}, "Properties": {"IamInstanceProfile": {"Ref": "InstanceProfileName"}, "ImageId": {"Fn::FindInMap": ["AWSAMIRegionMap", {"Ref": "AWS::Region"}, "AMZNLINUXHVM"]}, "InstanceType": {"Ref": "WizardInstanceType"}, "KeyName": {"Ref": "KeyName"}, "NetworkInterfaces": [{"AssociatePublicIpAddress": true, "DeviceIndex": "0", "SubnetId": {"Ref": "PublicSubnet1ID"}, "GroupSet": [{"Fn::GetAtt": ["InstanceSecurityGroup", "GroupId"]}]}]}, "Type": "AWS::EC2::Instance"}}, "Outputs": {"URL": {"Value": {"Fn::Join": ["//", ["http:", {"Fn::GetAtt": ["WebServerEC2Instance", "PublicDnsName"]}]]}, "Description": "Public DNS Name of App Server"}}}
