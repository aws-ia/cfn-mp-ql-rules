{"AWSTemplateFormatVersion": "2010-09-09", "Description": "This template deploys a Windows based web application stack distributed across two availability zones. Instances are bootstrapped both by CloudFormation and within Windows using PowerShell DSC. **WARNING** This template creates Amazon EC2 Windows instance and related resources. You will be billed for the AWS resources used if you create a stack from this template. QS(000C)", "Parameters": {"AdminPassword": {"AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*", "Description": "Password for the Administrator user account. Must be at least 8 characters containing letters, numbers and symbols", "MaxLength": "32", "MinLength": "8", "NoEcho": "true", "Type": "String"}, "ADServer1PrivateIP": {"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$", "Default": "10.0.0.10", "Description": "Fixed private IP for the first Active Directory server located in Availability Zone 1", "Type": "String"}, "ADServer2PrivateIP": {"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$", "Default": "10.0.32.10", "Description": "Fixed private IP for the second Active Directory server located in Availability Zone 2", "Type": "String"}, "DomainDNSName": {"AllowedPattern": "[a-zA-Z0-9]+\\..+", "Default": "example.com", "Description": "Fully qualified domain name (FQDN) of the forest root domain e.g. example.com", "MaxLength": "25", "MinLength": "3", "Type": "String"}, "DomainNetBIOSName": {"AllowedPattern": "[a-zA-Z0-9]+", "Default": "EXAMPLE", "Description": "NetBIOS name of the domain (up to 15 characters) for users of earlier versions of Windows e.g. EXAMPLE", "MaxLength": "15", "MinLength": "1", "Type": "String"}, "KeyPairName": {"Description": "Public/private key pairs allow you to securely connect to your instance after it launches", "Type": "AWS::EC2::KeyPair::KeyName"}, "PrivateSubnet1CIDR": {"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$", "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28", "Default": "10.0.0.0/19", "Description": "CIDR block for private subnet 1 located in Availability Zone 1.", "Type": "String"}, "PrivateSubnet1ID": {"Description": "ID of the private subnet 1 in Availability Zone 1 (e.g., subnet-a0246dcd)", "Type": "AWS::EC2::Subnet::Id"}, "PrivateSubnet2CIDR": {"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$", "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28", "Default": "10.0.32.0/19", "Description": "CIDR block for private subnet 2 located in Availability Zone 2.", "Type": "String"}, "PrivateSubnet2ID": {"Description": "ID of the private subnet 2 in Availability Zone 2 (e.g., subnet-a0246dcd)", "Type": "AWS::EC2::Subnet::Id"}, "PublicSubnet1CIDR": {"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$", "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28", "Default": "10.0.128.0/20", "Description": "CIDR Block for the public DMZ subnet 1 located in Availability Zone 1", "Type": "String"}, "PublicSubnet1ID": {"Description": "ID of the public subnet 1 that you want to provision the first Remote Desktop Gateway into (e.g., subnet-a0246dcd)", "Type": "AWS::EC2::Subnet::Id"}, "PublicSubnet2CIDR": {"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$", "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28", "Default": "10.0.144.0/20", "Description": "CIDR Block for the public DMZ subnet 2 located in Availability Zone 2", "Type": "String"}, "PublicSubnet2ID": {"Description": "ID of the public subnet 2 you want to provision the second Remote Desktop Gateway into (e.g., subnet-e3246d8e)", "Type": "AWS::EC2::Subnet::Id"}, "QSS3BucketName": {"AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$", "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).", "Default": "aws-quickstart", "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).", "Type": "String"}, "QSS3KeyPrefix": {"AllowedPattern": "^[0-9a-zA-Z-/]*$", "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).", "Default": "quickstart-microsoft-powershelldsc/", "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).", "Type": "String"}, "RDGWCIDR": {"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$", "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x", "Description": "Allowed CIDR Block for external access to the Remote Desktop Gateways", "Type": "String"}, "VPCCIDR": {"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$", "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28", "Default": "10.0.0.0/16", "Description": "CIDR Block for the VPC", "Type": "String"}, "VPCID": {"Description": "ID of the VPC (e.g., vpc-0343606e)", "Type": "AWS::EC2::VPC::Id"}, "WindowsInstanceType": {"AllowedValues": ["t2.large", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m5.large"], "Default": "t2.large", "Description": "Amazon EC2 instance type for the Windows Instances", "Type": "String"}, "LatestAmiId": {"Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>", "Default": "/aws/service/ami-windows-latest/Windows_Server-2012-R2_RTM-English-64Bit-Base"}}, "Conditions": {"GovCloudCondition": {"Fn::Equals": [{"Ref": "AWS::Region"}, "us-gov-west-1"]}}, "Rules": {"SubnetsInVPC": {"Assertions": [{"Assert": {"Fn::EachMemberIn": [{"Fn::ValueOfAll": ["AWS::EC2::Subnet::Id", "VpcId"]}, {"Fn::RefAll": "AWS::EC2::VPC::Id"}]}, "AssertDescription": "All subnets must in the VPC"}]}}, "Resources": {"EC2Role": {"Type": "AWS::IAM::Role", "Properties": {"AssumeRolePolicyDocument": {"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Principal": {"Service": ["ec2.amazonaws.com"]}, "Action": ["sts:AssumeRole"]}]}, "Path": "/", "Policies": [{"PolicyDocument": {"Version": "2012-10-17", "Statement": [{"Action": ["s3:GetObject"], "Resource": {"Fn::Sub": ["arn:${Partition}:s3:::${QSS3BucketName}/${QSS3KeyPrefix}*", {"Partition": {"Fn::If": ["GovCloudCondition", "aws-us-gov", "aws"]}}]}, "Effect": "Allow"}]}, "PolicyName": "aws-quick-start-s3-policy"}]}}, "EC2RoleInstanceProfile": {"Type": "AWS::IAM::InstanceProfile", "Properties": {"Path": "/", "Roles": [{"Ref": "EC2Role"}]}}, "RDGWEIP1": {"Type": "AWS::EC2::EIP", "Properties": {"Domain": "vpc", "InstanceId": {"Ref": "RDGW1"}}}, "RDGWEIP2": {"Type": "AWS::EC2::EIP", "Properties": {"Domain": "vpc", "InstanceId": {"Ref": "RDGW2"}}}, "DC1": {"Type": "AWS::EC2::Instance", "Metadata": {"AWS::CloudFormation::Authentication": {"S3AccessCreds": {"type": "S3", "roleName": {"Ref": "EC2Role"}, "buckets": [{"Ref": "QSS3BucketName"}]}}, "AWS::CloudFormation::Init": {"configSets": {"config": ["setup", "rename", "bootstrapDSC", "finalize"]}, "setup": {"files": {"c:\\cfn\\cfn-hup.conf": {"content": {"Fn::Join": ["", ["[main]\n", "stack=", {"Ref": "AWS::StackName"}, "\n", "region=", {"Ref": "AWS::Region"}, "\n"]]}}, "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {"content": {"Fn::Join": ["", ["[cfn-auto-reloader-hook]\n", "triggers=post.update\n", "path=Resources.DC1.Metadata.AWS::CloudFormation::Init\n", "action=cfn-init.exe -v -c config -s ", {"Ref": "AWS::StackId"}, " -r DC1", " --region ", {"Ref": "AWS::Region"}, "\n"]]}}, "c:\\cfn\\scripts\\Unzip-Archive.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Unzip-Archive.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\modules\\AWSQuickStart.zip": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/modules/AWSQuickStart.zip", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\scripts\\CreateWaitHandle.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/CreateWaitHandle.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\scripts\\DC1.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/configs/DC1.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\scripts\\DC1-2.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/configs/DC1-2.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\scripts\\Reset-LocalAdminPassword.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Reset-LocalAdminPassword.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\scripts\\IPHelper.psm1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/IPHelper.psm1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\scripts\\New-DSCCertificate.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/New-DSCCertificate.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "C:\\cfn\\Modules\\xNetworking_2.1.zip": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/modules/xNetworking_2.1.zip", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "C:\\cfn\\Modules\\xComputerManagement_1.2.zip": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/modules/xComputerManagement_1.2.zip", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "C:\\cfn\\Modules\\xActiveDirectory_2.0.zip": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/modules/xActiveDirectory_2.0.zip", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}}, "services": {"windows": {"cfn-hup": {"enabled": "true", "ensureRunning": "true", "files": ["c:\\cfn\\cfn-hup.conf", "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"]}}}, "commands": {"a-set-execution-policy": {"command": "powershell.exe -command Set-ExecutionPolicy RemoteSigned -Force", "waitAfterCompletion": "0"}, "b-unpack-quickstart-module": {"command": "powershell.exe -command c:\\cfn\\scripts\\Unzip-Archive.ps1 -Source c:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\", "waitAfterCompletion": "0"}, "c-create-waithandle": {"command": {"Fn::Join": ["", ["powershell.exe -command \"c:\\cfn\\scripts\\CreateWaitHandle.ps1 -Handle '", {"Ref": "DC1WaitHandle"}, "'\""]]}, "waitAfterCompletion": "0"}, "d-unzip-modules": {"command": "powershell.exe -command \"Get-ChildItem 'C:\\cfn\\Modules' *.zip | Foreach-Object { c:\\cfn\\scripts\\unzip-archive.ps1 -source $_.fullname -destination 'C:\\Program Files\\WindowsPowerShell\\Modules'}\"", "waitAfterCompletion": "0"}}}, "rename": {"commands": {"a-reset-local-admin": {"command": {"Fn::Join": ["", ["powershell.exe -executionpolicy remotesigned -command C:\\cfn\\scripts\\Reset-LocalAdminPassword.ps1 -password '", {"Ref": "AdminPassword"}, "'"]]}, "waitAfterCompletion": "0"}, "b-rename-computer": {"command": "powershell.exe -Command Rename-Computer -NewName DC1 -Restart", "waitAfterCompletion": "forever"}}}, "bootstrapDSC": {"commands": {"a-create-cert": {"command": {"Fn::Join": ["", ["powershell.exe -command c:\\cfn\\scripts\\New-DSCCertificate.ps1 -Password '", {"Ref": "AdminPassword"}, "' -Instance DC1"]]}, "waitAfterCompletion": "0"}, "b-run-dsc-config-first": {"command": {"Fn::Join": ["", ["powershell.exe -Command c:\\cfn\\scripts\\DC1.ps1 -DomainDNSName ", {"Ref": "DomainDNSName"}, " -DomainNetBiosName ", {"Ref": "DomainNetBIOSName"}, " -AdminPassword '", {"Ref": "AdminPassword"}, "' -ADServer1PrivateIp ", {"Ref": "ADServer1PrivateIP"}, " -ADServer2PrivateIp ", {"Ref": "ADServer2PrivateIP"}, " -PrivateSubnet1CIDR ", {"Ref": "PrivateSubnet1CIDR"}, " -PrivateSubnet2CIDR ", {"Ref": "PrivateSubnet2CIDR"}, " -DMZ1CIDR ", {"Ref": "PublicSubnet1CIDR"}, " -DMZ2CIDR ", {"Ref": "PublicSubnet2CIDR"}]]}, "waitAfterCompletion": "forever"}, "c-run-dsc-config-second": {"command": {"Fn::Join": ["", ["powershell.exe -Command c:\\cfn\\scripts\\DC1-2.ps1", " -AdminPassword '", {"Ref": "AdminPassword"}, "' -DomainNetBiosName ", {"Ref": "DomainNetBIOSName"}]]}, "waitAfterCompletion": "0"}}}, "finalize": {"commands": {"a-write-status": {"command": "powershell.exe -command Write-AWSQuickStartStatus", "waitAfterCompletion": "0"}}}}}, "Properties": {"IamInstanceProfile": {"Ref": "EC2RoleInstanceProfile"}, "ImageId": {"Ref": "LatestAmiId"}, "InstanceType": {"Ref": "WindowsInstanceType"}, "SubnetId": {"Ref": "PrivateSubnet1ID"}, "Tags": [{"Key": "Name", "Value": "DC1"}, {"Key": "guid", "Value": "ef7cd161-8db3-42e3-bee0-78c262f94903"}], "BlockDeviceMappings": [{"DeviceName": "/dev/sda1", "Ebs": {"VolumeSize": "100", "VolumeType": "gp2"}}], "SecurityGroupIds": [{"Ref": "DomainController1SG"}], "PrivateIpAddress": {"Ref": "ADServer1PrivateIP"}, "KeyName": {"Ref": "KeyPairName"}}}, "DC2": {"Type": "AWS::EC2::Instance", "DependsOn": "DC1WaitCondition", "Metadata": {"AWS::CloudFormation::Authentication": {"S3AccessCreds": {"type": "S3", "roleName": {"Ref": "EC2Role"}, "buckets": [{"Ref": "QSS3BucketName"}]}}, "AWS::CloudFormation::Init": {"configSets": {"config": ["setup", "rename", "bootstrapDSC", "finalize"]}, "setup": {"files": {"c:\\cfn\\cfn-hup.conf": {"content": {"Fn::Join": ["", ["[main]\n", "stack=", {"Ref": "AWS::StackName"}, "\n", "region=", {"Ref": "AWS::Region"}, "\n"]]}}, "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {"content": {"Fn::Join": ["", ["[cfn-auto-reloader-hook]\n", "triggers=post.update\n", "path=Resources.DC2.Metadata.AWS::CloudFormation::Init\n", "action=cfn-init.exe -v -c config -s ", {"Ref": "AWS::StackId"}, " -r DC2", " --region ", {"Ref": "AWS::Region"}, "\n"]]}}, "c:\\cfn\\scripts\\Unzip-Archive.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Unzip-Archive.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\modules\\AWSQuickStart.zip": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/modules/AWSQuickStart.zip", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\scripts\\CreateWaitHandle.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/CreateWaitHandle.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\scripts\\DC2.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/configs/DC2.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\scripts\\Reset-LocalAdminPassword.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Reset-LocalAdminPassword.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\scripts\\IPHelper.psm1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/IPHelper.psm1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\scripts\\New-DSCCertificate.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/New-DSCCertificate.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "C:\\cfn\\Modules\\xNetworking_2.1.zip": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/modules/xNetworking_2.1.zip", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "C:\\cfn\\Modules\\xComputerManagement_1.2.zip": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/modules/xComputerManagement_1.2.zip", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "C:\\cfn\\Modules\\xActiveDirectory_2.0.zip": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/modules/xActiveDirectory_2.0.zip", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}}, "services": {"windows": {"cfn-hup": {"enabled": "true", "ensureRunning": "true", "files": ["c:\\cfn\\cfn-hup.conf", "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"]}}}, "commands": {"a-set-execution-policy": {"command": "powershell.exe -command Set-ExecutionPolicy RemoteSigned -Force", "waitAfterCompletion": "0"}, "b-unpack-quickstart-module": {"command": "powershell.exe -command c:\\cfn\\scripts\\Unzip-Archive.ps1 -Source c:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\", "waitAfterCompletion": "0"}, "c-create-waithandle": {"command": {"Fn::Join": ["", ["powershell.exe -command \"c:\\cfn\\scripts\\CreateWaitHandle.ps1 -Handle '", {"Ref": "DC2WaitHandle"}, "'\""]]}, "waitAfterCompletion": "0"}, "d-unzip-modules": {"command": "powershell.exe -command \"Get-ChildItem 'C:\\cfn\\Modules' *.zip | Foreach-Object { c:\\cfn\\scripts\\unzip-archive.ps1 -source $_.fullname -destination 'C:\\Program Files\\WindowsPowerShell\\Modules'}\"", "waitAfterCompletion": "0"}}}, "rename": {"commands": {"a-reset-local-admin": {"command": {"Fn::Join": ["", ["powershell.exe -executionpolicy remotesigned -command C:\\cfn\\scripts\\Reset-LocalAdminPassword.ps1 -password '", {"Ref": "AdminPassword"}, "'"]]}, "waitAfterCompletion": "0"}, "b-rename-computer": {"command": "powershell.exe -Command Rename-Computer -NewName DC2 -Restart", "waitAfterCompletion": "forever"}}}, "bootstrapDSC": {"commands": {"a-create-cert": {"command": {"Fn::Join": ["", ["powershell.exe -command c:\\cfn\\scripts\\New-DSCCertificate.ps1 -Password '", {"Ref": "AdminPassword"}, "' -Instance DC2"]]}, "waitAfterCompletion": "0"}, "b-run-dsc-config": {"command": {"Fn::Join": ["", ["powershell.exe -Command c:\\cfn\\scripts\\DC2.ps1 -DomainDNSName ", {"Ref": "DomainDNSName"}, " -DomainNetBiosName ", {"Ref": "DomainNetBIOSName"}, " -AdminPassword '", {"Ref": "AdminPassword"}, "' -ADServer1PrivateIp ", {"Ref": "ADServer1PrivateIP"}, " -ADServer2PrivateIp ", {"Ref": "ADServer2PrivateIP"}, " -PrivateSubnet1CIDR ", {"Ref": "PrivateSubnet1CIDR"}, " -PrivateSubnet2CIDR ", {"Ref": "PrivateSubnet2CIDR"}]]}, "waitAfterCompletion": "forever"}}}, "finalize": {"commands": {"a-write-status": {"command": "powershell.exe -command Write-AWSQuickStartStatus", "waitAfterCompletion": "0"}}}}}, "Properties": {"IamInstanceProfile": {"Ref": "EC2RoleInstanceProfile"}, "ImageId": {"Ref": "LatestAmiId"}, "InstanceType": {"Ref": "WindowsInstanceType"}, "SubnetId": {"Ref": "PrivateSubnet2ID"}, "Tags": [{"Key": "Name", "Value": "DC2"}, {"Key": "guid", "Value": "481b2c9c-84f3-41c7-a9a6-492ed5c2ddd2"}], "BlockDeviceMappings": [{"DeviceName": "/dev/sda1", "Ebs": {"VolumeSize": "100", "VolumeType": "gp2"}}], "SecurityGroupIds": [{"Ref": "DomainController2SG"}], "PrivateIpAddress": {"Ref": "ADServer2PrivateIP"}, "KeyName": {"Ref": "KeyPairName"}}}, "RDGW1": {"Type": "AWS::EC2::Instance", "DependsOn": "DC1WaitCondition", "Metadata": {"AWS::CloudFormation::Authentication": {"S3AccessCreds": {"type": "S3", "roleName": {"Ref": "EC2Role"}, "buckets": [{"Ref": "QSS3BucketName"}]}}, "AWS::CloudFormation::Init": {"configSets": {"config": ["setup", "rename", "bootstrapDSC", "finalize"]}, "setup": {"files": {"c:\\cfn\\cfn-hup.conf": {"content": {"Fn::Join": ["", ["[main]\n", "stack=", {"Ref": "AWS::StackName"}, "\n", "region=", {"Ref": "AWS::Region"}, "\n"]]}}, "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {"content": {"Fn::Join": ["", ["[cfn-auto-reloader-hook]\n", "triggers=post.update\n", "path=Resources.RDGW1.Metadata.AWS::CloudFormation::Init\n", "action=cfn-init.exe -v -c config -s ", {"Ref": "AWS::StackId"}, " -r RDGW1", " --region ", {"Ref": "AWS::Region"}, "\n"]]}}, "c:\\cfn\\scripts\\Unzip-Archive.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Unzip-Archive.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\modules\\AWSQuickStart.zip": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/modules/AWSQuickStart.zip", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\scripts\\CreateWaitHandle.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/CreateWaitHandle.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\scripts\\RDGW1.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/configs/RDGW1.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\scripts\\Reset-LocalAdminPassword.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Reset-LocalAdminPassword.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\scripts\\New-DSCCertificate.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/New-DSCCertificate.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "C:\\cfn\\Modules\\xNetworking_2.1.zip": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/modules/xNetworking_2.1.zip", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "C:\\cfn\\Modules\\xComputerManagement_1.2.zip": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/modules/xComputerManagement_1.2.zip", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}}, "services": {"windows": {"cfn-hup": {"enabled": "true", "ensureRunning": "true", "files": ["c:\\cfn\\cfn-hup.conf", "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"]}}}, "commands": {"a-set-execution-policy": {"command": "powershell.exe -command Set-ExecutionPolicy RemoteSigned -Force", "waitAfterCompletion": "0"}, "b-unpack-quickstart-module": {"command": "powershell.exe -command c:\\cfn\\scripts\\Unzip-Archive.ps1 -Source c:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\", "waitAfterCompletion": "0"}, "c-create-waithandle": {"command": {"Fn::Join": ["", ["powershell.exe -command \"c:\\cfn\\scripts\\CreateWaitHandle.ps1 -Handle '", {"Ref": "RDGW1WaitHandle"}, "'\""]]}, "waitAfterCompletion": "0"}, "d-unzip-modules": {"command": "powershell.exe -command \"Get-ChildItem 'C:\\cfn\\Modules' *.zip | Foreach-Object { c:\\cfn\\scripts\\unzip-archive.ps1 -source $_.fullname -destination 'C:\\Program Files\\WindowsPowerShell\\Modules'}\"", "waitAfterCompletion": "0"}}}, "rename": {"commands": {"a-reset-local-admin": {"command": {"Fn::Join": ["", ["powershell.exe -executionpolicy remotesigned -command C:\\cfn\\scripts\\Reset-LocalAdminPassword.ps1 -password '", {"Ref": "AdminPassword"}, "'"]]}, "waitAfterCompletion": "0"}, "b-execute-powershell-script-RenameComputer": {"command": "powershell.exe -Command Rename-Computer -NewName RDGW1 -Restart", "waitAfterCompletion": "forever"}}}, "bootstrapDSC": {"commands": {"a-create-cert": {"command": {"Fn::Join": ["", ["powershell.exe -command c:\\cfn\\scripts\\New-DSCCertificate.ps1 -Password '", {"Ref": "AdminPassword"}, "' -Instance RDGW1"]]}, "waitAfterCompletion": "0"}, "b-run-dsc-config": {"command": {"Fn::Join": ["", ["powershell.exe -Command c:\\cfn\\scripts\\RDGW1.ps1 -DomainDNSName ", {"Ref": "DomainDNSName"}, " -DomainNetBiosName ", {"Ref": "DomainNetBIOSName"}, " -AdminPassword '", {"Ref": "AdminPassword"}, "' -ADServer1PrivateIp ", {"Ref": "ADServer1PrivateIP"}, " -ADServer2PrivateIp ", {"Ref": "ADServer2PrivateIP"}]]}, "waitAfterCompletion": "forever"}}}, "finalize": {"commands": {"a-write-status": {"command": "powershell.exe -command Write-AWSQuickStartStatus", "waitAfterCompletion": "0"}}}}}, "Properties": {"IamInstanceProfile": {"Ref": "EC2RoleInstanceProfile"}, "ImageId": {"Ref": "LatestAmiId"}, "InstanceType": {"Ref": "WindowsInstanceType"}, "SubnetId": {"Ref": "PublicSubnet1ID"}, "Tags": [{"Key": "Name", "Value": "RDGW1"}, {"Key": "guid", "Value": "7e92b294-5ff5-462e-9ffc-a5951698b594"}], "BlockDeviceMappings": [{"DeviceName": "/dev/sda1", "Ebs": {"VolumeSize": "50", "VolumeType": "gp2"}}], "SecurityGroupIds": [{"Ref": "RDGWSecurityGroup"}, {"Ref": "DomainMemberSG"}], "KeyName": {"Ref": "KeyPairName"}}}, "RDGW2": {"Type": "AWS::EC2::Instance", "DependsOn": "DC2WaitCondition", "Metadata": {"AWS::CloudFormation::Authentication": {"S3AccessCreds": {"type": "S3", "roleName": {"Ref": "EC2Role"}, "buckets": [{"Ref": "QSS3BucketName"}]}}, "AWS::CloudFormation::Init": {"configSets": {"config": ["setup", "rename", "bootstrapDSC", "finalize"]}, "setup": {"files": {"c:\\cfn\\cfn-hup.conf": {"content": {"Fn::Join": ["", ["[main]\n", "stack=", {"Ref": "AWS::StackName"}, "\n", "region=", {"Ref": "AWS::Region"}, "\n"]]}}, "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {"content": {"Fn::Join": ["", ["[cfn-auto-reloader-hook]\n", "triggers=post.update\n", "path=Resources.RDGW2.Metadata.AWS::CloudFormation::Init\n", "action=cfn-init.exe -v -c config -s ", {"Ref": "AWS::StackId"}, " -r RDGW2", " --region ", {"Ref": "AWS::Region"}, "\n"]]}}, "c:\\cfn\\scripts\\Unzip-Archive.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Unzip-Archive.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\modules\\AWSQuickStart.zip": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/modules/AWSQuickStart.zip", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\scripts\\CreateWaitHandle.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/CreateWaitHandle.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\scripts\\RDGW2.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/configs/RDGW2.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\scripts\\Reset-LocalAdminPassword.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Reset-LocalAdminPassword.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\scripts\\New-DSCCertificate.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/New-DSCCertificate.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "C:\\cfn\\Modules\\xNetworking_2.1.zip": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/modules/xNetworking_2.1.zip", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "C:\\cfn\\Modules\\xComputerManagement_1.2.zip": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/modules/xComputerManagement_1.2.zip", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}}, "services": {"windows": {"cfn-hup": {"enabled": "true", "ensureRunning": "true", "files": ["c:\\cfn\\cfn-hup.conf", "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"]}}}, "commands": {"a-set-execution-policy": {"command": "powershell.exe -command Set-ExecutionPolicy RemoteSigned -Force", "waitAfterCompletion": "0"}, "b-unpack-quickstart-module": {"command": "powershell.exe -command c:\\cfn\\scripts\\Unzip-Archive.ps1 -Source c:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\", "waitAfterCompletion": "0"}, "c-create-waithandle": {"command": {"Fn::Join": ["", ["powershell.exe -command \"c:\\cfn\\scripts\\CreateWaitHandle.ps1 -Handle '", {"Ref": "RDGW2WaitHandle"}, "'\""]]}, "waitAfterCompletion": "0"}, "d-unzip-modules": {"command": "powershell.exe -command \"Get-ChildItem 'C:\\cfn\\Modules' *.zip | Foreach-Object { c:\\cfn\\scripts\\unzip-archive.ps1 -source $_.fullname -destination 'C:\\Program Files\\WindowsPowerShell\\Modules'}\"", "waitAfterCompletion": "0"}}}, "rename": {"commands": {"a-reset-local-admin": {"command": {"Fn::Join": ["", ["powershell.exe -executionpolicy remotesigned -command C:\\cfn\\scripts\\Reset-LocalAdminPassword.ps1 -password '", {"Ref": "AdminPassword"}, "'"]]}, "waitAfterCompletion": "0"}, "b-execute-powershell-script-RenameComputer": {"command": "powershell.exe -Command Rename-Computer -NewName RDGW2 -Restart", "waitAfterCompletion": "forever"}}}, "bootstrapDSC": {"commands": {"a-create-cert": {"command": {"Fn::Join": ["", ["powershell.exe -command c:\\cfn\\scripts\\New-DSCCertificate.ps1 -Password '", {"Ref": "AdminPassword"}, "' -Instance RDGW2"]]}, "waitAfterCompletion": "0"}, "b-run-dsc-config": {"command": {"Fn::Join": ["", ["powershell.exe -Command c:\\cfn\\scripts\\RDGW2.ps1 -DomainDNSName ", {"Ref": "DomainDNSName"}, " -DomainNetBiosName ", {"Ref": "DomainNetBIOSName"}, " -AdminPassword '", {"Ref": "AdminPassword"}, "' -ADServer1PrivateIp ", {"Ref": "ADServer1PrivateIP"}, " -ADServer2PrivateIp ", {"Ref": "ADServer2PrivateIP"}]]}, "waitAfterCompletion": "forever"}}}, "finalize": {"commands": {"a-write-status": {"command": "powershell.exe -command Write-AWSQuickStartStatus", "waitAfterCompletion": "0"}}}}}, "Properties": {"IamInstanceProfile": {"Ref": "EC2RoleInstanceProfile"}, "ImageId": {"Ref": "LatestAmiId"}, "InstanceType": {"Ref": "WindowsInstanceType"}, "SubnetId": {"Ref": "PublicSubnet2ID"}, "Tags": [{"Key": "Name", "Value": "RDGW2"}, {"Key": "guid", "Value": "f1c34709-318f-4bb1-9a4e-7a1e47cfddfd"}], "BlockDeviceMappings": [{"DeviceName": "/dev/sda1", "Ebs": {"VolumeSize": "50", "VolumeType": "gp2"}}], "SecurityGroupIds": [{"Ref": "RDGWSecurityGroup"}, {"Ref": "DomainMemberSG"}], "KeyName": {"Ref": "KeyPairName"}}}, "WEB1": {"Type": "AWS::EC2::Instance", "DependsOn": "DC1WaitCondition", "Metadata": {"AWS::CloudFormation::Authentication": {"S3AccessCreds": {"type": "S3", "roleName": {"Ref": "EC2Role"}, "buckets": [{"Ref": "QSS3BucketName"}]}}, "AWS::CloudFormation::Init": {"configSets": {"config": ["setup", "rename", "bootstrapDSC", "finalize"]}, "setup": {"files": {"c:\\cfn\\cfn-hup.conf": {"content": {"Fn::Join": ["", ["[main]\n", "stack=", {"Ref": "AWS::StackName"}, "\n", "region=", {"Ref": "AWS::Region"}, "\n"]]}}, "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {"content": {"Fn::Join": ["", ["[cfn-auto-reloader-hook]\n", "triggers=post.update\n", "path=Resources.WEB1.Metadata.AWS::CloudFormation::Init\n", "action=cfn-init.exe -v -c config -s ", {"Ref": "AWS::StackId"}, " -r WEB1", " --region ", {"Ref": "AWS::Region"}, "\n"]]}}, "c:\\cfn\\scripts\\Unzip-Archive.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Unzip-Archive.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\modules\\AWSQuickStart.zip": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/modules/AWSQuickStart.zip", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\scripts\\CreateWaitHandle.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/CreateWaitHandle.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\scripts\\WEB1.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/configs/WEB1.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\scripts\\Reset-LocalAdminPassword.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Reset-LocalAdminPassword.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\scripts\\New-DSCCertificate.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/New-DSCCertificate.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "C:\\cfn\\Modules\\xNetworking_2.1.zip": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/modules/xNetworking_2.1.zip", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "C:\\cfn\\Modules\\xComputerManagement_1.2.zip": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/modules/xComputerManagement_1.2.zip", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}}, "services": {"windows": {"cfn-hup": {"enabled": "true", "ensureRunning": "true", "files": ["c:\\cfn\\cfn-hup.conf", "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"]}}}, "commands": {"a-set-execution-policy": {"command": "powershell.exe -command Set-ExecutionPolicy RemoteSigned -Force", "waitAfterCompletion": "0"}, "b-unpack-quickstart-module": {"command": "powershell.exe -command c:\\cfn\\scripts\\Unzip-Archive.ps1 -Source c:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\", "waitAfterCompletion": "0"}, "c-create-waithandle": {"command": {"Fn::Join": ["", ["powershell.exe -command \"c:\\cfn\\scripts\\CreateWaitHandle.ps1 -Handle '", {"Ref": "WEB1WaitHandle"}, "'\""]]}, "waitAfterCompletion": "0"}, "d-unzip-modules": {"command": "powershell.exe -command \"Get-ChildItem 'C:\\cfn\\Modules' *.zip | Foreach-Object { c:\\cfn\\scripts\\unzip-archive.ps1 -source $_.fullname -destination 'C:\\Program Files\\WindowsPowerShell\\Modules'}\"", "waitAfterCompletion": "0"}}}, "rename": {"commands": {"a-reset-local-admin": {"command": {"Fn::Join": ["", ["powershell.exe -executionpolicy remotesigned -command C:\\cfn\\scripts\\Reset-LocalAdminPassword.ps1 -password '", {"Ref": "AdminPassword"}, "'"]]}, "waitAfterCompletion": "0"}, "b-execute-powershell-script-RenameComputer": {"command": "powershell.exe -Command Rename-Computer -NewName WEB1 -Restart", "waitAfterCompletion": "forever"}}}, "bootstrapDSC": {"commands": {"a-create-cert": {"command": {"Fn::Join": ["", ["powershell.exe -command c:\\cfn\\scripts\\New-DSCCertificate.ps1 -Password '", {"Ref": "AdminPassword"}, "' -Instance WEB1"]]}, "waitAfterCompletion": "0"}, "b-run-dsc-config": {"command": {"Fn::Join": ["", ["powershell.exe -Command c:\\cfn\\scripts\\WEB1.ps1 -DomainDNSName ", {"Ref": "DomainDNSName"}, " -DomainNetBiosName ", {"Ref": "DomainNetBIOSName"}, " -AdminPassword '", {"Ref": "AdminPassword"}, "' -ADServer1PrivateIp ", {"Ref": "ADServer1PrivateIP"}, " -ADServer2PrivateIp ", {"Ref": "ADServer2PrivateIP"}]]}, "waitAfterCompletion": "forever"}}}, "finalize": {"commands": {"a-write-status": {"command": "powershell.exe -command Write-AWSQuickStartStatus", "waitAfterCompletion": "0"}}}}}, "Properties": {"IamInstanceProfile": {"Ref": "EC2RoleInstanceProfile"}, "ImageId": {"Ref": "LatestAmiId"}, "InstanceType": {"Ref": "WindowsInstanceType"}, "SubnetId": {"Ref": "PrivateSubnet1ID"}, "Tags": [{"Key": "Name", "Value": "WEB1"}, {"Key": "guid", "Value": "ed0125c5-0d2b-4ca0-9354-ba261a9bc676"}], "BlockDeviceMappings": [{"DeviceName": "/dev/sda1", "Ebs": {"VolumeSize": "50", "VolumeType": "gp2"}}], "SecurityGroupIds": [{"Ref": "DomainMemberSG"}, {"Ref": "IISWebGroup"}], "KeyName": {"Ref": "KeyPairName"}}}, "WEB2": {"Type": "AWS::EC2::Instance", "DependsOn": "DC1WaitCondition", "Metadata": {"AWS::CloudFormation::Authentication": {"S3AccessCreds": {"type": "S3", "roleName": {"Ref": "EC2Role"}, "buckets": [{"Ref": "QSS3BucketName"}]}}, "AWS::CloudFormation::Init": {"configSets": {"config": ["setup", "rename", "bootstrapDSC", "finalize"]}, "setup": {"files": {"c:\\cfn\\cfn-hup.conf": {"content": {"Fn::Join": ["", ["[main]\n", "stack=", {"Ref": "AWS::StackName"}, "\n", "region=", {"Ref": "AWS::Region"}, "\n"]]}}, "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {"content": {"Fn::Join": ["", ["[cfn-auto-reloader-hook]\n", "triggers=post.update\n", "path=Resources.WEB2.Metadata.AWS::CloudFormation::Init\n", "action=cfn-init.exe -v -c config -s ", {"Ref": "AWS::StackId"}, " -r WEB2", " --region ", {"Ref": "AWS::Region"}, "\n"]]}}, "c:\\cfn\\scripts\\Unzip-Archive.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Unzip-Archive.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\modules\\AWSQuickStart.zip": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/modules/AWSQuickStart.zip", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\scripts\\CreateWaitHandle.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/CreateWaitHandle.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\scripts\\WEB2.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/configs/WEB2.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\scripts\\Reset-LocalAdminPassword.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Reset-LocalAdminPassword.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "c:\\cfn\\scripts\\New-DSCCertificate.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/New-DSCCertificate.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "C:\\cfn\\Modules\\xNetworking_2.1.zip": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/modules/xNetworking_2.1.zip", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}, "C:\\cfn\\Modules\\xComputerManagement_1.2.zip": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/modules/xComputerManagement_1.2.zip", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}, "authentication": "S3AccessCreds"}}, "services": {"windows": {"cfn-hup": {"enabled": "true", "ensureRunning": "true", "files": ["c:\\cfn\\cfn-hup.conf", "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"]}}}, "commands": {"a-set-execution-policy": {"command": "powershell.exe -command Set-ExecutionPolicy RemoteSigned -Force", "waitAfterCompletion": "0"}, "b-unpack-quickstart-module": {"command": "powershell.exe -command c:\\cfn\\scripts\\Unzip-Archive.ps1 -Source c:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\", "waitAfterCompletion": "0"}, "c-create-waithandle": {"command": {"Fn::Join": ["", ["powershell.exe -command \"c:\\cfn\\scripts\\CreateWaitHandle.ps1 -Handle '", {"Ref": "WEB2WaitHandle"}, "'\""]]}, "waitAfterCompletion": "0"}, "d-unzip-modules": {"command": "powershell.exe -command \"Get-ChildItem 'C:\\cfn\\Modules' *.zip | Foreach-Object { c:\\cfn\\scripts\\unzip-archive.ps1 -source $_.fullname -destination 'C:\\Program Files\\WindowsPowerShell\\Modules'}\"", "waitAfterCompletion": "0"}}}, "rename": {"commands": {"a-reset-local-admin": {"command": {"Fn::Join": ["", ["powershell.exe -executionpolicy remotesigned -command C:\\cfn\\scripts\\Reset-LocalAdminPassword.ps1 -password '", {"Ref": "AdminPassword"}, "'"]]}, "waitAfterCompletion": "0"}, "b-execute-powershell-script-RenameComputer": {"command": "powershell.exe -Command Rename-Computer -NewName WEB2 -Restart", "waitAfterCompletion": "forever"}}}, "bootstrapDSC": {"commands": {"a-create-cert": {"command": {"Fn::Join": ["", ["powershell.exe -command c:\\cfn\\scripts\\New-DSCCertificate.ps1 -Password '", {"Ref": "AdminPassword"}, "' -Instance WEB2"]]}, "waitAfterCompletion": "0"}, "b-run-dsc-config": {"command": {"Fn::Join": ["", ["powershell.exe -Command c:\\cfn\\scripts\\WEB2.ps1 -DomainDNSName ", {"Ref": "DomainDNSName"}, " -DomainNetBiosName ", {"Ref": "DomainNetBIOSName"}, " -AdminPassword '", {"Ref": "AdminPassword"}, "' -ADServer1PrivateIp ", {"Ref": "ADServer1PrivateIP"}, " -ADServer2PrivateIp ", {"Ref": "ADServer2PrivateIP"}]]}, "waitAfterCompletion": "forever"}}}, "finalize": {"commands": {"a-write-status": {"command": "powershell.exe -command Write-AWSQuickStartStatus", "waitAfterCompletion": "0"}}}}}, "Properties": {"IamInstanceProfile": {"Ref": "EC2RoleInstanceProfile"}, "ImageId": {"Ref": "LatestAmiId"}, "InstanceType": {"Ref": "WindowsInstanceType"}, "SubnetId": {"Ref": "PrivateSubnet2ID"}, "Tags": [{"Key": "Name", "Value": "WEB2"}, {"Key": "guid", "Value": "17cab80f-778d-43fa-93ad-67feb2bb3d11"}], "BlockDeviceMappings": [{"DeviceName": "/dev/sda1", "Ebs": {"VolumeSize": "50", "VolumeType": "gp2"}}], "SecurityGroupIds": [{"Ref": "DomainMemberSG"}, {"Ref": "IISWebGroup"}], "KeyName": {"Ref": "KeyPairName"}}}, "RDGW1WaitCondition": {"Type": "AWS::CloudFormation::WaitCondition", "DependsOn": "RDGW1", "Properties": {"Handle": {"Ref": "RDGW1WaitHandle"}, "Timeout": "3000"}}, "RDGW1WaitHandle": {"Type": "AWS::CloudFormation::WaitConditionHandle"}, "RDGW2WaitCondition": {"Type": "AWS::CloudFormation::WaitCondition", "DependsOn": "RDGW2", "Properties": {"Handle": {"Ref": "RDGW2WaitHandle"}, "Timeout": "3000"}}, "RDGW2WaitHandle": {"Type": "AWS::CloudFormation::WaitConditionHandle"}, "WEB1WaitCondition": {"Type": "AWS::CloudFormation::WaitCondition", "DependsOn": "WEB1", "Properties": {"Handle": {"Ref": "WEB1WaitHandle"}, "Timeout": "3000"}}, "WEB1WaitHandle": {"Type": "AWS::CloudFormation::WaitConditionHandle"}, "WEB2WaitCondition": {"Type": "AWS::CloudFormation::WaitCondition", "DependsOn": "WEB2", "Properties": {"Handle": {"Ref": "WEB2WaitHandle"}, "Timeout": "3000"}}, "WEB2WaitHandle": {"Type": "AWS::CloudFormation::WaitConditionHandle"}, "DC1WaitCondition": {"Type": "AWS::CloudFormation::WaitCondition", "DependsOn": "DC1", "Properties": {"Handle": {"Ref": "DC1WaitHandle"}, "Timeout": "3000"}}, "DC1WaitHandle": {"Type": "AWS::CloudFormation::WaitConditionHandle"}, "DC2WaitCondition": {"Type": "AWS::CloudFormation::WaitCondition", "DependsOn": "DC2", "Properties": {"Handle": {"Ref": "DC2WaitHandle"}, "Timeout": "3000"}}, "DC2WaitHandle": {"Type": "AWS::CloudFormation::WaitConditionHandle"}, "RDGWSecurityGroup": {"Type": "AWS::EC2::SecurityGroup", "Properties": {"GroupDescription": "Enable RDP access from the Internet", "VpcId": {"Ref": "VPCID"}, "SecurityGroupIngress": [{"IpProtocol": "tcp", "FromPort": "3389", "ToPort": "3389", "CidrIp": {"Ref": "RDGWCIDR"}}, {"IpProtocol": "icmp", "FromPort": "-1", "ToPort": "-1", "CidrIp": {"Ref": "RDGWCIDR"}}]}}, "IISWebGroup": {"Type": "AWS::EC2::SecurityGroup", "Properties": {"GroupDescription": "Enable Access to IIS Web Servers", "VpcId": {"Ref": "VPCID"}, "SecurityGroupIngress": [{"IpProtocol": "tcp", "FromPort": "80", "ToPort": "80", "CidrIp": {"Ref": "VPCCIDR"}}]}}, "DomainController1SG": {"Type": "AWS::EC2::SecurityGroup", "Properties": {"GroupDescription": "Domain Controller 1", "VpcId": {"Ref": "VPCID"}, "SecurityGroupIngress": [{"IpProtocol": "tcp", "FromPort": "5985", "ToPort": "5985", "CidrIp": {"Ref": "VPCCIDR"}}, {"IpProtocol": "-1", "FromPort": "1", "ToPort": "65535", "CidrIp": {"Fn::Join": ["", [{"Ref": "ADServer2PrivateIP"}, "/32"]]}}, {"IpProtocol": "udp", "FromPort": "123", "ToPort": "123", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "tcp", "FromPort": "135", "ToPort": "135", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "tcp", "FromPort": "9389", "ToPort": "9389", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "udp", "FromPort": "138", "ToPort": "138", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "tcp", "FromPort": "445", "ToPort": "445", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "udp", "FromPort": "445", "ToPort": "445", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "udp", "FromPort": "464", "ToPort": "464", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "tcp", "FromPort": "464", "ToPort": "464", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "tcp", "FromPort": "49152", "ToPort": "65535", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "udp", "FromPort": "49152", "ToPort": "65535", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "tcp", "FromPort": "389", "ToPort": "389", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "udp", "FromPort": "389", "ToPort": "389", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "tcp", "FromPort": "636", "ToPort": "636", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "tcp", "FromPort": "3268", "ToPort": "3268", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "tcp", "FromPort": "3269", "ToPort": "3269", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "tcp", "FromPort": "53", "ToPort": "53", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "udp", "FromPort": "53", "ToPort": "53", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "tcp", "FromPort": "88", "ToPort": "88", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "udp", "FromPort": "88", "ToPort": "88", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "tcp", "FromPort": "3389", "ToPort": "3389", "CidrIp": {"Ref": "VPCCIDR"}}, {"IpProtocol": "icmp", "FromPort": "-1", "ToPort": "-1", "CidrIp": {"Ref": "PublicSubnet1CIDR"}}]}}, "DomainController2SG": {"Type": "AWS::EC2::SecurityGroup", "Properties": {"GroupDescription": "Domain Controller 2", "VpcId": {"Ref": "VPCID"}, "SecurityGroupIngress": [{"IpProtocol": "tcp", "FromPort": "5985", "ToPort": "5985", "CidrIp": {"Ref": "VPCCIDR"}}, {"IpProtocol": "-1", "FromPort": "1", "ToPort": "65535", "CidrIp": {"Fn::Join": ["", [{"Ref": "ADServer1PrivateIP"}, "/32"]]}}, {"IpProtocol": "udp", "FromPort": "123", "ToPort": "123", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "tcp", "FromPort": "135", "ToPort": "135", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "tcp", "FromPort": "9389", "ToPort": "9389", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "udp", "FromPort": "138", "ToPort": "138", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "tcp", "FromPort": "445", "ToPort": "445", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "udp", "FromPort": "445", "ToPort": "445", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "udp", "FromPort": "464", "ToPort": "464", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "tcp", "FromPort": "464", "ToPort": "464", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "tcp", "FromPort": "49152", "ToPort": "65535", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "udp", "FromPort": "49152", "ToPort": "65535", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "tcp", "FromPort": "389", "ToPort": "389", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "udp", "FromPort": "389", "ToPort": "389", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "tcp", "FromPort": "636", "ToPort": "636", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "tcp", "FromPort": "3268", "ToPort": "3268", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "tcp", "FromPort": "3269", "ToPort": "3269", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "tcp", "FromPort": "53", "ToPort": "53", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "udp", "FromPort": "53", "ToPort": "53", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "tcp", "FromPort": "88", "ToPort": "88", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "udp", "FromPort": "88", "ToPort": "88", "SourceSecurityGroupId": {"Ref": "DomainMemberSG"}}, {"IpProtocol": "tcp", "FromPort": "3389", "ToPort": "3389", "CidrIp": {"Ref": "VPCCIDR"}}, {"IpProtocol": "icmp", "FromPort": "-1", "ToPort": "-1", "CidrIp": {"Ref": "PublicSubnet1CIDR"}}]}}, "DomainMemberSG": {"Type": "AWS::EC2::SecurityGroup", "Properties": {"GroupDescription": "Domain Members", "VpcId": {"Ref": "VPCID"}, "SecurityGroupIngress": [{"IpProtocol": "tcp", "FromPort": "53", "ToPort": "53", "CidrIp": {"Ref": "PrivateSubnet1CIDR"}}, {"IpProtocol": "tcp", "FromPort": "3389", "ToPort": "3389", "CidrIp": {"Ref": "VPCCIDR"}}, {"IpProtocol": "tcp", "FromPort": "445", "ToPort": "445", "CidrIp": {"Ref": "PrivateSubnet1CIDR"}}, {"IpProtocol": "tcp", "FromPort": "139", "ToPort": "139", "CidrIp": {"Ref": "PrivateSubnet1CIDR"}}, {"IpProtocol": "udp", "FromPort": "53", "ToPort": "53", "CidrIp": {"Ref": "PrivateSubnet1CIDR"}}, {"IpProtocol": "tcp", "FromPort": "49152", "ToPort": "65535", "CidrIp": {"Ref": "PrivateSubnet1CIDR"}}, {"IpProtocol": "udp", "FromPort": "49152", "ToPort": "65535", "CidrIp": {"Ref": "PrivateSubnet1CIDR"}}]}}}, "Outputs": {"RDGW1ElasticIP": {"Value": {"Ref": "RDGWEIP1"}, "Description": "Elastic IP address of the first Remote Desktop Gateway in Availability Zone 1"}, "RDGW2ElasticIP": {"Value": {"Ref": "RDGWEIP2"}, "Description": "Elastic IP address of the second Remote Desktop Gateway in Availability Zone 2"}}}
