{"AWSTemplateFormatVersion": "2010-09-09", "Description": "AWS Cloud Formation Template for deploying Informatica PowerCenter Version 10.1.1 on EC2 Windows 2012 R2 instances. This template uses an existing VPC and two Private and Public subnets. It deploys an Instance of Amazon RDS with Oracle Database on the Private Subnet. The Informatica PowerCenter Instances are deployed in the Public Subnet. The template deploys resources over two Availability Zones. (qs-1p2ul213o)", "Metadata": {"AWSAMIRegionMap": {"Filters": {"INFAPCWINHVM": {"name": "Informatica-PowerCenter-10.*-WindowsServer*-*", "owner-alias": "aws-marketplace", "product-code.type": "marketplace"}}}, "AWS::CloudFormation::Interface": {"ParameterGroups": [{"Label": {"default": "Network Configuration"}, "Parameters": ["VPCID", "PublicSubnet1ID", "PublicSubnet2ID", "DBSubnetIDs", "RemoteAccessCIDR"]}, {"Label": {"default": "Amazon EC2 Configuration"}, "Parameters": ["KeyPairName", "PowerCenterInstanceType", "NumberOfPowerCenterInstances", "EnableEIP"]}, {"Label": {"default": "Amazon RDS Configuration"}, "Parameters": ["DatabaseType", "DatabaseName", "DatabaseUsername", "DatabasePassword", "DatabasePasswordConfirm"]}, {"Label": {"default": "Informatica PowerCenter Configuration"}, "Parameters": ["InformaticaDomainName", "InformaticaNodeName", "InformaticaDomainUsername", "InformaticaDomainPassword", "InformaticaDomainPasswordConfirm", "EncryptionKeyPhrase", "LicenseKey"]}], "ParameterLabels": {"DBSubnetIDs": {"default": "Informatica Database Subnets"}, "DatabaseName": {"default": "Database Name"}, "DatabasePassword": {"default": "Database Password"}, "DatabasePasswordConfirm": {"default": "Confirm Password"}, "DatabaseType": {"default": "Database Type"}, "DatabaseUsername": {"default": "Database Username"}, "EncryptionKeyPhrase": {"default": "Encryption Key Phrase"}, "InformaticaDomainName": {"default": "Informatica Domain Name"}, "InformaticaNodeName": {"default": "Informatica Node Prefix"}, "InformaticaDomainUsername": {"default": "Informatica Administrator Username"}, "InformaticaDomainPassword": {"default": "Informatica Administrator Password"}, "InformaticaDomainPasswordConfirm": {"default": "Confirm Password"}, "KeyPairName": {"default": "Key Pair Name"}, "NumberOfPowerCenterInstances": {"default": "Number of Instances"}, "EnableEIP": {"default": "Enable Elastic IP Addressing"}, "PowerCenterInstanceType": {"default": "Informatica Domain Instance Type"}, "PublicSubnet1ID": {"default": "Public Subnet 1 ID"}, "PublicSubnet2ID": {"default": "Public Subnet 2 ID"}, "RemoteAccessCIDR": {"default": "Allowed Remote Access CIDR"}, "VPCID": {"default": "VPC ID"}, "LicenseKey": {"default": "Informatica License Key"}}}}, "Parameters": {"DBSubnetIDs": {"Description": "Select two subnet IDs each from a different region in the VPC chosen above (such as: us-west-1b, us-west-1c)", "Type": "List<AWS::EC2::Subnet::Id>"}, "DatabaseName": {"AllowedPattern": "^([a-zA-Z][a-z0-9A-Z_]{4,8})$", "ConstraintDescription": "Only alphanumeric characters and underscore are allowed. Should begin with an alphabet. The value must be 4-8", "Description": "Database Name for RDS Instance. Default value is InfaDB", "Type": "String", "Default": "InfaDB", "MinLength": "4", "MaxLength": "8"}, "DatabasePassword": {"AllowedPattern": "^([a-zA-Z][a-z0-9A-Z_]{3,20})$", "ConstraintDescription": "Only alphanumeric characters and underscore are allowed. Should begin with an alphabet. The value must be 8-18", "Description": "Password for the Amazon RDS database account. Only alphanumeric characters and underscore are allowed. Should begin with an alphabet. The value must be 8-18", "MaxLength": "18", "MinLength": "8", "NoEcho": "True", "Type": "String"}, "DatabasePasswordConfirm": {"AllowedPattern": "^([a-zA-Z][a-z0-9A-Z_]{3,20})$", "ConstraintDescription": "Only alphanumeric characters and underscore are allowed. Should begin with an alphabet. The value must be 8-18", "Description": "Password for the Amazon RDS database account.", "MaxLength": "18", "MinLength": "8", "NoEcho": "True", "Type": "String"}, "DatabaseType": {"AllowedValues": ["Oracle-Standard-Edition-One-11.2.0-License-Included", "Oracle-Standard-Edition-One-11.2.0-BYOL", "Oracle-Enterprise-Edition-12.1.0-BYOL", "Oracle-Enterprise-Edition-11.2.0-BYOL", "Oracle-Standard-Edition-11.2.0-BYOL"], "Default": "Oracle-Standard-Edition-One-11.2.0-License-Included", "Description": "The type of database to use in Amazon RDS. Currently, you can only use Oracle", "Type": "String"}, "DatabaseUsername": {"AllowedPattern": "^([a-zA-Z][a-z0-9A-Z_]{3,20})$", "ConstraintDescription": "Only alphanumeric characters and underscore are allowed. Should begin with an alphabet. The value must be 4-20", "Description": "Username for the Amazon RDS database account", "MaxLength": "30", "MinLength": "4", "Type": "String"}, "EnableEIP": {"Description": "Assign Elastic IPs to Instances. Default value is Yes", "Type": "String", "AllowedValues": ["Yes", "No"], "Default": "Yes"}, "EncryptionKeyPhrase": {"AllowedPattern": "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=\\S+$).{8,}$", "ConstraintDescription": "It should be 8 to 20 characters long, at least one uppercase letter at least one lowercase letter-at least one number Does not contain spaces", "Description": "The text string used as the base word from which to generate an encryption key for the Informatica domain.", "MaxLength": "32", "MinLength": "8", "NoEcho": "true", "Type": "String"}, "InformaticaDomainName": {"AllowedPattern": "^([a-zA-Z][a-z0-9A-Z_]{7,20})$", "ConstraintDescription": "Only alphanumeric characters and underscore are allowed. Should begin with an alphabet. The value must be 4-20", "Description": "Name for the Informatica Domain.", "Type": "String", "Default": "InfaDomain", "MinLength": "8", "MaxLength": "20"}, "InformaticaDomainPassword": {"AllowedPattern": "^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[^\\s\\w])(?!.*[\"$&]).{7,32}$", "ConstraintDescription": "Password must be at least 8 characters in length. Should contain at least one special character, number, upper-case and lower-case character. Double quote(\"),ampersand(&) and dollar($) is not allowed", "Description": "Password for the Informatica Domain. Password must be at least 8 characters in length. Should contain at least one special character, number, upper-case and lower-case character. Double quote(\"),ampersand(&) and dollar($) is not allowed", "NoEcho": "True", "MaxLength": "32", "MinLength": "8", "Type": "String"}, "InformaticaDomainPasswordConfirm": {"AllowedPattern": "^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[^\\s\\w])(?!.*[\"$&]).{7,32}$", "ConstraintDescription": "Password must be at least 8 characters in length. Should contain at least one special character, number, upper-case and lower-case character. Double quote(\") and dollar($) is not allowed", "Description": "Password for the Informatica Domain.", "NoEcho": "True", "MaxLength": "32", "MinLength": "8", "Type": "String"}, "InformaticaDomainUsername": {"AllowedPattern": "^([a-zA-Z][a-z0-9A-Z_]{7,20})$", "ConstraintDescription": "Only alphanumeric characters and underscore are allowed. Should begin with an alphabet. The value must be 4-20", "Description": "Username for the Informatica Domain.", "Default": "Administrator", "MaxLength": "32", "MinLength": "8", "Type": "String"}, "InformaticaNodeName": {"AllowedPattern": "^([a-zA-Z][a-z0-9A-Z_]{3,20})$", "ConstraintDescription": "Only alphanumeric characters and underscore are allowed. Should begin with an alphabet. The value must be 4-20", "Description": "Prefix for the Nodes in Informatica Domain. Node number will be the suffix for the nodes. Eg InfaNode1, InfaNode2", "Type": "String", "Default": "Infa", "MinLength": "4", "MaxLength": "20"}, "KeyPairName": {"Description": "Name of an existing EC2 KeyPair to enable external access to the Informatica Domain", "Type": "AWS::EC2::KeyPair::KeyName", "MinLength": "1"}, "LicenseKey": {"Description": "*Optional Argument*. Provide a PUBLIC S3 link for the License Key file. Leave blank to go ahead without the Licence Key", "Type": "String", "Default": ""}, "NumberOfPowerCenterInstances": {"Description": "Number of PowerCenter Nodes. Each node runs on one EC2 Instance", "Type": "String", "AllowedValues": ["1", "2", "4", "6", "8", "10", "12", "14", "16"], "Default": "4"}, "PowerCenterInstanceType": {"AllowedValues": ["c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge"], "Default": "c4.2xlarge", "Description": "Instance Type for Informatica Domain. Default is c4.2xlarge", "Type": "String"}, "PublicSubnet1ID": {"Description": "Select a publicly accessible subnet ID located in Availability Zone 1 for the Informatica Domain", "Type": "AWS::EC2::Subnet::Id"}, "PublicSubnet2ID": {"Description": "Select a publicly accessible subnet ID located in Availability Zone 2 for the Informatica Domain", "Type": "AWS::EC2::Subnet::Id"}, "RemoteAccessCIDR": {"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$", "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x", "Description": "Allowed CIDR block for external access to the Informatica Domain", "Type": "String"}, "VPCID": {"Description": "Which VPC should this be deployed to?", "Type": "AWS::EC2::VPC::Id"}}, "Rules": {"SubnetsInVPC": {"Assertions": [{"Assert": {"Fn::EachMemberIn": [{"Fn::ValueOfAll": ["AWS::EC2::Subnet::Id", "VpcId"]}, {"Fn::RefAll": "AWS::EC2::VPC::Id"}]}, "AssertDescription": "All subnets must in the VPC"}]}, "InformaticaPasswordConfirm": {"Assertions": [{"Assert": {"Fn::Equals": [{"Ref": "InformaticaDomainPassword"}, {"Ref": "InformaticaDomainPasswordConfirm"}]}, "AssertDescription": "Informatica Domain Passwords do not match"}]}, "DatabasePasswordConfirm": {"Assertions": [{"Assert": {"Fn::Equals": [{"Ref": "DatabasePassword"}, {"Ref": "DatabasePasswordConfirm"}]}, "AssertDescription": "Database Passwords do not match"}]}}, "Mappings": {"AWSAMIRegionMap": {"AMI": {"INFAPCWINHVM": "Informatica-PowerCenter-10.1.101-WindowsServer2012R2-SecAgent-726f8e47-3948-42f5-aa00-52b4b04ed02f-ami-11bc8507.4"}, "ap-northeast-1": {"INFAPCWINHVM": "ami-e72dcb81"}, "ap-northeast-2": {"INFAPCWINHVM": "ami-547aa43a"}, "ap-south-1": {"INFAPCWINHVM": "ami-8f047ce0"}, "ap-southeast-1": {"INFAPCWINHVM": "ami-f48a1a97"}, "ap-southeast-2": {"INFAPCWINHVM": "ami-19869a7a"}, "ca-central-1": {"INFAPCWINHVM": "ami-b4338cd0"}, "eu-central-1": {"INFAPCWINHVM": "ami-d5d17cba"}, "eu-west-1": {"INFAPCWINHVM": "ami-44e40a3d"}, "eu-west-2": {"INFAPCWINHVM": "ami-6f5d4c0b"}, "sa-east-1": {"INFAPCWINHVM": "ami-abe793c7"}, "us-east-1": {"INFAPCWINHVM": "ami-76e8f860"}, "us-east-2": {"INFAPCWINHVM": "ami-32715157"}, "us-west-1": {"INFAPCWINHVM": "ami-93260ff3"}, "us-west-2": {"INFAPCWINHVM": "ami-44f8e13d"}}, "AWSInfoRegionMap": {"ap-northeast-1": {"Partition": "aws", "QuickStartS3URL": "https://s3.amazonaws.com"}, "ap-northeast-2": {"Partition": "aws", "QuickStartS3URL": "https://s3.amazonaws.com"}, "ap-south-1": {"Partition": "aws", "QuickStartS3URL": "https://s3.amazonaws.com"}, "ap-southeast-1": {"Partition": "aws", "QuickStartS3URL": "https://s3.amazonaws.com"}, "ap-southeast-2": {"Partition": "aws", "QuickStartS3URL": "https://s3.amazonaws.com"}, "ca-central-1": {"Partition": "aws", "QuickStartS3URL": "https://s3.amazonaws.com"}, "eu-central-1": {"Partition": "aws", "QuickStartS3URL": "https://s3.amazonaws.com"}, "eu-west-1": {"Partition": "aws", "QuickStartS3URL": "https://s3.amazonaws.com"}, "eu-west-2": {"Partition": "aws", "QuickStartS3URL": "https://s3.amazonaws.com"}, "sa-east-1": {"Partition": "aws", "QuickStartS3URL": "https://s3.amazonaws.com"}, "us-east-1": {"Partition": "aws", "QuickStartS3URL": "https://s3.amazonaws.com"}, "us-east-2": {"Partition": "aws", "QuickStartS3URL": "https://s3.amazonaws.com"}, "us-west-1": {"Partition": "aws", "QuickStartS3URL": "https://s3.amazonaws.com"}, "us-west-2": {"Partition": "aws", "QuickStartS3URL": "https://s3.amazonaws.com"}}, "Config": {"Settings": {"DatabaseSize": "db.t3.large", "IntegrationServiceName": "PowerCenterIntegrationService", "RepositoryServiceName": "PowerCenterRepository", "GridName": "InfaDefaultGrid"}, "Oracle-Enterprise-Edition-12.1.0-BYOL": {"Engine": "oracle-ee", "DB": "Oracle", "Version": "12.1", "DatabaseSize": "db.t3.large", "LicenseModel": "bring-your-own-license", "AllocatedStorage": "100", "Port": 1521}, "Oracle-Enterprise-Edition-11.2.0-BYOL": {"Engine": "oracle-ee", "DB": "Oracle", "Version": "11.2", "DatabaseSize": "db.t3.large", "LicenseModel": "bring-your-own-license", "AllocatedStorage": "100", "Port": 1521}, "Oracle-Standard-Edition-11.2.0-BYOL": {"Engine": "oracle-ee", "DB": "Oracle", "Version": "11.2", "DatabaseSize": "db.t3.large", "LicenseModel": "bring-your-own-license", "AllocatedStorage": "100", "Port": 1521}, "Oracle-Standard-Edition-One-11.2.0-BYOL": {"Engine": "oracle-se1", "DB": "Oracle", "Version": "11.2", "DatabaseSize": "db.t3.large", "LicenseModel": "bring-your-own-license", "AllocatedStorage": "100", "Port": 1521}, "Oracle-Standard-Edition-One-11.2.0-License-Included": {"Engine": "oracle-se1", "DB": "Oracle", "Version": "11.2", "DatabaseSize": "db.t3.large", "LicenseModel": "license-included", "AllocatedStorage": "100", "Port": 1521}}}, "Conditions": {"EnableEIPCondition": {"Fn::Equals": [{"Ref": "EnableEIP"}, "Yes"]}, "AddLicenseCondition": {"Fn::Not": [{"Fn::Equals": [{"Ref": "LicenseKey"}, ""]}]}, "SingleNodeCondition": {"Fn::Equals": ["NumberOfPowerCenterInstances", "1"]}, "2NodeCondition": {"Fn::Or": [{"Fn::Equals": [{"Ref": "NumberOfPowerCenterInstances"}, "2"]}, {"Condition": "4NodeCondition"}, {"Condition": "6NodeCondition"}, {"Condition": "8NodeCondition"}, {"Condition": "10NodeCondition"}, {"Condition": "12NodeCondition"}, {"Condition": "14NodeCondition"}, {"Condition": "16NodeCondition"}]}, "4NodeCondition": {"Fn::Or": [{"Fn::Equals": [{"Ref": "NumberOfPowerCenterInstances"}, "4"]}, {"Condition": "6NodeCondition"}, {"Condition": "8NodeCondition"}, {"Condition": "10NodeCondition"}, {"Condition": "12NodeCondition"}, {"Condition": "14NodeCondition"}, {"Condition": "16NodeCondition"}]}, "6NodeCondition": {"Fn::Or": [{"Fn::Equals": [{"Ref": "NumberOfPowerCenterInstances"}, "6"]}, {"Condition": "8NodeCondition"}, {"Condition": "10NodeCondition"}, {"Condition": "12NodeCondition"}, {"Condition": "14NodeCondition"}, {"Condition": "16NodeCondition"}]}, "8NodeCondition": {"Fn::Or": [{"Fn::Equals": [{"Ref": "NumberOfPowerCenterInstances"}, "8"]}, {"Condition": "10NodeCondition"}, {"Condition": "12NodeCondition"}, {"Condition": "14NodeCondition"}, {"Condition": "16NodeCondition"}]}, "10NodeCondition": {"Fn::Or": [{"Fn::Equals": [{"Ref": "NumberOfPowerCenterInstances"}, "10"]}, {"Condition": "12NodeCondition"}, {"Condition": "14NodeCondition"}, {"Condition": "16NodeCondition"}]}, "12NodeCondition": {"Fn::Or": [{"Fn::Equals": [{"Ref": "NumberOfPowerCenterInstances"}, "12"]}, {"Condition": "14NodeCondition"}, {"Condition": "16NodeCondition"}]}, "14NodeCondition": {"Fn::Or": [{"Fn::Equals": [{"Ref": "NumberOfPowerCenterInstances"}, "14"]}, {"Condition": "16NodeCondition"}]}, "16NodeCondition": {"Fn::Equals": [{"Ref": "NumberOfPowerCenterInstances"}, "16"]}, "2NodeEIPCondition": {"Fn::And": [{"Condition": "EnableEIPCondition"}, {"Condition": "2NodeCondition"}]}, "4NodeEIPCondition": {"Fn::And": [{"Condition": "EnableEIPCondition"}, {"Condition": "4NodeCondition"}]}, "6NodeEIPCondition": {"Fn::And": [{"Condition": "EnableEIPCondition"}, {"Condition": "6NodeCondition"}]}, "8NodeEIPCondition": {"Fn::And": [{"Condition": "EnableEIPCondition"}, {"Condition": "8NodeCondition"}]}, "10NodeEIPCondition": {"Fn::And": [{"Condition": "EnableEIPCondition"}, {"Condition": "10NodeCondition"}]}, "12NodeEIPCondition": {"Fn::And": [{"Condition": "EnableEIPCondition"}, {"Condition": "12NodeCondition"}]}, "14NodeEIPCondition": {"Fn::And": [{"Condition": "EnableEIPCondition"}, {"Condition": "14NodeCondition"}]}, "16NodeEIPCondition": {"Fn::And": [{"Condition": "EnableEIPCondition"}, {"Condition": "16NodeCondition"}]}}, "Resources": {"DBSubnetGroup": {"Type": "AWS::RDS::DBSubnetGroup", "Properties": {"DBSubnetGroupDescription": "Subnet Group for Informatica PowerCenter RDS Database", "SubnetIds": {"Ref": "DBSubnetIDs"}, "Tags": [{"Key": "Name", "Value": "RDSDbSubnetGroup"}]}}, "DBSecurityGroup": {"Type": "AWS::EC2::SecurityGroup", "Properties": {"GroupDescription": "Informatica PowerCenter RDS Database Security Group", "SecurityGroupIngress": [{"IpProtocol": "tcp", "FromPort": {"Fn::FindInMap": ["Config", {"Ref": "DatabaseType"}, "Port"]}, "ToPort": {"Fn::FindInMap": ["Config", {"Ref": "DatabaseType"}, "Port"]}, "SourceSecurityGroupId": {"Ref": "InstanceSecurityGroup"}}], "VpcId": {"Ref": "VPCID"}}}, "RDSInstance": {"Type": "AWS::RDS::DBInstance", "Properties": {"AllocatedStorage": {"Fn::FindInMap": ["Config", {"Ref": "DatabaseType"}, "AllocatedStorage"]}, "DBInstanceClass": {"Fn::FindInMap": ["Config", "Settings", "DatabaseSize"]}, "DBName": {"Ref": "DatabaseName"}, "DBSubnetGroupName": {"Ref": "DBSubnetGroup"}, "Engine": {"Fn::FindInMap": ["Config", {"Ref": "DatabaseType"}, "Engine"]}, "LicenseModel": {"Fn::FindInMap": ["Config", {"Ref": "DatabaseType"}, "LicenseModel"]}, "MasterUsername": {"Ref": "DatabaseUsername"}, "MasterUserPassword": {"Ref": "DatabasePassword"}, "MultiAZ": true, "Port": {"Fn::FindInMap": ["Config", {"Ref": "DatabaseType"}, "Port"]}, "Tags": [{"Key": "Name", "Value": "Infa-PowerCenter-RDS-Instance"}], "VPCSecurityGroups": [{"Ref": "DBSecurityGroup"}]}}, "InstanceSecurityGroup": {"Type": "AWS::EC2::SecurityGroup", "Properties": {"GroupDescription": "Enable RDP and within VPC traffic", "VpcId": {"Ref": "VPCID"}, "SecurityGroupIngress": [{"IpProtocol": "tcp", "FromPort": "3389", "ToPort": "3389", "CidrIp": {"Ref": "RemoteAccessCIDR"}}, {"IpProtocol": "tcp", "FromPort": "5000", "ToPort": "7000", "CidrIp": {"Ref": "RemoteAccessCIDR"}}]}}, "InstanceSecurityGroupIngress": {"DependsOn": "InstanceSecurityGroup", "Type": "AWS::EC2::SecurityGroupIngress", "Properties": {"IpProtocol": "-1", "FromPort": "-1", "ToPort": "-1", "SourceSecurityGroupId": {"Fn::GetAtt": ["InstanceSecurityGroup", "GroupId"]}, "GroupId": {"Fn::GetAtt": ["InstanceSecurityGroup", "GroupId"]}}}, "InfaMasterEIPAddress": {"Type": "AWS::EC2::EIP", "Condition": "EnableEIPCondition", "Properties": {"Domain": "vpc", "InstanceId": {"Ref": "InfaMaster"}}}, "InfaMaster": {"DependsOn": "RDSInstance", "Type": "AWS::EC2::Instance", "Metadata": {"AWS::CloudFormation::Init": {"configSets": {"setupdomain": ["config1"], "setupwithlicense": ["config2", "config1"]}, "config1": {"commands": {"1-setup": {"command": {"Fn::Join": ["", ["powershell -F C:\\InfaEc2Scripts\\winInfaInstallerEc2.ps1 ", {"Ref": "InformaticaDomainPassword"}, " ", {"Ref": "DatabasePassword"}, " ", {"Ref": "DatabasePassword"}, " ", {"Ref": "EncryptionKeyPhrase"}]]}}}}, "config2": {"files": {"c:\\Informatica\\10.1.1\\License.key": {"source": {"Ref": "LicenseKey"}}}}}}, "Properties": {"Tags": [{"Key": "Name", "Value": {"Fn::Join": ["", [{"Ref": "InformaticaNodeName"}, "Node1"]]}}], "ImageId": {"Fn::FindInMap": ["AWSAMIRegionMap", {"Ref": "AWS::Region"}, "INFAPCWINHVM"]}, "SubnetId": {"Ref": "PublicSubnet1ID"}, "SecurityGroupIds": [{"Ref": "InstanceSecurityGroup"}], "InstanceType": {"Ref": "PowerCenterInstanceType"}, "KeyName": {"Ref": "KeyPairName"}}, "CreationPolicy": {"ResourceSignal": {"Timeout": "PT3H"}}}, "InfaNode2EIPAddress": {"Condition": "2NodeEIPCondition", "Type": "AWS::EC2::EIP", "Properties": {"Domain": "vpc", "InstanceId": {"Ref": "InfaNode2"}}}, "InfaNode2": {"Condition": "2NodeCondition", "DependsOn": "InfaMaster", "Type": "AWS::EC2::Instance", "Metadata": {"AWS::CloudFormation::Init": {"config": {"commands": {"1-setup": {"command": {"Fn::Join": ["", ["powershell -F C:\\InfaEc2Scripts\\winInfaInstallerEc2.ps1 ", {"Ref": "InformaticaDomainPassword"}, " ", {"Ref": "DatabasePassword"}, " null ", {"Ref": "EncryptionKeyPhrase"}]]}}}}}}, "Properties": {"Tags": [{"Key": "Name", "Value": {"Fn::Join": ["", [{"Ref": "InformaticaNodeName"}, "Node2"]]}}], "ImageId": {"Fn::FindInMap": ["AWSAMIRegionMap", {"Ref": "AWS::Region"}, "INFAPCWINHVM"]}, "SubnetId": {"Ref": "PublicSubnet2ID"}, "SecurityGroupIds": [{"Ref": "InstanceSecurityGroup"}], "InstanceType": {"Ref": "PowerCenterInstanceType"}, "KeyName": {"Ref": "KeyPairName"}}, "CreationPolicy": {"ResourceSignal": {"Timeout": "PT2H30M"}}}, "InfaNode3EIPAddress": {"Condition": "4NodeEIPCondition", "Type": "AWS::EC2::EIP", "Properties": {"Domain": "vpc", "InstanceId": {"Ref": "InfaNode3"}}}, "InfaNode3": {"Condition": "4NodeCondition", "DependsOn": "InfaMaster", "Type": "AWS::EC2::Instance", "Metadata": {"AWS::CloudFormation::Init": {"config": {"commands": {"1-setup": {"command": {"Fn::Join": ["", ["powershell -F C:\\InfaEc2Scripts\\winInfaInstallerEc2.ps1 ", {"Ref": "InformaticaDomainPassword"}, " ", {"Ref": "DatabasePassword"}, " null ", {"Ref": "EncryptionKeyPhrase"}]]}}}}}}, "Properties": {"Tags": [{"Key": "Name", "Value": {"Fn::Join": ["", [{"Ref": "InformaticaNodeName"}, "Node3"]]}}], "ImageId": {"Fn::FindInMap": ["AWSAMIRegionMap", {"Ref": "AWS::Region"}, "INFAPCWINHVM"]}, "SubnetId": {"Ref": "PublicSubnet1ID"}, "SecurityGroupIds": [{"Ref": "InstanceSecurityGroup"}], "InstanceType": {"Ref": "PowerCenterInstanceType"}, "KeyName": {"Ref": "KeyPairName"}}, "CreationPolicy": {"ResourceSignal": {"Timeout": "PT2H30M"}}}, "InfaNode4EIPAddress": {"Condition": "4NodeEIPCondition", "Type": "AWS::EC2::EIP", "Properties": {"Domain": "vpc", "InstanceId": {"Ref": "InfaNode4"}}}, "InfaNode4": {"Condition": "4NodeCondition", "DependsOn": "InfaMaster", "Type": "AWS::EC2::Instance", "Metadata": {"AWS::CloudFormation::Init": {"config": {"commands": {"1-setup": {"command": {"Fn::Join": ["", ["powershell -F C:\\InfaEc2Scripts\\winInfaInstallerEc2.ps1 ", {"Ref": "InformaticaDomainPassword"}, " ", {"Ref": "DatabasePassword"}, " null ", {"Ref": "EncryptionKeyPhrase"}]]}}}}}}, "Properties": {"Tags": [{"Key": "Name", "Value": {"Fn::Join": ["", [{"Ref": "InformaticaNodeName"}, "Node4"]]}}], "ImageId": {"Fn::FindInMap": ["AWSAMIRegionMap", {"Ref": "AWS::Region"}, "INFAPCWINHVM"]}, "SubnetId": {"Ref": "PublicSubnet2ID"}, "SecurityGroupIds": [{"Ref": "InstanceSecurityGroup"}], "InstanceType": {"Ref": "PowerCenterInstanceType"}, "KeyName": {"Ref": "KeyPairName"}}, "CreationPolicy": {"ResourceSignal": {"Timeout": "PT2H30M"}}}, "InfaNode5EIPAddress": {"Condition": "6NodeEIPCondition", "Type": "AWS::EC2::EIP", "Properties": {"Domain": "vpc", "InstanceId": {"Ref": "InfaNode5"}}}, "InfaNode5": {"Condition": "6NodeCondition", "DependsOn": "InfaMaster", "Type": "AWS::EC2::Instance", "Metadata": {"AWS::CloudFormation::Init": {"config": {"commands": {"1-setup": {"command": {"Fn::Join": ["", ["powershell -F C:\\InfaEc2Scripts\\winInfaInstallerEc2.ps1 ", {"Ref": "InformaticaDomainPassword"}, " ", {"Ref": "DatabasePassword"}, " null ", {"Ref": "EncryptionKeyPhrase"}]]}}}}}}, "Properties": {"Tags": [{"Key": "Name", "Value": {"Fn::Join": ["", [{"Ref": "InformaticaNodeName"}, "Node5"]]}}], "ImageId": {"Fn::FindInMap": ["AWSAMIRegionMap", {"Ref": "AWS::Region"}, "INFAPCWINHVM"]}, "SubnetId": {"Ref": "PublicSubnet1ID"}, "SecurityGroupIds": [{"Ref": "InstanceSecurityGroup"}], "InstanceType": {"Ref": "PowerCenterInstanceType"}, "KeyName": {"Ref": "KeyPairName"}}, "CreationPolicy": {"ResourceSignal": {"Timeout": "PT2H30M"}}}, "InfaNode6EIPAddress": {"Condition": "6NodeEIPCondition", "Type": "AWS::EC2::EIP", "Properties": {"Domain": "vpc", "InstanceId": {"Ref": "InfaNode6"}}}, "InfaNode6": {"Condition": "6NodeCondition", "DependsOn": "InfaMaster", "Type": "AWS::EC2::Instance", "Metadata": {"AWS::CloudFormation::Init": {"config": {"commands": {"1-setup": {"command": {"Fn::Join": ["", ["powershell -F C:\\InfaEc2Scripts\\winInfaInstallerEc2.ps1 ", {"Ref": "InformaticaDomainPassword"}, " ", {"Ref": "DatabasePassword"}, " null ", {"Ref": "EncryptionKeyPhrase"}]]}}}}}}, "Properties": {"Tags": [{"Key": "Name", "Value": {"Fn::Join": ["", [{"Ref": "InformaticaNodeName"}, "Node6"]]}}], "ImageId": {"Fn::FindInMap": ["AWSAMIRegionMap", {"Ref": "AWS::Region"}, "INFAPCWINHVM"]}, "SubnetId": {"Ref": "PublicSubnet2ID"}, "SecurityGroupIds": [{"Ref": "InstanceSecurityGroup"}], "InstanceType": {"Ref": "PowerCenterInstanceType"}, "KeyName": {"Ref": "KeyPairName"}}, "CreationPolicy": {"ResourceSignal": {"Timeout": "PT2H30M"}}}, "InfaNode7EIPAddress": {"Condition": "8NodeEIPCondition", "Type": "AWS::EC2::EIP", "Properties": {"Domain": "vpc", "InstanceId": {"Ref": "InfaNode7"}}}, "InfaNode7": {"Condition": "8NodeCondition", "DependsOn": "InfaMaster", "Type": "AWS::EC2::Instance", "Metadata": {"AWS::CloudFormation::Init": {"config": {"commands": {"1-setup": {"command": {"Fn::Join": ["", ["powershell -F C:\\InfaEc2Scripts\\winInfaInstallerEc2.ps1 ", {"Ref": "InformaticaDomainPassword"}, " ", {"Ref": "DatabasePassword"}, " null ", {"Ref": "EncryptionKeyPhrase"}]]}}}}}}, "Properties": {"Tags": [{"Key": "Name", "Value": {"Fn::Join": ["", [{"Ref": "InformaticaNodeName"}, "Node7"]]}}], "ImageId": {"Fn::FindInMap": ["AWSAMIRegionMap", {"Ref": "AWS::Region"}, "INFAPCWINHVM"]}, "SubnetId": {"Ref": "PublicSubnet1ID"}, "SecurityGroupIds": [{"Ref": "InstanceSecurityGroup"}], "InstanceType": {"Ref": "PowerCenterInstanceType"}, "KeyName": {"Ref": "KeyPairName"}}, "CreationPolicy": {"ResourceSignal": {"Timeout": "PT2H30M"}}}, "InfaNode8EIPAddress": {"Condition": "8NodeEIPCondition", "Type": "AWS::EC2::EIP", "Properties": {"Domain": "vpc", "InstanceId": {"Ref": "InfaNode8"}}}, "InfaNode8": {"Condition": "8NodeCondition", "DependsOn": "InfaMaster", "Type": "AWS::EC2::Instance", "Metadata": {"AWS::CloudFormation::Init": {"config": {"commands": {"1-setup": {"command": {"Fn::Join": ["", ["powershell -F C:\\InfaEc2Scripts\\winInfaInstallerEc2.ps1 ", {"Ref": "InformaticaDomainPassword"}, " ", {"Ref": "DatabasePassword"}, " null ", {"Ref": "EncryptionKeyPhrase"}]]}}}}}}, "Properties": {"Tags": [{"Key": "Name", "Value": {"Fn::Join": ["", [{"Ref": "InformaticaNodeName"}, "Node8"]]}}], "ImageId": {"Fn::FindInMap": ["AWSAMIRegionMap", {"Ref": "AWS::Region"}, "INFAPCWINHVM"]}, "SubnetId": {"Ref": "PublicSubnet2ID"}, "SecurityGroupIds": [{"Ref": "InstanceSecurityGroup"}], "InstanceType": {"Ref": "PowerCenterInstanceType"}, "KeyName": {"Ref": "KeyPairName"}}, "CreationPolicy": {"ResourceSignal": {"Timeout": "PT2H30M"}}}, "InfaNode9EIPAddress": {"Condition": "10NodeEIPCondition", "Type": "AWS::EC2::EIP", "Properties": {"Domain": "vpc", "InstanceId": {"Ref": "InfaNode9"}}}, "InfaNode9": {"Condition": "10NodeCondition", "DependsOn": "InfaMaster", "Type": "AWS::EC2::Instance", "Metadata": {"AWS::CloudFormation::Init": {"config": {"commands": {"1-setup": {"command": {"Fn::Join": ["", ["powershell -F C:\\InfaEc2Scripts\\winInfaInstallerEc2.ps1 ", {"Ref": "InformaticaDomainPassword"}, " ", {"Ref": "DatabasePassword"}, " null ", {"Ref": "EncryptionKeyPhrase"}]]}}}}}}, "Properties": {"Tags": [{"Key": "Name", "Value": {"Fn::Join": ["", [{"Ref": "InformaticaNodeName"}, "Node9"]]}}], "ImageId": {"Fn::FindInMap": ["AWSAMIRegionMap", {"Ref": "AWS::Region"}, "INFAPCWINHVM"]}, "SubnetId": {"Ref": "PublicSubnet1ID"}, "SecurityGroupIds": [{"Ref": "InstanceSecurityGroup"}], "InstanceType": {"Ref": "PowerCenterInstanceType"}, "KeyName": {"Ref": "KeyPairName"}}, "CreationPolicy": {"ResourceSignal": {"Timeout": "PT2H30M"}}}, "InfaNode10EIPAddress": {"Condition": "10NodeEIPCondition", "Type": "AWS::EC2::EIP", "Properties": {"Domain": "vpc", "InstanceId": {"Ref": "InfaNode10"}}}, "InfaNode10": {"Condition": "10NodeCondition", "DependsOn": "InfaMaster", "Type": "AWS::EC2::Instance", "Metadata": {"AWS::CloudFormation::Init": {"config": {"commands": {"1-setup": {"command": {"Fn::Join": ["", ["powershell -F C:\\InfaEc2Scripts\\winInfaInstallerEc2.ps1 ", {"Ref": "InformaticaDomainPassword"}, " ", {"Ref": "DatabasePassword"}, " null ", {"Ref": "EncryptionKeyPhrase"}]]}}}}}}, "Properties": {"Tags": [{"Key": "Name", "Value": {"Fn::Join": ["", [{"Ref": "InformaticaNodeName"}, "Node10"]]}}], "ImageId": {"Fn::FindInMap": ["AWSAMIRegionMap", {"Ref": "AWS::Region"}, "INFAPCWINHVM"]}, "SubnetId": {"Ref": "PublicSubnet2ID"}, "SecurityGroupIds": [{"Ref": "InstanceSecurityGroup"}], "InstanceType": {"Ref": "PowerCenterInstanceType"}, "KeyName": {"Ref": "KeyPairName"}}, "CreationPolicy": {"ResourceSignal": {"Timeout": "PT2H30M"}}}, "InfaNode11EIPAddress": {"Condition": "12NodeEIPCondition", "Type": "AWS::EC2::EIP", "Properties": {"Domain": "vpc", "InstanceId": {"Ref": "InfaNode11"}}}, "InfaNode11": {"Condition": "12NodeCondition", "DependsOn": "InfaMaster", "Type": "AWS::EC2::Instance", "Metadata": {"AWS::CloudFormation::Init": {"config": {"commands": {"1-setup": {"command": {"Fn::Join": ["", ["powershell -F C:\\InfaEc2Scripts\\winInfaInstallerEc2.ps1 ", {"Ref": "InformaticaDomainPassword"}, " ", {"Ref": "DatabasePassword"}, " null ", {"Ref": "EncryptionKeyPhrase"}]]}}}}}}, "Properties": {"Tags": [{"Key": "Name", "Value": {"Fn::Join": ["", [{"Ref": "InformaticaNodeName"}, "Node11"]]}}], "ImageId": {"Fn::FindInMap": ["AWSAMIRegionMap", {"Ref": "AWS::Region"}, "INFAPCWINHVM"]}, "SubnetId": {"Ref": "PublicSubnet1ID"}, "SecurityGroupIds": [{"Ref": "InstanceSecurityGroup"}], "InstanceType": {"Ref": "PowerCenterInstanceType"}, "KeyName": {"Ref": "KeyPairName"}}, "CreationPolicy": {"ResourceSignal": {"Timeout": "PT2H30M"}}}, "InfaNode12EIPAddress": {"Condition": "12NodeEIPCondition", "Type": "AWS::EC2::EIP", "Properties": {"Domain": "vpc", "InstanceId": {"Ref": "InfaNode12"}}}, "InfaNode12": {"Condition": "12NodeCondition", "DependsOn": "InfaMaster", "Type": "AWS::EC2::Instance", "Metadata": {"AWS::CloudFormation::Init": {"config": {"commands": {"1-setup": {"command": {"Fn::Join": ["", ["powershell -F C:\\InfaEc2Scripts\\winInfaInstallerEc2.ps1 ", {"Ref": "InformaticaDomainPassword"}, " ", {"Ref": "DatabasePassword"}, " null ", {"Ref": "EncryptionKeyPhrase"}]]}}}}}}, "Properties": {"Tags": [{"Key": "Name", "Value": {"Fn::Join": ["", [{"Ref": "InformaticaNodeName"}, "Node12"]]}}], "ImageId": {"Fn::FindInMap": ["AWSAMIRegionMap", {"Ref": "AWS::Region"}, "INFAPCWINHVM"]}, "SubnetId": {"Ref": "PublicSubnet2ID"}, "SecurityGroupIds": [{"Ref": "InstanceSecurityGroup"}], "InstanceType": {"Ref": "PowerCenterInstanceType"}, "KeyName": {"Ref": "KeyPairName"}}, "CreationPolicy": {"ResourceSignal": {"Timeout": "PT2H30M"}}}, "InfaNode13EIPAddress": {"Condition": "14NodeEIPCondition", "Type": "AWS::EC2::EIP", "Properties": {"Domain": "vpc", "InstanceId": {"Ref": "InfaNode13"}}}, "InfaNode13": {"Condition": "14NodeCondition", "DependsOn": "InfaMaster", "Type": "AWS::EC2::Instance", "Metadata": {"AWS::CloudFormation::Init": {"config": {"commands": {"1-setup": {"command": {"Fn::Join": ["", ["powershell -F C:\\InfaEc2Scripts\\winInfaInstallerEc2.ps1 ", {"Ref": "InformaticaDomainPassword"}, " ", {"Ref": "DatabasePassword"}, " null ", {"Ref": "EncryptionKeyPhrase"}]]}}}}}}, "Properties": {"Tags": [{"Key": "Name", "Value": {"Fn::Join": ["", [{"Ref": "InformaticaNodeName"}, "Node13"]]}}], "ImageId": {"Fn::FindInMap": ["AWSAMIRegionMap", {"Ref": "AWS::Region"}, "INFAPCWINHVM"]}, "SubnetId": {"Ref": "PublicSubnet1ID"}, "SecurityGroupIds": [{"Ref": "InstanceSecurityGroup"}], "InstanceType": {"Ref": "PowerCenterInstanceType"}, "KeyName": {"Ref": "KeyPairName"}}, "CreationPolicy": {"ResourceSignal": {"Timeout": "PT2H30M"}}}, "InfaNode14EIPAddress": {"Condition": "14NodeEIPCondition", "Type": "AWS::EC2::EIP", "Properties": {"Domain": "vpc", "InstanceId": {"Ref": "InfaNode14"}}}, "InfaNode14": {"Condition": "14NodeCondition", "DependsOn": "InfaMaster", "Type": "AWS::EC2::Instance", "Metadata": {"AWS::CloudFormation::Init": {"config": {"commands": {"1-setup": {"command": {"Fn::Join": ["", ["powershell -F C:\\InfaEc2Scripts\\winInfaInstallerEc2.ps1 ", {"Ref": "InformaticaDomainPassword"}, " ", {"Ref": "DatabasePassword"}, " null ", {"Ref": "EncryptionKeyPhrase"}]]}}}}}}, "Properties": {"Tags": [{"Key": "Name", "Value": {"Fn::Join": ["", [{"Ref": "InformaticaNodeName"}, "Node14"]]}}], "ImageId": {"Fn::FindInMap": ["AWSAMIRegionMap", {"Ref": "AWS::Region"}, "INFAPCWINHVM"]}, "SubnetId": {"Ref": "PublicSubnet2ID"}, "SecurityGroupIds": [{"Ref": "InstanceSecurityGroup"}], "InstanceType": {"Ref": "PowerCenterInstanceType"}, "KeyName": {"Ref": "KeyPairName"}}, "CreationPolicy": {"ResourceSignal": {"Timeout": "PT2H30M"}}}, "InfaNode15EIPAddress": {"Condition": "16NodeEIPCondition", "Type": "AWS::EC2::EIP", "Properties": {"Domain": "vpc", "InstanceId": {"Ref": "InfaNode15"}}}, "InfaNode15": {"Condition": "16NodeCondition", "DependsOn": "InfaMaster", "Type": "AWS::EC2::Instance", "Metadata": {"AWS::CloudFormation::Init": {"config": {"commands": {"1-setup": {"command": {"Fn::Join": ["", ["powershell -F C:\\InfaEc2Scripts\\winInfaInstallerEc2.ps1 ", {"Ref": "InformaticaDomainPassword"}, " ", {"Ref": "DatabasePassword"}, " null ", {"Ref": "EncryptionKeyPhrase"}]]}}}}}}, "Properties": {"Tags": [{"Key": "Name", "Value": {"Fn::Join": ["", [{"Ref": "InformaticaNodeName"}, "Node15"]]}}], "ImageId": {"Fn::FindInMap": ["AWSAMIRegionMap", {"Ref": "AWS::Region"}, "INFAPCWINHVM"]}, "SubnetId": {"Ref": "PublicSubnet1ID"}, "SecurityGroupIds": [{"Ref": "InstanceSecurityGroup"}], "InstanceType": {"Ref": "PowerCenterInstanceType"}, "KeyName": {"Ref": "KeyPairName"}}, "CreationPolicy": {"ResourceSignal": {"Timeout": "PT2H30M"}}}, "InfaNode16EIPAddress": {"Condition": "16NodeEIPCondition", "Type": "AWS::EC2::EIP", "Properties": {"Domain": "vpc", "InstanceId": {"Ref": "InfaNode16"}}}, "InfaNode16": {"Condition": "16NodeCondition", "DependsOn": "InfaMaster", "Type": "AWS::EC2::Instance", "Metadata": {"AWS::CloudFormation::Init": {"config": {"commands": {"1-setup": {"command": {"Fn::Join": ["", ["powershell -F C:\\InfaEc2Scripts\\winInfaInstallerEc2.ps1 ", {"Ref": "InformaticaDomainPassword"}, " ", {"Ref": "DatabasePassword"}, " null ", {"Ref": "EncryptionKeyPhrase"}]]}}}}}}, "Properties": {"Tags": [{"Key": "Name", "Value": {"Fn::Join": ["", [{"Ref": "InformaticaNodeName"}, "Node16"]]}}], "ImageId": {"Fn::FindInMap": ["AWSAMIRegionMap", {"Ref": "AWS::Region"}, "INFAPCWINHVM"]}, "SubnetId": {"Ref": "PublicSubnet2ID"}, "SecurityGroupIds": [{"Ref": "InstanceSecurityGroup"}], "InstanceType": {"Ref": "PowerCenterInstanceType"}, "KeyName": {"Ref": "KeyPairName"}}, "CreationPolicy": {"ResourceSignal": {"Timeout": "PT2H30M"}}}}, "Outputs": {"PowerCenterAgentIP": {"Value": {"Fn::GetAtt": ["InfaMaster", "PublicIp"]}, "Description": "Elastic IP address of the PowerCenter instance"}, "InstanceID": {"Description": "Instance ID of the newly created EC2 Master instance", "Value": {"Ref": "InfaMaster"}}, "AvailabilityZone": {"Description": "Availability Zone of the newly created EC2 instances", "Value": {"Fn::GetAtt": ["InfaMaster", "AvailabilityZone"]}}, "PublicDNS": {"Description": "Public DNS name of the newly created EC2 Master instance", "Value": {"Fn::GetAtt": ["InfaMaster", "PublicDnsName"]}}, "RDSInstance": {"Value": {"Ref": "RDSInstance"}, "Description": "RDS Instance ID"}, "RDSEndpointAddress": {"Description": "RDS Address", "Value": {"Fn::GetAtt": ["RDSInstance", "Endpoint.Address"]}}, "RDSEndpointPort": {"Description": "RDS Port", "Value": {"Fn::GetAtt": ["RDSInstance", "Endpoint.Port"]}}}}
