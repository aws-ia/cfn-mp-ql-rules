AWSTemplateFormatVersion: 2010-09-09
Description: 'HashiCorp Consul (Please do not remove) Aug,28,2019 QS(0036)'
Metadata:
  LICENSE: 'Apache License, Version 2.0'
Parameters:
  BastionSecurityGroupID:
    Description: ID of the bastion host security group to enable SSH connections (e.g. sg-7f16e910)
    Type: 'AWS::EC2::SecurityGroup::Id'
  ConsulInstanceType:
    Type: String
    Description: Consul node instance type
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m4.large
      - m4.xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
    ConstraintDescription: Choose an instance type.
    Default: m5.large
  ConsulEc2RetryTagKey:
    Description: The Amazon EC2 instance tag key to filter on when joining to other Consul nodes.
    Type: String
    Default: 'aws:cloudformation:stack-name'
    ConstraintDescription: Must match EC2 Tag Name requirements.
  KeyPair:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: 'AWS::EC2::KeyPair::KeyName'
    Default: id_rsa_aws
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.
  PrivateSubnet1ID:
    Description: 'ID of the private subnet 1 in Availability Zone 1 (e.g., subnet-xxxxxxxx)'
    Type: 'AWS::EC2::Subnet::Id'
  PrivateSubnet2ID:
    Description: 'ID of the private subnet 2 in Availability Zone 2 (e.g., subnet-xxxxxxxx)'
    Type: 'AWS::EC2::Subnet::Id'
  PrivateSubnet3ID:
    Description: 'ID of the private subnet 2 in Availability Zone 3 (e.g., subnet-xxxxxxxx)'
    Type: 'AWS::EC2::Subnet::Id'
  QSS3BucketName:
    AllowedPattern: '^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$'
    ConstraintDescription: >-
      Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Default: 'aws-quickstart'
    Description: >-
      S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: '^[0-9a-zA-Z-/]*$'
    ConstraintDescription: >-
      Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).
    Default: 'quickstart-hashicorp-consul/'
    Description: >-
      S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).
    Type: String
  VPCID:
    Description: VPC ID
    Type: 'AWS::EC2::VPC::Id'
  VPCCIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    Description: CIDR Block for the VPC
    Type: String
  ConsulServerNodes:
    Type: String
    Description: 'Sets DesiredCapacity, MinSize, and MaxSize'
    AllowedValues:
      - '3'
      - '5'
      - '7'
    Default: '3'
  ConsulClientNodes:
    Type: String
    Description: 'Sets DesiredCapacity and MaxSize '
    Default: '3'
Mappings:
  AWSAMIRegionMap:
    ap-northeast-1:
      US1604HVM: ami-014cc8d7cb6d26dc8
    ap-northeast-2:
      US1604HVM: ami-004b3430b806f3b1a
    ap-south-1:
      US1604HVM: ami-0f59afa4a22fad2f0
    ap-southeast-1:
      US1604HVM: ami-08b3278ea6e379084
    ap-southeast-2:
      US1604HVM: ami-00d7116c396e73b04
    ca-central-1:
      US1604HVM: ami-0086bcfbab4b22f60
    eu-central-1:
      US1604HVM: ami-0062c497b55437b01
    eu-north-1:
      US1604HVM: ami-0ca3b50bc99a41773
    eu-west-1:
      US1604HVM: ami-0987ee37af7792903
    eu-west-2:
      US1604HVM: ami-05945867d79b7d926
    eu-west-3:
      US1604HVM: ami-00c60f4df93ff408e
    sa-east-1:
      US1604HVM: ami-0fb487b6f6ab53ff4
    us-east-1:
      US1604HVM: ami-09f9d773751b9d606
    us-east-2:
      US1604HVM: ami-0891395d749676c2e
    us-west-1:
      US1604HVM: ami-0c0e5a396959508b0
    ap-northeast-3:
      US1604HVM: ami-0f446043d25a2a05c
    us-west-2:
      US1604HVM: ami-0bbe9b07c5fe8e86e
Conditions:
  GovCloudCondition: !Equals
    - !Ref AWS::Region
    - us-gov-west-1
Resources:
  ConsulSecGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enables SSH access.
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !Ref BastionSecurityGroupID
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: !Ref VPCCIDR
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - ConsulSecGroup
  ConsulServerAsg:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      LaunchConfigurationName: !Ref ConsulServerLC
      MinSize: !Ref ConsulServerNodes
      MaxSize: !Ref ConsulServerNodes
      DesiredCapacity: !Ref ConsulServerNodes
      VPCZoneIdentifier:
        - !Ref PrivateSubnet1ID
        - !Ref PrivateSubnet2ID
        - !Ref PrivateSubnet3ID
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - Consul-Server
          PropagateAtLaunch: true
  ConsulClientAsg:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      LaunchConfigurationName: !Ref ConsulClientLC
      MinSize: !Ref ConsulClientNodes
      MaxSize: !Ref ConsulClientNodes
      DesiredCapacity: !Ref ConsulClientNodes
      VPCZoneIdentifier:
        - !Ref PrivateSubnet1ID
        - !Ref PrivateSubnet2ID
        - !Ref PrivateSubnet3ID
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - Consul-Client
          PropagateAtLaunch: true
  ConsulServerLC:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          cs_install:
            - install_and_enable_cfn_hup
            - install_consul
            - install_consul_template
            - consul_bootstrap
            - setup_dnsmasq
        install_and_enable_cfn_hup:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Join
                - ''
                - - |
                    [main]
                  - stack=
                  - !Ref 'AWS::StackId'
                  - |2+
                  - region=
                  - !Ref 'AWS::Region'
                  - ""
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Join
                - ''
                - - |
                    [cfn-auto-reloader-hook]
                  - |
                    triggers=post.update
                  - >
                    path=Resources.ConsulClientLC.Metadata.AWS::CloudFormation::Init

                  - 'action=/usr/local/bin/cfn-init -v '
                  - '         --stack '
                  - !Ref 'AWS::StackName'
                  - '         --resource ConsulClientLC '
                  - '         --configsets cs_install '
                  - '         --region '
                  - !Ref 'AWS::Region'
                  - |2+
                  - |
                    runas=root
            /lib/systemd/system/cfn-hup.service:
              content: !Join
                - ''
                - - |
                    [Unit]
                  - |+
                    Description=cfn-hup daemon

                  - |
                    [Service]
                  - |
                    Type=simple
                  - |
                    ExecStart=/usr/local/bin/cfn-hup
                  - |
                    Restart=always
                  - |
                    [Install]
                  - WantedBy=multi-user.target
          commands:
            01enable_cfn_hup:
              command: systemctl enable cfn-hup.service
            02start_cfn_hup:
              command: systemctl start cfn-hup.service
        install_consul:
          sources:
            /usr/bin/: https://releases.hashicorp.com/consul/1.6.0/consul_1.6.0_linux_amd64.zip
        install_consul_template:
          sources:
            /usr/bin/: https://releases.hashicorp.com/consul-template/0.21.0/consul-template_0.21.0_linux_amd64.zip
        consul_bootstrap:
          files:
            /etc/systemd/system/consul.service:
              content: !Join
                - ''
                - - |
                    [Unit]
                  - |
                    Description=Consul
                  - |
                    Requires=network-online.target
                  - |
                    After=network-online.target
                  - |
                    [Service]
                  - |
                    Restart=on-failure
                  - |
                    ExecStart=/usr/bin/consul agent -config-dir /etc/consul
                  - |
                    ExecReload=/bin/kill -HUP $MAINPID
                  - |
                    KillSignal=SIGTERM
                  - |
                    [Install]
                  - WantedBy=multi-user.target
            /etc/consul/server.json:
              content: !Sub |
                {
                     "server": true,
                     "ui": true,
                     "data_dir": "/opt/consul/data",
                     "client_addr": "0.0.0.0",
                     "bootstrap_expect": ${ConsulServerNodes},
                     "retry_join": ["provider=aws tag_key=${ConsulEc2RetryTagKey} tag_value=${AWS::StackName}"]
                }
              mode: 000644
              owner: root
              group: root
          commands:
            01_start_consul:
              command: service consul start
        setup_dnsmasq:
          files:
            /etc/dnsmasq.d/consul:
              content: !Join
                - ''
                - - |
                    server=/consul/127.0.0.1#8600
                  - |
                    listen-address=127.0.0.1
                  - |
                    bind-interfaces
                  - ""
          packages:
            apt:
              dnsmasq-base: []
              dnsmasq: []
          commands:
            01_start_dnsmasq:
              command: service dnsmasq restart
    Properties:
      InstanceType: !Ref ConsulInstanceType
      AssociatePublicIpAddress: false
      SecurityGroups:
        - !Ref ConsulSecGroup
      KeyName: !Ref KeyPair
      ImageId: !FindInMap
        - AWSAMIRegionMap
        - !Ref 'AWS::Region'
        - US1604HVM
      IamInstanceProfile: !Ref ConsulServerProfile
  ConsulClientLC:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          cs_install:
            - install_and_enable_cfn_hup
            - install_consul
            - install_consul_template
            - consul_bootstrap
            - setup_dnsmasq
        install_and_enable_cfn_hup:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Join
                - ''
                - - |
                    [main]
                  - stack=
                  - !Ref 'AWS::StackId'
                  - |2+
                  - region=
                  - !Ref 'AWS::Region'
                  - ""
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Join
                - ''
                - - |
                    [cfn-auto-reloader-hook]
                  - |
                    triggers=post.update
                  - >
                    path=Resources.ConsulClientLC.Metadata.AWS::CloudFormation::Init

                  - 'action=/usr/local/bin/cfn-init -v '
                  - '         --stack '
                  - !Ref 'AWS::StackName'
                  - '         --resource ConsulClientLC '
                  - '         --configsets cs_install '
                  - '         --region '
                  - !Ref 'AWS::Region'
                  - |2+
                  - |
                    runas=root
            /lib/systemd/system/cfn-hup.service:
              content: !Join
                - ''
                - - |
                    [Unit]
                  - |+
                    Description=cfn-hup daemon

                  - |
                    [Service]
                  - |
                    Type=simple
                  - |
                    ExecStart=/usr/local/bin/cfn-hup
                  - |
                    Restart=always
                  - |
                    [Install]
                  - WantedBy=multi-user.target
          commands:
            01enable_cfn_hup:
              command: systemctl enable cfn-hup.service
            02start_cfn_hup:
              command: systemctl start cfn-hup.service
        install_consul:
          sources:
            /usr/bin/: https://releases.hashicorp.com/consul/1.6.0/consul_1.6.0_linux_amd64.zip
        install_consul_template:
          sources:
            /usr/bin/: https://releases.hashicorp.com/consul-template/0.21.0/consul-template_0.21.0_linux_amd64.zip
        consul_bootstrap:
          files:
            /etc/systemd/system/consul.service:
              content: !Join
                - ''
                - - |
                    [Unit]
                  - |
                    Description=Consul
                  - |
                    Requires=network-online.target
                  - |
                    After=network-online.target
                  - |
                    [Service]
                  - |
                    Restart=on-failure
                  - |
                    ExecStart=/usr/bin/consul agent -config-dir /etc/consul
                  - |
                    ExecReload=/bin/kill -HUP $MAINPID
                  - |
                    KillSignal=SIGTERM
                  - |
                    [Install]
                  - WantedBy=multi-user.target
            /etc/consul/client.json:
              content: !Sub |
                {
                     "server": false,
                     "ui": true,
                     "data_dir": "/opt/consul/data",
                     "client_addr": "0.0.0.0",
                     "retry_join": ["provider=aws tag_key=${ConsulEc2RetryTagKey} tag_value=${AWS::StackName}"]
                }
          commands:
            01_start_consul:
              command: service consul start
        setup_dnsmasq:
          files:
            /etc/dnsmasq.d/consul:
              content: !Join
                - ''
                - - |
                    server=/consul/127.0.0.1#8600
                  - |
                    listen-address=127.0.0.1
                  - |
                    bind-interfaces
                  - ""
          packages:
            apt:
              dnsmasq-base: []
              dnsmasq: []
          commands:
            01_start_dnsmasq:
              command: service dnsmasq restart
    Properties:
      InstanceType: !Ref ConsulInstanceType
      AssociatePublicIpAddress: false
      SecurityGroups:
        - !Ref ConsulSecGroup
      KeyName: !Ref KeyPair
      ImageId: !FindInMap
        - AWSAMIRegionMap
        - !Ref 'AWS::Region'
        - US1604HVM
      IamInstanceProfile: !Ref ConsulClientProfile
  ConsulClientRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Principal:
              Service: ec2.amazonaws.com
            Effect: Allow
            Sid: ''
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 's3:GetObject'
                Resource: !Sub 'arn:aws:s3:::${QSS3BucketName}/${QSS3KeyPrefix}*'
                Effect: Allow
          PolicyName: AuthenticatedS3GetObjects
  ConsulClientPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: consul-client
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action: 'ec2:DescribeInstances'
            Resource: '*'
      Roles:
        - !Ref ConsulClientRole
  ConsulClientProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref ConsulClientRole
  ConsulServerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Principal:
              Service: ec2.amazonaws.com
            Effect: Allow
            Sid: ''
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 's3:GetObject'
                Resource: !Sub 'arn:aws:s3:::${QSS3BucketName}/${QSS3KeyPrefix}*'
                Effect: Allow
          PolicyName: AuthenticatedS3GetObjects
  ConsulServerPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: consul-server
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - 'ec2:DescribeInstances'
            Resource: '*'
      Roles:
        - !Ref ConsulServerRole
  ConsulServerProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref ConsulServerRole
Outputs:
  ConsulEc2RetryTagKey:
    Value: !Ref ConsulEc2RetryTagKey
    Description: The Amazon EC2 instance tag key to filter on when joining to other Consul nodes.
  ConsulEc2RetryTagValue:
    Value: !Ref 'AWS::StackName'
    Description: The Amazon EC2 instance tag value to filter on when joining to other Consul nodes.
