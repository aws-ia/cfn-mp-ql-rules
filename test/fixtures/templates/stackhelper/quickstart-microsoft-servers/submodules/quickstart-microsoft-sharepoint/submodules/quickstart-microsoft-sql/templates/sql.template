{"AWSTemplateFormatVersion": "2010-09-09", "Description": "This template deploys two Windows Server Failover Clustering (WSFC) and SQL Server AlwaysOn Availability Group nodes. This template is intended to be installed into an existing VPC that was built using the sample reference architecture titled: \"Implementing Active Directory Domain Services in the AWS Cloud\" **WARNING** This template creates Amazon EC2 Windows instance and related resources. You will be billed for the AWS resources used if you create a stack from this template. QS(0003)", "Metadata": {"AWS::CloudFormation::Interface": {"ParameterGroups": [{"Label": {"default": "Network Configuration"}, "Parameters": ["ThirdAZ", "VPCID", "PrivateSubnet1ID", "PrivateSubnet2ID", "PrivateSubnet3ID"]}, {"Label": {"default": "Amazon EC2 Configuration"}, "Parameters": ["KeyPairName", "HostType", "DedicatedHostAMI"]}, {"Label": {"default": "Microsoft Active Directory Configuration"}, "Parameters": ["DomainDNSName", "DomainNetBIOSName", "DomainAdminUser", "DomainAdminPassword", "DomainMemberSGID"]}, {"Label": {"default": "Microsoft SQL Server Configuration"}, "Parameters": ["SQLServerVersion", "SQLServiceAccount", "SQLServiceAccountPassword", "SQLLicenseProvided", "Volume1Size", "Volume1Type", "Volume1Iops", "Volume2Size", "Volume2Type", "Volume2Iops", "Volume3Size", "Volume3Type", "Volume3Iops"]}, {"Label": {"default": "Failover Cluster Configuration"}, "Parameters": ["WSFCFileServerInstanceType", "WSFCFileServerNetBIOSName", "WSFCFileServerPrivateIP", "WSFCNode1InstanceType", "WSFCNode1NetBIOSName", "WSFCNode1PrivateIP1", "WSFCNode1PrivateIP2", "WSFCNode1PrivateIP3", "DedicatedHostIDNode1", "WSFCNode2InstanceType", "WSFCNode2NetBIOSName", "WSFCNode2PrivateIP1", "WSFCNode2PrivateIP2", "WSFCNode2PrivateIP3", "DedicatedHostIDNode2", "WSFCNode3InstanceType", "WSFCNode3NetBIOSName", "WSFCNode3PrivateIP1", "WSFCNode3PrivateIP2", "WSFCNode3PrivateIP3", "DedicatedHostIDNode3"]}, {"Label": {"default": "AWS Quick Start Configuration"}, "Parameters": ["QSS3BucketName", "QSS3KeyPrefix"]}], "ParameterLabels": {"DedicatedHostAMI": {"default": "BYOL AMI to Use on Dedicated Host"}, "DedicatedHostIDNode1": {"default": "Dedicated HostID for Node 1 (requires Tenancy set to \"Dedicated Host\")"}, "DedicatedHostIDNode2": {"default": "Dedicated HostID for Node 2 (requires Tenancy set to \"Dedicated Host\")"}, "DedicatedHostIDNode3": {"default": "Dedicated HostID for Node 3 (requires Tenancy set to \"Dedicated Host\")"}, "DomainAdminPassword": {"default": "Domain Admin Password"}, "DomainAdminUser": {"default": "Domain Admin User Name"}, "DomainDNSName": {"default": "Domain DNS Name"}, "DomainMemberSGID": {"default": "Security Group ID for AD Domain Members"}, "DomainNetBIOSName": {"default": "Domain NetBIOS Name"}, "HostType": {"default": "Tenancy"}, "KeyPairName": {"default": "Key Pair Name"}, "PrivateSubnet1ID": {"default": "Private Subnet 1 ID"}, "PrivateSubnet2ID": {"default": "Private Subnet 2 ID"}, "PrivateSubnet3ID": {"default": "Private Subnet 3 ID"}, "QSS3BucketName": {"default": "Quick Start S3 Bucket Name"}, "QSS3KeyPrefix": {"default": "Quick Start S3 Key Prefix"}, "SQLLicenseProvided": {"default": "Amazon-Provided SQL Server License"}, "SQLServerVersion": {"default": "SQL Server Version"}, "SQLServiceAccount": {"default": "Service Account Name"}, "SQLServiceAccountPassword": {"default": "Service Account Password"}, "ThirdAZ": {"default": "Third AZ"}, "Volume1Iops": {"default": "Data Volume IOPS"}, "Volume1Size": {"default": "Data Volume Size"}, "Volume1Type": {"default": "Data Volume Type"}, "Volume2Iops": {"default": "Logs Volume IOPS"}, "Volume2Size": {"default": "Logs Volume Size"}, "Volume2Type": {"default": "Logs Volume Type"}, "Volume3Iops": {"default": "TempDB Volume IOPS"}, "Volume3Size": {"default": "TempDB Volume Size"}, "Volume3Type": {"default": "TempDB Volume Type"}, "VPCID": {"default": "VPC ID"}, "WSFCFileServerInstanceType": {"default": "File Server Instance Type"}, "WSFCFileServerNetBIOSName": {"default": "File Server NetBIOS Name"}, "WSFCFileServerPrivateIP": {"default": "File Server Private IP Address"}, "WSFCNode1InstanceType": {"default": "Instance Type for Cluster Node 1"}, "WSFCNode1NetBIOSName": {"default": "Cluster Node 1 NetBIOS Name"}, "WSFCNode1PrivateIP1": {"default": "Cluster Node 1 Private IP Address 1"}, "WSFCNode1PrivateIP2": {"default": "Cluster Node 1 Private IP Address 2"}, "WSFCNode1PrivateIP3": {"default": "Cluster Node 1 Private IP Address 3"}, "WSFCNode2InstanceType": {"default": "Instance Type for Cluster Node 2"}, "WSFCNode2NetBIOSName": {"default": "Cluster Node 2 NetBIOS Name"}, "WSFCNode2PrivateIP1": {"default": "Cluster Node 2 Private IP Address 1"}, "WSFCNode2PrivateIP2": {"default": "Cluster Node 2 Private IP Address 2"}, "WSFCNode2PrivateIP3": {"default": "Cluster Node 2 Private IP Address 3"}, "WSFCNode3InstanceType": {"default": "Instance Type for Cluster Node 3"}, "WSFCNode3NetBIOSName": {"default": "Cluster Node 3 NetBIOS Name"}, "WSFCNode3PrivateIP1": {"default": "Cluster Node 3 Private IP Address 1"}, "WSFCNode3PrivateIP2": {"default": "Cluster Node 3 Private IP Address 2"}, "WSFCNode3PrivateIP3": {"default": "Cluster Node 3 Private IP Address 3"}}}}, "Parameters": {"DedicatedHostAMI": {"Default": "", "Description": "If host type is set to \"Dedicated\" or \"Dedicated Host\", you need to specify your imported BYOL AMI id", "Type": "String"}, "DedicatedHostIDNode1": {"Default": "", "Description": "Dedicated HostID for Node1, Only used if HostType is set to \"host\"", "Type": "String"}, "DedicatedHostIDNode2": {"Default": "", "Description": "Dedicated HostID for Node2, Only used if HostType is set to \"host\"", "Type": "String"}, "DedicatedHostIDNode3": {"Default": "", "Description": "Dedicated HostID for the optional Node3, Only used if HostType is set to \"host\"", "Type": "String"}, "DomainAdminPassword": {"AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*", "Description": "Password for the domain admin user. Must be at least 8 characters containing letters, numbers and symbols", "MaxLength": "32", "MinLength": "8", "NoEcho": "true", "Type": "String"}, "DomainAdminUser": {"AllowedPattern": "[a-zA-Z0-9]*", "Default": "StackAdmin", "Description": "User name for the account that will be used as Domain Administrator. This is separate from the default \"Administrator\" account", "MaxLength": "25", "MinLength": "5", "Type": "String"}, "DomainDNSName": {"AllowedPattern": "[a-zA-Z0-9\\-]+\\..+", "Default": "example.com", "Description": "Fully qualified domain name (FQDN) e.g. example.com", "MaxLength": "255", "MinLength": "2", "Type": "String"}, "DomainMemberSGID": {"Description": "ID of the Domain Member Security Group (e.g., sg-7f16e910)", "Type": "AWS::EC2::SecurityGroup::Id"}, "DomainNetBIOSName": {"AllowedPattern": "[a-zA-Z0-9\\-]+", "Default": "EXAMPLE", "Description": "NetBIOS name of the domain (up to 15 characters) for users of earlier versions of Windows e.g. EXAMPLE", "MaxLength": "15", "MinLength": "1", "Type": "String"}, "HostType": {"AllowedValues": ["Shared", "Dedicated", "Dedicated Host"], "Default": "Shared", "Description": "Host Type, NB: For dedicated types, you must already have suitable dedicated hosts in your account", "Type": "String"}, "KeyPairName": {"Description": "Public/private key pairs allow you to securely connect to your instance after it launches", "Type": "AWS::EC2::KeyPair::KeyName"}, "PrivateSubnet1ID": {"Description": "ID of the private subnet 1 in Availability Zone 1 (e.g., subnet-a0246dcd)", "Type": "AWS::EC2::Subnet::Id"}, "PrivateSubnet2ID": {"Description": "ID of the private subnet 2 in Availability Zone 2 (e.g., subnet-a0246dcd)", "Type": "AWS::EC2::Subnet::Id"}, "PrivateSubnet3ID": {"Default": "", "Description": "(Optional) ID of the optional private subnet 3 in Availability Zone 3 (e.g., subnet-a0246dcd)", "Type": "String"}, "QSS3BucketName": {"AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$", "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).", "Default": "aws-quickstart", "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).", "Type": "String"}, "QSS3KeyPrefix": {"AllowedPattern": "^[0-9a-zA-Z-/]*$", "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).", "Default": "quickstart-microsoft-sql/", "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).", "Type": "String"}, "SQLLicenseProvided": {"AllowedValues": ["yes", "no"], "Default": "no", "Description": "License SQL Server from AWS Marketplace", "Type": "String"}, "SQLServerVersion": {"AllowedValues": ["2017", "2016", "2014"], "Default": "2016", "Description": "Version of SQL Server to install on Failover Cluster Nodes", "Type": "String"}, "SQLServiceAccount": {"AllowedPattern": "[a-zA-Z0-9]*", "Default": "sqlsa", "Description": "User name for the SQL Server Service Account. This Account is a Domain User.", "MaxLength": "25", "MinLength": "5", "Type": "String"}, "SQLServiceAccountPassword": {"AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*", "Description": "Password for the SQL Service account. Must be at least 8 characters containing letters, numbers and symbols", "MaxLength": "32", "MinLength": "8", "NoEcho": "true", "Type": "String"}, "ThirdAZ": {"AllowedValues": ["no", "witness", "full"], "Default": "no", "Description": "Enable a 3 AZ deployment, the 3rd AZ can either be used just for the witness, or can be a full SQL cluster node.", "Type": "String"}, "Volume1Iops": {"Default": "1000", "Description": "Iops for the SQL Data drive (only used when volume type is io1)", "MaxValue": "20000", "MinValue": "100", "Type": "Number"}, "Volume1Size": {"Default": "500", "Description": "Volume size for the SQL Data drive, in GiB", "MaxValue": "16000", "MinValue": "100", "Type": "Number"}, "Volume1Type": {"AllowedValues": ["gp2", "io1"], "Default": "gp2", "Description": "Volume type for the SQL Data drive", "Type": "String"}, "Volume2Iops": {"Default": "1000", "Description": "Iops for the SQL Logs drive (only used when volume type is io1)", "MaxValue": "20000", "MinValue": "100", "Type": "Number"}, "Volume2Size": {"Default": "500", "Description": "Volume size for the SQL Logs drive, in GiB", "MaxValue": "16000", "MinValue": "100", "Type": "Number"}, "Volume2Type": {"AllowedValues": ["gp2", "io1"], "Default": "gp2", "Description": "Volume type for the SQL Logs drive", "Type": "String"}, "Volume3Iops": {"Default": "1000", "Description": "Iops for the SQL TempDB drive (only used when volume type is io1)", "MaxValue": "20000", "MinValue": "100", "Type": "Number"}, "Volume3Size": {"Default": "500", "Description": "Volume size for the SQL TempDB drive, in GiB", "MaxValue": "16000", "MinValue": "100", "Type": "Number"}, "Volume3Type": {"AllowedValues": ["gp2", "io1"], "Default": "gp2", "Description": "Volume type for the SQL TempDB drive", "Type": "String"}, "VPCID": {"Description": "ID of the VPC (e.g., vpc-0343606e)", "Type": "AWS::EC2::VPC::Id"}, "WSFCFileServerInstanceType": {"Default": "t2.small", "Description": "Amazon EC2 instance type for a fileserver used to share install media, witness and replication folders", "Type": "String"}, "WSFCFileServerNetBIOSName": {"AllowedPattern": "[a-zA-Z0-9\\-]+", "Default": "WSFCFileServer", "Description": "NetBIOS name of the WSFCFileServer (up to 15 characters)", "MaxLength": "15", "MinLength": "1", "Type": "String"}, "WSFCFileServerPrivateIP": {"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$", "Default": "10.0.0.200", "Description": "Primary private IP for the fileserver located in Availability Zone 1", "Type": "String"}, "WSFCNode1InstanceType": {"AllowedValues": ["r4.xlarge", "r4.2xlarge", "r4.4xlarge", "r4.8xlarge"], "ConstraintDescription": "Only EBS Optimized instance types r4.xlarge, r4.2xlarge, r4.4xlarge, r4.8xlarge allowed", "Default": "r4.2xlarge", "Description": "Amazon EC2 instance type for the first WSFC Node", "Type": "String"}, "WSFCNode1NetBIOSName": {"AllowedPattern": "[a-zA-Z0-9\\-]+", "Default": "WSFCNode1", "Description": "NetBIOS name of the first WSFC Node (up to 15 characters)", "MaxLength": "15", "MinLength": "1", "Type": "String"}, "WSFCNode1PrivateIP1": {"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$", "Default": "10.0.0.100", "Description": "Primary private IP for the first WSFC Node located in Availability Zone 1", "Type": "String"}, "WSFCNode1PrivateIP2": {"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$", "Default": "10.0.0.101", "Description": "Secondary private IP for WSFC cluster on first WSFC Node", "Type": "String"}, "WSFCNode1PrivateIP3": {"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$", "Default": "10.0.0.102", "Description": "Third private IP for Availability Group Listener on first WSFC Node", "Type": "String"}, "WSFCNode2InstanceType": {"AllowedValues": ["r4.xlarge", "r4.2xlarge", "r4.4xlarge", "r4.8xlarge"], "ConstraintDescription": "Only EBS Optimized instance types r4.xlarge, r4.2xlarge, r4.4xlarge, r4.8xlarge allowed", "Default": "r4.2xlarge", "Description": "Amazon EC2 instance type for the second WSFC Node", "Type": "String"}, "WSFCNode2NetBIOSName": {"AllowedPattern": "[a-zA-Z0-9\\-]+", "Default": "WSFCNode2", "Description": "NetBIOS name of the second WSFC Node (up to 15 characters)", "MaxLength": "15", "MinLength": "1", "Type": "String"}, "WSFCNode2PrivateIP1": {"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$", "Default": "10.0.32.100", "Description": "Primary private IP for the second WSFC Node located in Availability Zone 2", "Type": "String"}, "WSFCNode2PrivateIP2": {"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$", "Default": "10.0.32.101", "Description": "Secondary private IP for WSFC cluster on second WSFC Node", "Type": "String"}, "WSFCNode2PrivateIP3": {"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$", "Default": "10.0.32.102", "Description": "Third private IP for Availability Group Listener on second WSFC Node", "Type": "String"}, "WSFCNode3InstanceType": {"AllowedValues": ["r4.xlarge", "r4.2xlarge", "r4.4xlarge", "r4.8xlarge"], "ConstraintDescription": "Only EBS Optimized instance types r4.xlarge, r4.2xlarge, r4.4xlarge, r4.8xlarge allowed", "Default": "r4.2xlarge", "Description": "Amazon EC2 instance type for the third WSFC Node", "Type": "String"}, "WSFCNode3NetBIOSName": {"AllowedPattern": "[a-zA-Z0-9\\-]+", "Default": "WSFCNode3", "Description": "NetBIOS name of the third WSFC Node (up to 15 characters)", "MaxLength": "15", "MinLength": "1", "Type": "String"}, "WSFCNode3PrivateIP1": {"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$", "Default": "10.0.64.100", "Description": "Primary private IP for the optional third WSFC Node located in Availability Zone 3", "Type": "String"}, "WSFCNode3PrivateIP2": {"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$", "Default": "10.0.64.101", "Description": "Secondary private IP for WSFC cluster on optional third WSFC Node", "Type": "String"}, "WSFCNode3PrivateIP3": {"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$", "Default": "10.0.64.102", "Description": "Third private IP for Availability Group Listener on optional third WSFC Node", "Type": "String"}}, "Conditions": {"IsThreeAz": {"Fn::Not": [{"Fn::Equals": [{"Ref": "ThirdAZ"}, "no"]}]}, "ThirdAzIsWitness": {"Fn::Equals": [{"Ref": "ThirdAZ"}, "witness"]}, "ThirdAzIsFullNode": {"Fn::Equals": [{"Ref": "ThirdAZ"}, "full"]}, "IsTwoNode": {"Fn::Not": [{"Fn::Equals": [{"Ref": "ThirdAZ"}, "full"]}]}, "Vol1IsIo1": {"Fn::Equals": [{"Ref": "Volume1Type"}, "io1"]}, "Vol2IsIo1": {"Fn::Equals": [{"Ref": "Volume1Type"}, "io1"]}, "Vol3IsIo1": {"Fn::Equals": [{"Ref": "Volume1Type"}, "io1"]}, "HostTypeIsDefault": {"Fn::Equals": [{"Ref": "HostType"}, "Shared"]}, "HostTypeIsDediHost": {"Fn::Equals": [{"Ref": "HostType"}, "Dedicated Host"]}, "ByolAmi": {"Fn::Not": [{"Fn::Equals": [{"Ref": "HostType"}, "Shared"]}]}, "SQLBakedInAMI": {"Fn::Equals": [{"Ref": "SQLLicenseProvided"}, "yes"]}, "WindowsServer2016": {"Fn::Equals": [{"Ref": "SQLServerVersion"}, "2017"]}, "GovCloudCondition": {"Fn::Equals": [{"Ref": "AWS::Region"}, "us-gov-west-1"]}}, "Rules": {"SubnetsInVPC": {"Assertions": [{"Assert": {"Fn::EachMemberIn": [{"Fn::ValueOfAll": ["AWS::EC2::Subnet::Id", "VpcId"]}, {"Fn::RefAll": "AWS::EC2::VPC::Id"}]}, "AssertDescription": "All subnets must in the VPC"}]}}, "Mappings": {"AWSAMIRegionMap": {"AMI": {"WS2012R2": "Windows_Server-2012-R2_RTM-English-64Bit-Base-2018.03.24", "WS2012R2SQL2014SP2ENT": "Windows_Server-2012-R2_RTM-English-64Bit-SQL_2014_SP2_Enterprise-2018.03.24", "WS2012R2SQL2016SP1ENT": "Windows_Server-2012-R2_RTM-English-64Bit-SQL_2016_SP1_Enterprise-2018.03.24", "WS2016FULLBASE": "Windows_Server-2016-English-Full-Base-2018.03.24", "WS2016FULLSQL2017ENT": "Windows_Server-2016-English-Full-SQL_2017_Enterprise-2018.03.24"}, "ap-northeast-1": {"WS2012R2": "ami-3badff5d", "WS2012R2SQL2014SP2ENT": "ami-f4d28092", "WS2012R2SQL2016SP1ENT": "ami-38d2805e", "WS2016FULLBASE": "ami-6ccf9d0a", "WS2016FULLSQL2017ENT": "ami-80f6a4e6"}, "ap-northeast-2": {"WS2012R2": "ami-dde34cb3", "WS2012R2SQL2014SP2ENT": "ami-dfe34cb1", "WS2012R2SQL2016SP1ENT": "ami-31e14e5f", "WS2016FULLBASE": "ami-ece04f82", "WS2016FULLSQL2017ENT": "ami-5cff5032"}, "ap-northeast-3": {"WS2012R2": "ami-00757d27a0476b33c", "WS2012R2SQL2014SP2ENT": "ami-0aa1ef6457742f53e", "WS2012R2SQL2016SP1ENT": "ami-04114775744de78c3", "WS2016FULLBASE": "ami-0c56d476b019fcd31", "WS2016FULLSQL2017ENT": "ami-0523e4affb867ce57"}, "ap-south-1": {"WS2012R2": "ami-d8b9e2b7", "WS2012R2SQL2014SP2ENT": "ami-b985ded6", "WS2012R2SQL2016SP1ENT": "ami-90b9e2ff", "WS2016FULLBASE": "ami-cabde6a5", "WS2016FULLSQL2017ENT": "ami-f5bce79a"}, "ap-southeast-1": {"WS2012R2": "ami-169fc06a", "WS2012R2SQL2014SP2ENT": "ami-34603f48", "WS2012R2SQL2016SP1ENT": "ami-33603f4f", "WS2016FULLBASE": "ami-b294cbce", "WS2016FULLSQL2017ENT": "ami-638fd01f"}, "ap-southeast-2": {"WS2012R2": "ami-e68f4384", "WS2012R2SQL2014SP2ENT": "ami-7c8f431e", "WS2012R2SQL2016SP1ENT": "ami-1a884478", "WS2016FULLBASE": "ami-058a4667", "WS2016FULLSQL2017ENT": "ami-798a461b"}, "ca-central-1": {"WS2012R2": "ami-56fd7b32", "WS2012R2SQL2014SP2ENT": "ami-2dfb7d49", "WS2012R2SQL2016SP1ENT": "ami-45f97f21", "WS2016FULLBASE": "ami-d5fd7bb1", "WS2016FULLSQL2017ENT": "ami-06f87e62"}, "eu-central-1": {"WS2012R2": "ami-0bdc8fe0", "WS2012R2SQL2014SP2ENT": "ami-b8dc8f53", "WS2012R2SQL2016SP1ENT": "ami-6dc39086", "WS2016FULLBASE": "ami-29c192c2", "WS2016FULLSQL2017ENT": "ami-dcc99a37"}, "eu-west-1": {"WS2012R2": "ami-e9104190", "WS2012R2SQL2014SP2ENT": "ami-78e8be01", "WS2012R2SQL2016SP1ENT": "ami-32eabc4b", "WS2016FULLBASE": "ami-2316475a", "WS2016FULLSQL2017ENT": "ami-ce0150b7"}, "eu-west-2": {"WS2012R2": "ami-19688e7e", "WS2012R2SQL2014SP2ENT": "ami-1f779178", "WS2012R2SQL2016SP1ENT": "ami-6877910f", "WS2016FULLBASE": "ami-9c6b8dfb", "WS2016FULLSQL2017ENT": "ami-fa76909d"}, "eu-west-3": {"WS2012R2": "ami-802492fd", "WS2012R2SQL2014SP2ENT": "ami-58249225", "WS2012R2SQL2016SP1ENT": "ami-6e259313", "WS2016FULLBASE": "ami-7225930f", "WS2016FULLSQL2017ENT": "ami-4b259336"}, "sa-east-1": {"WS2012R2": "ami-6ed38702", "WS2012R2SQL2014SP2ENT": "ami-bed387d2", "WS2012R2SQL2016SP1ENT": "ami-add387c1", "WS2016FULLBASE": "ami-9ede8af2", "WS2016FULLSQL2017ENT": "ami-5ad88c36"}, "us-east-1": {"WS2012R2": "ami-eb1ecd96", "WS2012R2SQL2014SP2ENT": "ami-8d34e7f0", "WS2012R2SQL2016SP1ENT": "ami-5d05d620", "WS2016FULLBASE": "ami-ed14c790", "WS2016FULLSQL2017ENT": "ami-6903d014"}, "us-east-2": {"WS2012R2": "ami-2f16274a", "WS2012R2SQL2014SP2ENT": "ami-bb1627de", "WS2012R2SQL2016SP1ENT": "ami-40958aac", "WS2016FULLBASE": "ami-8e1627eb", "WS2016FULLSQL2017ENT": "ami-04172661"}, "us-west-1": {"WS2012R2": "ami-4e07112e", "WS2012R2SQL2014SP2ENT": "ami-f1071191", "WS2012R2SQL2016SP1ENT": "ami-900513f0", "WS2016FULLBASE": "ami-6d04120d", "WS2016FULLSQL2017ENT": "ami-0a05136a"}, "us-west-2": {"WS2012R2": "ami-651f811d", "WS2012R2SQL2014SP2ENT": "ami-3663fd4e", "WS2012R2SQL2016SP1ENT": "ami-d51e80ad", "WS2016FULLBASE": "ami-8b1886f3", "WS2016FULLSQL2017ENT": "ami-11148a69"}}, "SQLAMINameMap": {"2014": {"no": "WS2012R2", "yes": "WS2012R2SQL2014SP2ENT"}, "2016": {"no": "WS2012R2", "yes": "WS2012R2SQL2016SP1ENT"}, "2017": {"no": "WS2016FULLBASE", "yes": "WS2016FULLSQL2017ENT"}}}, "Resources": {"WSFCRole": {"Type": "AWS::IAM::Role", "Properties": {"Policies": [{"PolicyDocument": {"Version": "2012-10-17", "Statement": [{"Action": ["s3:GetObject"], "Resource": {"Fn::Sub": ["arn:${Partition}:s3:::${QSS3BucketName}/${QSS3KeyPrefix}*", {"Partition": {"Fn::If": ["GovCloudCondition", "aws-us-gov", "aws"]}}]}, "Effect": "Allow"}]}, "PolicyName": "aws-quick-start-s3-policy"}], "Path": "/", "AssumeRolePolicyDocument": {"Statement": [{"Action": ["sts:AssumeRole"], "Principal": {"Service": ["ec2.amazonaws.com"]}, "Effect": "Allow"}], "Version": "2012-10-17"}}}, "WSFCProfile": {"Type": "AWS::IAM::InstanceProfile", "Properties": {"Roles": [{"Ref": "WSFCRole"}], "Path": "/"}}, "WSFCFileServerWaitCondition": {"Type": "AWS::CloudFormation::WaitCondition", "Condition": "IsTwoNode", "DependsOn": "WSFCFileServer", "Properties": {"Handle": {"Ref": "WSFCFileServerWaitHandle"}, "Timeout": "3600"}}, "WSFCFileServerWaitHandle": {"Type": "AWS::CloudFormation::WaitConditionHandle"}, "WSFCNode1WaitCondition": {"Type": "AWS::CloudFormation::WaitCondition", "DependsOn": "WSFCNode1", "Properties": {"Handle": {"Ref": "WSFCNode1WaitHandle"}, "Timeout": "9000"}}, "WSFCNode1WaitHandle": {"Type": "AWS::CloudFormation::WaitConditionHandle"}, "WSFCNode2WaitCondition": {"Type": "AWS::CloudFormation::WaitCondition", "DependsOn": "WSFCNode2", "Properties": {"Handle": {"Ref": "WSFCNode2WaitHandle"}, "Timeout": "9000"}}, "WSFCNode2WaitHandle": {"Type": "AWS::CloudFormation::WaitConditionHandle"}, "WSFCNode3WaitCondition": {"Type": "AWS::CloudFormation::WaitCondition", "Condition": "ThirdAzIsFullNode", "DependsOn": "WSFCNode3", "Properties": {"Handle": {"Ref": "WSFCNode3WaitHandle"}, "Timeout": "9000"}}, "WSFCNode3WaitHandle": {"Condition": "ThirdAzIsFullNode", "Type": "AWS::CloudFormation::WaitConditionHandle"}, "WSFCFileServer": {"Type": "AWS::EC2::Instance", "Condition": "IsTwoNode", "Metadata": {"AWS::CloudFormation::Authentication": {"S3AccessCreds": {"type": "S3", "roleName": {"Ref": "WSFCRole"}, "buckets": [{"Ref": "QSS3BucketName"}]}}, "AWS::CloudFormation::Init": {"configSets": {"config": ["FetchResources", "QuickStartSetup", "Prep", "Cleanup", "Finalize"]}, "FetchResources": {"files": {"C:\\cfn\\scripts\\Unzip-Archive.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Unzip-Archive.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\modules\\AWSQuickStart.zip": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/modules/AWSQuickStart.zip", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Join-Domain.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Join-Domain.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Rename-Computer.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Rename-Computer.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Enable-CredSSP.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Enable-CredSSP.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Create-Share.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Create-Share.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Test-ADUser.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Test-ADUser.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\AddUserToGroup.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/AddUserToGroup.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Disable-CredSSP.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Disable-CredSSP.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}}}, "QuickStartSetup": {"commands": {"a-set-execution-policy": {"command": "powershell.exe -Command \"Set-ExecutionPolicy RemoteSigned -Force\"", "waitAfterCompletion": "0"}, "b-unpack-quickstart-module": {"command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\", "waitAfterCompletion": "0"}, "c-init-quickstart-module": {"command": {"Fn::Join": ["", ["powershell.exe -Command \"", "New-AWSQuickStartWaitHandle -Handle '", {"Ref": "WSFCFileServerWaitHandle"}, "'\""]]}, "waitAfterCompletion": "0"}}}, "Prep": {"commands": {"a-rename-computer": {"command": {"Fn::Join": ["", ["powershell.exe -Command \"C:\\cfn\\scripts\\Rename-Computer.ps1 -Restart -NewName '", {"Ref": "WSFCFileServerNetBIOSName"}, "'\""]]}, "waitAfterCompletion": "forever"}, "b-join-domain": {"command": {"Fn::Join": ["", ["powershell.exe -Command \"C:\\cfn\\scripts\\Join-Domain.ps1 -DomainName '", {"Ref": "DomainDNSName"}, "' -UserName '", {"Ref": "DomainNetBIOSName"}, "\\", {"Ref": "DomainAdminUser"}, "' -Password '", {"Ref": "DomainAdminPassword"}, "'\""]]}, "waitAfterCompletion": "forever"}, "c-enable-credssp": {"command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Enable-CredSSP.ps1", "waitAfterCompletion": "0"}, "d-add-domadmin-user-to-group": {"command": {"Fn::Join": ["", ["powershell.exe ", "-ExecutionPolicy RemoteSigned ", "-Command \"", " C:\\cfn\\scripts\\AddUserToGroup.ps1 -UserName '", {"Ref": "DomainAdminUser"}, "' -ServerName '", {"Ref": "WSFCFileServerNetBIOSName"}, "' -DomainNetBIOSName '", {"Ref": "DomainNetBIOSName"}, "' -GroupName 'Administrators'\""]]}, "waitAfterCompletion": "0"}, "e-wait-for-ad-replication": {"command": {"Fn::Join": ["", ["powershell.exe ", "-ExecutionPolicy RemoteSigned ", "-Command \"", "C:\\cfn\\scripts\\Test-ADUser.ps1 -UserName '", {"Ref": "SQLServiceAccount"}, "' -Wait -TimeoutMinutes 30 -IntervalMinutes 1\""]]}, "waitAfterCompletion": "0"}, "f-add-sqlservice-user-to-group": {"command": {"Fn::Join": ["", ["powershell.exe ", "-ExecutionPolicy RemoteSigned ", "-Command \"", "C:\\cfn\\scripts\\AddUserToGroup.ps1 -UserName '", {"Ref": "SQLServiceAccount"}, "' -ServerName '", {"Ref": "WSFCFileServerNetBIOSName"}, "' -DomainNetBIOSName '", {"Ref": "DomainNetBIOSName"}, "' -GroupName 'Administrators'\""]]}, "waitAfterCompletion": "0"}}}, "Cleanup": {"commands": {"a-disable-credssp": {"command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Disable-CredSSP.ps1\"", "waitAfterCompletion": "0"}}}, "Finalize": {"commands": {"a-signal-success": {"command": "powershell -Command \"Write-AWSQuickStartStatus\"", "waitAfterCompletion": "0"}}}}}, "Properties": {"ImageId": {"Fn::FindInMap": ["AWSAMIRegionMap", {"Ref": "AWS::Region"}, "WS2012R2"]}, "IamInstanceProfile": {"Ref": "WSFCProfile"}, "InstanceType": {"Ref": "WSFCFileServerInstanceType"}, "NetworkInterfaces": [{"DeleteOnTermination": "true", "DeviceIndex": 0, "SubnetId": {"Fn::If": ["ThirdAzIsWitness", {"Ref": "PrivateSubnet3ID"}, {"Ref": "PrivateSubnet1ID"}]}, "PrivateIpAddresses": [{"Primary": "true", "PrivateIpAddress": {"Ref": "WSFCFileServerPrivateIP"}}], "GroupSet": [{"Ref": "DomainMemberSGID"}, {"Ref": "WSFCSecurityGroup"}, {"Ref": "WSFCClientSecurityGroup"}]}], "Tags": [{"Key": "Name", "Value": {"Ref": "WSFCFileServerNetBIOSName"}}], "BlockDeviceMappings": [{"DeviceName": "/dev/sda1", "Ebs": {"VolumeSize": "100", "VolumeType": "gp2"}}], "KeyName": {"Ref": "KeyPairName"}}}, "WSFCNode1": {"Type": "AWS::EC2::Instance", "Metadata": {"AWS::CloudFormation::Authentication": {"S3AccessCreds": {"type": "S3", "roleName": {"Ref": "WSFCRole"}, "buckets": [{"Ref": "QSS3BucketName"}]}}, "AWS::CloudFormation::Init": {"configSets": {"config": ["FetchResources", "QuickStartSetup", "Prep", {"Fn::If": ["SQLBakedInAMI", "SQLIncludedConfigure", "Install"]}, "Configure", "Cleanup", "Finalize"]}, "FetchResources": {"files": {"C:\\cfn\\scripts\\Unzip-Archive.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Unzip-Archive.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\modules\\AWSQuickStart.zip": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/modules/AWSQuickStart.zip", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Join-Domain.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Join-Domain.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Rename-Computer.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Rename-Computer.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Restart-Computer.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Restart-Computer.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Install-WindowsFailoverClustering.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Install-WindowsFailoverClustering.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Install-NETFrameworkCore.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Install-NETFrameworkCore.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\OpenWSFCPorts.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/OpenWSFCPorts.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Enable-CredSSP.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Enable-CredSSP.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\DownloadSQLEE.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/DownloadSQLEE.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Create-ADServiceAccount.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Create-ADServiceAccount.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Test-ADUser.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Test-ADUser.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\AddUserToGroup.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/AddUserToGroup.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\InstallSQLEE.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/InstallSQLEE.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Reconfigure-SQL.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Reconfigure-SQL.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\SetMaxDOP.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/SetMaxDOP.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Disable-CredSSP.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Disable-CredSSP.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}}}, "QuickStartSetup": {"commands": {"a-set-execution-policy": {"command": "powershell.exe -Command \"Set-ExecutionPolicy RemoteSigned -Force\"", "waitAfterCompletion": "0"}, "b-unpack-quickstart-module": {"command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\", "waitAfterCompletion": "0"}, "c-init-quickstart-module": {"command": {"Fn::Join": ["", ["powershell.exe -Command \"", "New-AWSQuickStartWaitHandle -Handle '", {"Ref": "WSFCNode1WaitHandle"}, "'\""]]}, "waitAfterCompletion": "0"}}}, "Prep": {"commands": {"a-initialize-disks": {"command": {"Fn::If": ["WindowsServer2016", "powershell.exe -Command \"C:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Scripts\\InitializeDisks.ps1\"", "powershell.exe -Command exit"]}, "waitAfterCompletion": "0"}, "b-rename-computer": {"command": {"Fn::Join": ["", ["powershell.exe -Command \"C:\\cfn\\scripts\\Rename-Computer.ps1 -Restart -NewName '", {"Ref": "WSFCNode1NetBIOSName"}, "'\""]]}, "waitAfterCompletion": "forever"}, "c-join-domain": {"command": {"Fn::Join": ["", ["powershell.exe -Command \"C:\\cfn\\scripts\\Join-Domain.ps1 -DomainName '", {"Ref": "DomainDNSName"}, "' -UserName '", {"Ref": "DomainNetBIOSName"}, "\\", {"Ref": "DomainAdminUser"}, "' -Password '", {"Ref": "DomainAdminPassword"}, "'\""]]}, "waitAfterCompletion": "forever"}, "d-install-net-framework-core": {"command": "powershell.exe -Command \"C:\\cfn\\scripts\\Install-NETFrameworkCore.ps1\"", "waitAfterCompletion": "0"}, "e-install-windows-failover-clustering": {"command": "powershell.exe -Command \"C:\\cfn\\scripts\\Install-WindowsFailoverClustering.ps1\"", "waitAfterCompletion": "0"}, "f-enable-credssp": {"command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Enable-CredSSP.ps1", "waitAfterCompletion": "0"}, "g-reboot": {"command": "powershell.exe -Command \"C:\\cfn\\scripts\\Restart-Computer.ps1\"", "waitAfterCompletion": "forever"}, "h-open-WSFC-ports": {"command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\OpenWSFCPorts.ps1\"", "waitAfterCompletion": "0"}, "i-create-sql-account": {"command": {"Fn::Join": ["", ["powershell.exe -Command \"C:\\cfn\\scripts\\Create-ADServiceAccount.ps1 -DomainDNSName '", {"Ref": "DomainDNSName"}, "' -DomainNetBIOSName '", {"Ref": "DomainNetBIOSName"}, "' -DomainAdminUser '", {"Ref": "DomainAdminUser"}, "' -DomainAdminPassword '", {"Ref": "DomainAdminPassword"}, "' -ServiceAccountUser '", {"Ref": "SQLServiceAccount"}, "' -ServiceAccountPassword '", {"Ref": "SQLServiceAccountPassword"}, "'\""]]}, "waitAfterCompletion": "0"}, "j-add-domadmin-user-to-group": {"command": {"Fn::Join": ["", ["powershell.exe ", "-ExecutionPolicy RemoteSigned ", "-Command \"", " C:\\cfn\\scripts\\AddUserToGroup.ps1 -UserName '", {"Ref": "DomainAdminUser"}, "' -ServerName '", {"Ref": "WSFCNode1NetBIOSName"}, "' -DomainNetBIOSName '", {"Ref": "DomainNetBIOSName"}, "' -GroupName 'Administrators'\""]]}, "waitAfterCompletion": "0"}, "k-wait-for-ad-replication": {"command": {"Fn::Join": ["", ["powershell.exe ", "-ExecutionPolicy RemoteSigned ", "-Command \"", "C:\\cfn\\scripts\\Test-ADUser.ps1 -UserName '", {"Ref": "SQLServiceAccount"}, "' -Wait -TimeoutMinutes 30 -IntervalMinutes 1\""]]}, "waitAfterCompletion": "0"}, "l-add-sqlservice-user-to-group": {"command": {"Fn::Join": ["", ["powershell.exe ", "-ExecutionPolicy RemoteSigned ", "-Command \"", "C:\\cfn\\scripts\\AddUserToGroup.ps1 -UserName '", {"Ref": "SQLServiceAccount"}, "' -ServerName '", {"Ref": "WSFCNode1NetBIOSName"}, "' -DomainNetBIOSName '", {"Ref": "DomainNetBIOSName"}, "' -GroupName 'Administrators'\""]]}, "waitAfterCompletion": "0"}, "m-download-sql-installer": {"command": {"Fn::Join": ["", ["powershell.exe ", "-ExecutionPolicy RemoteSigned ", "-Command \"", " C:\\cfn\\scripts\\DownloadSQLEE.ps1 -SQLServerVersion '", {"Ref": "SQLServerVersion"}, "'\""]]}, "waitAfterCompletion": "0"}}}, "Install": {"commands": {"a-install-sql": {"command": {"Fn::Join": ["", ["powershell.exe -Command \"C:\\cfn\\scripts\\InstallSQLEE.ps1 -DomainNetBIOSName '", {"Ref": "DomainNetBIOSName"}, "' -DomainAdminUser '", {"Ref": "DomainAdminUser"}, "' -DomainAdminPassword '", {"Ref": "DomainAdminPassword"}, "' -SQLServiceAccount '", {"Ref": "SQLServiceAccount"}, "' -SQLServiceAccountPassword '", {"Ref": "SQLServiceAccountPassword"}, "' -NetBIOSName '", {"Ref": "WSFCNode1NetBIOSName"}, "'\""]]}, "waitAfterCompletion": "0"}}}, "SQLIncludedConfigure": {"commands": {"a-configure-sql": {"command": {"Fn::Join": ["", ["powershell.exe -Command \"C:\\cfn\\scripts\\Reconfigure-SQL.ps1 -DomainNetBIOSName '", {"Ref": "DomainNetBIOSName"}, "' -DomainAdminUser '", {"Ref": "DomainAdminUser"}, "' -DomainAdminPassword '", {"Ref": "DomainAdminPassword"}, "' -SQLServiceAccount '", {"Ref": "SQLServiceAccount"}, "' -SQLServiceAccountPassword '", {"Ref": "SQLServiceAccountPassword"}, "' -NetBIOSName '", {"Ref": "WSFCNode1NetBIOSName"}, "'\""]]}, "waitAfterCompletion": "0"}}}, "Configure": {"commands": {"a-set-maxdop": {"command": {"Fn::Join": ["", ["powershell.exe -Command \"C:\\cfn\\scripts\\SetMaxDOP.ps1 -DomainNetBIOSName '", {"Ref": "DomainNetBIOSName"}, "' -DomainAdminUser '", {"Ref": "DomainAdminUser"}, "' -DomainAdminPassword '", {"Ref": "DomainAdminPassword"}, "' -NetBIOSName '", {"Ref": "WSFCNode1NetBIOSName"}, "'\""]]}, "waitAfterCompletion": "0"}}}, "Cleanup": {"commands": {"a-disable-credssp": {"command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Disable-CredSSP.ps1\"", "waitAfterCompletion": "0"}}}, "Finalize": {"commands": {"a-reboot": {"command": "powershell.exe -Command \"C:\\cfn\\scripts\\Restart-Computer.ps1\"", "waitAfterCompletion": "forever"}, "b-signal-success": {"command": "powershell -Command \"Write-AWSQuickStartStatus\"", "waitAfterCompletion": "0"}}}}}, "Properties": {"Affinity": {"Fn::If": ["HostTypeIsDediHost", "host", {"Fn::If": ["HostTypeIsDefault", {"Ref": "AWS::NoValue"}, "default"]}]}, "HostId": {"Fn::If": ["HostTypeIsDediHost", {"Ref": "DedicatedHostIDNode1"}, {"Ref": "AWS::NoValue"}]}, "Tenancy": {"Fn::If": ["HostTypeIsDediHost", "host", {"Fn::If": ["HostTypeIsDefault", "default", "dedicated"]}]}, "ImageId": {"Fn::If": ["ByolAmi", {"Ref": "DedicatedHostAMI"}, {"Fn::FindInMap": ["AWSAMIRegionMap", {"Ref": "AWS::Region"}, {"Fn::FindInMap": ["SQLAMINameMap", {"Ref": "SQLServerVersion"}, {"Ref": "SQLLicenseProvided"}]}]}]}, "IamInstanceProfile": {"Ref": "WSFCProfile"}, "InstanceType": {"Ref": "WSFCNode1InstanceType"}, "EbsOptimized": "true", "NetworkInterfaces": [{"DeleteOnTermination": "true", "DeviceIndex": 0, "SubnetId": {"Ref": "PrivateSubnet1ID"}, "PrivateIpAddresses": [{"Primary": "true", "PrivateIpAddress": {"Ref": "WSFCNode1PrivateIP1"}}, {"Primary": "false", "PrivateIpAddress": {"Ref": "WSFCNode1PrivateIP2"}}, {"Primary": "false", "PrivateIpAddress": {"Ref": "WSFCNode1PrivateIP3"}}], "GroupSet": [{"Ref": "DomainMemberSGID"}, {"Ref": "WSFCSecurityGroup"}, {"Ref": "WSFCClientSecurityGroup"}]}], "Tags": [{"Key": "Name", "Value": {"Ref": "WSFCNode1NetBIOSName"}}], "BlockDeviceMappings": [{"DeviceName": "/dev/sda1", "Ebs": {"VolumeSize": "100", "VolumeType": "gp2"}}, {"DeviceName": "/dev/xvdca", "VirtualName": "ephemeral0"}], "KeyName": {"Ref": "KeyPairName"}}}, "WSFCNode3": {"Type": "AWS::EC2::Instance", "Condition": "ThirdAzIsFullNode", "DependsOn": "WSFCNode1WaitCondition", "Metadata": {"AWS::CloudFormation::Authentication": {"S3AccessCreds": {"type": "S3", "roleName": {"Ref": "WSFCRole"}, "buckets": [{"Ref": "QSS3BucketName"}]}}, "AWS::CloudFormation::Init": {"configSets": {"config": ["FetchResources", "QuickStartSetup", "Prep", {"Fn::If": ["SQLBakedInAMI", "SQLIncludedConfigure", "Install"]}, "Configure", "Cleanup", "Finalize"]}, "FetchResources": {"files": {"C:\\cfn\\scripts\\Unzip-Archive.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Unzip-Archive.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\modules\\AWSQuickStart.zip": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/modules/AWSQuickStart.zip", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Join-Domain.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Join-Domain.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Rename-Computer.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Rename-Computer.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Restart-Computer.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Restart-Computer.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Install-WindowsFailoverClustering.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Install-WindowsFailoverClustering.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Install-NETFrameworkCore.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Install-NETFrameworkCore.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\OpenWSFCPorts.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/OpenWSFCPorts.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Enable-CredSSP.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Enable-CredSSP.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\DownloadSQLEE.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/DownloadSQLEE.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\InstallSQLEE.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/InstallSQLEE.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Reconfigure-SQL.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Reconfigure-SQL.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\SetMaxDOP.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/SetMaxDOP.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Disable-CredSSP.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Disable-CredSSP.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}}}, "QuickStartSetup": {"commands": {"a-set-execution-policy": {"command": "powershell.exe -Command \"Set-ExecutionPolicy RemoteSigned -Force\"", "waitAfterCompletion": "0"}, "b-unpack-quickstart-module": {"command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\", "waitAfterCompletion": "0"}, "c-init-quickstart-module": {"command": {"Fn::Join": ["", ["powershell.exe -Command \"", "New-AWSQuickStartWaitHandle -Handle '", {"Ref": "WSFCNode3WaitHandle"}, "'\""]]}, "waitAfterCompletion": "0"}}}, "Prep": {"commands": {"a-initialize-disks": {"command": {"Fn::If": ["WindowsServer2016", "powershell.exe -Command \"C:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Scripts\\InitializeDisks.ps1\"", "powershell.exe -Command exit"]}, "waitAfterCompletion": "0"}, "b-rename-computer": {"command": {"Fn::Join": ["", ["powershell.exe -Command \"C:\\cfn\\scripts\\Rename-Computer.ps1 -Restart -NewName '", {"Ref": "WSFCNode3NetBIOSName"}, "'\""]]}, "waitAfterCompletion": "forever"}, "c-join-domain": {"command": {"Fn::Join": ["", ["powershell.exe -Command \"C:\\cfn\\scripts\\Join-Domain.ps1 -DomainName '", {"Ref": "DomainDNSName"}, "' -UserName '", {"Ref": "DomainNetBIOSName"}, "\\", {"Ref": "DomainAdminUser"}, "' -Password '", {"Ref": "DomainAdminPassword"}, "'\""]]}, "waitAfterCompletion": "forever"}, "d-install-net-framework-core": {"command": "powershell.exe -Command \"C:\\cfn\\scripts\\Install-NETFrameworkCore.ps1\"", "waitAfterCompletion": "0"}, "e-install-windows-failover-clustering": {"command": "powershell.exe -Command \"C:\\cfn\\scripts\\Install-WindowsFailoverClustering.ps1\"", "waitAfterCompletion": "0"}, "f-enable-credssp": {"command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Enable-CredSSP.ps1", "waitAfterCompletion": "0"}, "g-reboot": {"command": "powershell.exe -Command \"C:\\cfn\\scripts\\Restart-Computer.ps1\"", "waitAfterCompletion": "forever"}, "h-open-WSFC-ports": {"command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\OpenWSFCPorts.ps1\"", "waitAfterCompletion": "0"}, "i-download-sql-installer": {"command": {"Fn::Join": ["", ["powershell.exe ", "-ExecutionPolicy RemoteSigned ", "-Command \"", " C:\\cfn\\scripts\\DownloadSQLEE.ps1 -SQLServerVersion '", {"Ref": "SQLServerVersion"}, "'\""]]}, "waitAfterCompletion": "0"}}}, "Install": {"commands": {"a-install-sql": {"command": {"Fn::Join": ["", ["powershell.exe -Command \"C:\\cfn\\scripts\\InstallSQLEE.ps1 -DomainNetBIOSName '", {"Ref": "DomainNetBIOSName"}, "' -DomainAdminUser '", {"Ref": "DomainAdminUser"}, "' -DomainAdminPassword '", {"Ref": "DomainAdminPassword"}, "' -SQLServiceAccount '", {"Ref": "SQLServiceAccount"}, "' -SQLServiceAccountPassword '", {"Ref": "SQLServiceAccountPassword"}, "' -NetBIOSName '", {"Ref": "WSFCNode3NetBIOSName"}, "'\""]]}, "waitAfterCompletion": "0"}}}, "SQLIncludedConfigure": {"commands": {"a-configure-sql": {"command": {"Fn::Join": ["", ["powershell.exe -Command \"C:\\cfn\\scripts\\Reconfigure-SQL.ps1 -DomainNetBIOSName '", {"Ref": "DomainNetBIOSName"}, "' -DomainAdminUser '", {"Ref": "DomainAdminUser"}, "' -DomainAdminPassword '", {"Ref": "DomainAdminPassword"}, "' -SQLServiceAccount '", {"Ref": "SQLServiceAccount"}, "' -SQLServiceAccountPassword '", {"Ref": "SQLServiceAccountPassword"}, "' -NetBIOSName '", {"Ref": "WSFCNode1NetBIOSName"}, "'\""]]}, "waitAfterCompletion": "0"}}}, "Configure": {"commands": {"a-set-maxdop": {"command": {"Fn::Join": ["", ["powershell.exe -Command \"C:\\cfn\\scripts\\SetMaxDOP.ps1 -DomainNetBIOSName '", {"Ref": "DomainNetBIOSName"}, "' -DomainAdminUser '", {"Ref": "DomainAdminUser"}, "' -DomainAdminPassword '", {"Ref": "DomainAdminPassword"}, "' -NetBIOSName '", {"Ref": "WSFCNode3NetBIOSName"}, "'\""]]}, "waitAfterCompletion": "0"}}}, "Cleanup": {"commands": {"a-disable-credssp": {"command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Disable-CredSSP.ps1\"", "waitAfterCompletion": "0"}}}, "Finalize": {"commands": {"a-reboot": {"command": "powershell.exe -Command \"C:\\cfn\\scripts\\Restart-Computer.ps1\"", "waitAfterCompletion": "forever"}, "b-signal-success": {"command": "powershell -Command \"Write-AWSQuickStartStatus\"", "waitAfterCompletion": "0"}}}}}, "Properties": {"Affinity": {"Fn::If": ["HostTypeIsDediHost", "host", {"Fn::If": ["HostTypeIsDefault", {"Ref": "AWS::NoValue"}, "default"]}]}, "HostId": {"Fn::If": ["HostTypeIsDediHost", {"Ref": "DedicatedHostIDNode3"}, {"Ref": "AWS::NoValue"}]}, "Tenancy": {"Fn::If": ["HostTypeIsDediHost", "host", {"Fn::If": ["HostTypeIsDefault", "default", "dedicated"]}]}, "ImageId": {"Fn::If": ["ByolAmi", {"Ref": "DedicatedHostAMI"}, {"Fn::FindInMap": ["AWSAMIRegionMap", {"Ref": "AWS::Region"}, {"Fn::FindInMap": ["SQLAMINameMap", {"Ref": "SQLServerVersion"}, {"Ref": "SQLLicenseProvided"}]}]}]}, "IamInstanceProfile": {"Ref": "WSFCProfile"}, "InstanceType": {"Ref": "WSFCNode3InstanceType"}, "EbsOptimized": "true", "NetworkInterfaces": [{"DeleteOnTermination": "true", "DeviceIndex": 0, "SubnetId": {"Ref": "PrivateSubnet3ID"}, "PrivateIpAddresses": [{"Primary": "true", "PrivateIpAddress": {"Ref": "WSFCNode3PrivateIP1"}}, {"Primary": "false", "PrivateIpAddress": {"Ref": "WSFCNode3PrivateIP2"}}, {"Primary": "false", "PrivateIpAddress": {"Ref": "WSFCNode3PrivateIP3"}}], "GroupSet": [{"Ref": "DomainMemberSGID"}, {"Ref": "WSFCSecurityGroup"}, {"Ref": "WSFCClientSecurityGroup"}]}], "Tags": [{"Key": "Name", "Value": {"Ref": "WSFCNode3NetBIOSName"}}], "BlockDeviceMappings": [{"DeviceName": "/dev/sda1", "Ebs": {"VolumeSize": "100", "VolumeType": "gp2"}}, {"DeviceName": "/dev/xvdca", "VirtualName": "ephemeral0"}], "KeyName": {"Ref": "KeyPairName"}}}, "WSFCNode2": {"Type": "AWS::EC2::Instance", "Metadata": {"AWS::CloudFormation::Authentication": {"S3AccessCreds": {"type": "S3", "roleName": {"Ref": "WSFCRole"}, "buckets": [{"Ref": "QSS3BucketName"}]}}, "PseudoDependsOn": {"Fn::If": ["IsTwoNode", [{"Ref": "WSFCFileServerWaitCondition"}, {"Ref": "WSFCNode1WaitCondition"}], [{"Ref": "WSFCNode1WaitCondition"}, {"Ref": "WSFCNode3WaitCondition"}]]}, "AWS::CloudFormation::Init": {"configSets": {"config": ["FetchResources", "QuickStartSetup", "Prep", {"Fn::If": ["SQLBakedInAMI", "SQLIncludedConfigure", "Install"]}, "Configure", "Cleanup", "Finalize"]}, "FetchResources": {"files": {"C:\\cfn\\scripts\\Unzip-Archive.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Unzip-Archive.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\modules\\AWSQuickStart.zip": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/modules/AWSQuickStart.zip", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Join-Domain.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Join-Domain.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Rename-Computer.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Rename-Computer.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Restart-Computer.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Restart-Computer.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Install-WindowsFailoverClustering.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Install-WindowsFailoverClustering.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Install-NETFrameworkCore.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Install-NETFrameworkCore.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\OpenWSFCPorts.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/OpenWSFCPorts.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Enable-CredSSP.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Enable-CredSSP.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\DownloadSQLEE.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/DownloadSQLEE.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\AddUserToGroup.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/AddUserToGroup.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\InstallSQLEE.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/InstallSQLEE.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Reconfigure-SQL.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Reconfigure-SQL.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Configure-WSFC.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Configure-WSFC.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Create-Share.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Create-Share.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Set-Folder-Permissions.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Set-Folder-Permissions.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Enable-AlwaysOn.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Enable-AlwaysOn.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Set-ClusterQuorum.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Set-ClusterQuorum.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\SetMaxDOP.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/SetMaxDOP.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}, "C:\\cfn\\scripts\\Disable-CredSSP.ps1": {"source": {"Fn::Sub": ["https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Disable-CredSSP.ps1", {"QSS3Region": {"Fn::If": ["GovCloudCondition", "s3-us-gov-west-1", "s3"]}}]}}}}, "QuickStartSetup": {"commands": {"a-set-execution-policy": {"command": "powershell.exe -Command \"Set-ExecutionPolicy RemoteSigned -Force\"", "waitAfterCompletion": "0"}, "b-unpack-quickstart-module": {"command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\", "waitAfterCompletion": "0"}, "c-init-quickstart-module": {"command": {"Fn::Join": ["", ["powershell.exe -Command \"", "New-AWSQuickStartWaitHandle -Handle '", {"Ref": "WSFCNode2WaitHandle"}, "'\""]]}, "waitAfterCompletion": "0"}}}, "Prep": {"commands": {"a-initialize-disks": {"command": {"Fn::If": ["WindowsServer2016", "powershell.exe -Command \"C:\\ProgramData\\Amazon\\EC2-Windows\\Launch\\Scripts\\InitializeDisks.ps1\"", "powershell.exe -Command exit"]}, "waitAfterCompletion": "0"}, "b-rename-computer": {"command": {"Fn::Join": ["", ["powershell.exe -Command \"C:\\cfn\\scripts\\Rename-Computer.ps1 -Restart -NewName '", {"Ref": "WSFCNode2NetBIOSName"}, "'\""]]}, "waitAfterCompletion": "forever"}, "c-join-domain": {"command": {"Fn::Join": ["", ["powershell.exe -Command \"C:\\cfn\\scripts\\Join-Domain.ps1 -DomainName '", {"Ref": "DomainDNSName"}, "' -UserName '", {"Ref": "DomainNetBIOSName"}, "\\", {"Ref": "DomainAdminUser"}, "' -Password '", {"Ref": "DomainAdminPassword"}, "'\""]]}, "waitAfterCompletion": "forever"}, "d-install-net-framework-core": {"command": "powershell.exe -Command \"C:\\cfn\\scripts\\Install-NETFrameworkCore.ps1\"", "waitAfterCompletion": "0"}, "e-install-windows-failover-clustering": {"command": "powershell.exe -Command \"C:\\cfn\\scripts\\Install-WindowsFailoverClustering.ps1\"", "waitAfterCompletion": "0"}, "f-enable-credssp": {"command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Enable-CredSSP.ps1", "waitAfterCompletion": "0"}, "g-reboot": {"command": "powershell.exe -Command \"C:\\cfn\\scripts\\Restart-Computer.ps1\"", "waitAfterCompletion": "forever"}, "h-open-WSFC-ports": {"command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\OpenWSFCPorts.ps1\"", "waitAfterCompletion": "0"}, "i-download-sql-installer": {"command": {"Fn::Join": ["", ["powershell.exe ", "-ExecutionPolicy RemoteSigned ", "-Command \"", " C:\\cfn\\scripts\\DownloadSQLEE.ps1 -SQLServerVersion '", {"Ref": "SQLServerVersion"}, "'\""]]}, "waitAfterCompletion": "0"}}}, "Install": {"commands": {"a-install-sql": {"command": {"Fn::Join": ["", ["powershell.exe -Command \"C:\\cfn\\scripts\\InstallSQLEE.ps1 -DomainNetBIOSName '", {"Ref": "DomainNetBIOSName"}, "' -DomainAdminUser '", {"Ref": "DomainAdminUser"}, "' -DomainAdminPassword '", {"Ref": "DomainAdminPassword"}, "' -SQLServiceAccount '", {"Ref": "SQLServiceAccount"}, "' -SQLServiceAccountPassword '", {"Ref": "SQLServiceAccountPassword"}, "' -NetBIOSName '", {"Ref": "WSFCNode2NetBIOSName"}, "'\""]]}, "waitAfterCompletion": "0"}}}, "SQLIncludedConfigure": {"commands": {"a-configure-sql": {"command": {"Fn::Join": ["", ["powershell.exe -Command \"C:\\cfn\\scripts\\Reconfigure-SQL.ps1 -DomainNetBIOSName '", {"Ref": "DomainNetBIOSName"}, "' -DomainAdminUser '", {"Ref": "DomainAdminUser"}, "' -DomainAdminPassword '", {"Ref": "DomainAdminPassword"}, "' -SQLServiceAccount '", {"Ref": "SQLServiceAccount"}, "' -SQLServiceAccountPassword '", {"Ref": "SQLServiceAccountPassword"}, "' -NetBIOSName '", {"Ref": "WSFCNode2NetBIOSName"}, "'\""]]}, "waitAfterCompletion": "0"}}}, "Configure": {"commands": {"a-set-maxdop": {"command": {"Fn::Join": ["", ["powershell.exe -Command \"C:\\cfn\\scripts\\SetMaxDOP.ps1 -DomainNetBIOSName '", {"Ref": "DomainNetBIOSName"}, "' -DomainAdminUser '", {"Ref": "DomainAdminUser"}, "' -DomainAdminPassword '", {"Ref": "DomainAdminPassword"}, "' -NetBIOSName '", {"Ref": "WSFCNode2NetBIOSName"}, "'\""]]}, "waitAfterCompletion": "0"}, "b-configure-WSFC": {"command": {"Fn::Join": ["", ["powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Configure-WSFC.ps1", " -WSFCNode1PrivateIP2 ", {"Ref": "WSFCNode1PrivateIP2"}, " -WSFCNode2PrivateIP2 ", {"Ref": "WSFCNode2PrivateIP2"}, {"Fn::If": ["ThirdAzIsFullNode", " -WSFCNode3PrivateIP2 ", {"Ref": "AWS::NoValue"}]}, {"Fn::If": ["ThirdAzIsFullNode", {"Ref": "WSFCNode3PrivateIP2"}, {"Ref": "AWS::NoValue"}]}, " -WSFCNode1NetBIOSName ", {"Ref": "WSFCNode1NetBIOSName"}, " -WSFCNode2NetBIOSName ", {"Ref": "WSFCNode2NetBIOSName"}, {"Fn::If": ["ThirdAzIsFullNode", " -WSFCNode3NetBIOSName ", {"Ref": "AWS::NoValue"}]}, {"Fn::If": ["ThirdAzIsFullNode", {"Ref": "WSFCNode3NetBIOSName"}, {"Ref": "AWS::NoValue"}]}, " -DomainNetBIOSName ", {"Ref": "DomainNetBIOSName"}, " -DomainAdminUser '", {"Ref": "DomainAdminUser"}, "' -DomainAdminPassword '", {"Ref": "DomainAdminPassword"}, "' -NetBIOSName '", {"Ref": "WSFCNode2NetBIOSName"}, "'\""]]}, "waitAfterCompletion": "0"}, "c-create-witness-share": {"Fn::If": ["IsTwoNode", {"command": {"Fn::Join": ["", ["powershell.exe -Command \"C:\\cfn\\scripts\\Create-Share.ps1", " -Path 'c:\\witness'", " -ShareName 'witness'", " -FolderPath 'c:\\'", " -FolderName 'witness'", " -DomainNetBIOSName '", {"Ref": "DomainNetBIOSName"}, "' -DomainAdminUser '", {"Ref": "DomainAdminUser"}, "' -DomainAdminPassword '", {"Ref": "DomainAdminPassword"}, "' -ServerName '", {"Ref": "WSFCFileServerNetBIOSName"}, "'\""]]}, "waitAfterCompletion": "0"}, {"Ref": "AWS::NoValue"}]}, "d-create-Replica-share": {"command": {"Fn::Join": ["", ["powershell.exe -Command \"C:\\cfn\\scripts\\Create-Share.ps1", " -Path 'c:\\replica'", " -ShareName 'replica'", " -FolderPath 'c:\\'", " -FolderName 'replica'", " -DomainNetBIOSName '", {"Ref": "DomainNetBIOSName"}, "' -DomainAdminUser '", {"Ref": "DomainAdminUser"}, "' -DomainAdminPassword '", {"Ref": "DomainAdminPassword"}, "' -ServerName '", {"Fn::If": ["IsTwoNode", {"Ref": "WSFCFileServerNetBIOSName"}, {"Ref": "WSFCNode1NetBIOSName"}]}, "'\""]]}, "waitAfterCompletion": "0"}, "e-Set-Folder-Permissions": {"Fn::If": ["IsTwoNode", {"command": {"Fn::Join": ["", ["powershell.exe -ExecutionPolicy RemoteSigned \"C:\\cfn\\scripts\\Set-Folder-Permissions.ps1", " -DomainNetBIOSName '", {"Ref": "DomainNetBIOSName"}, "' -DomainAdminUser '", {"Ref": "DomainAdminUser"}, "' -DomainAdminPassword '", {"Ref": "DomainAdminPassword"}, "' -SQLServiceAccount '", {"Ref": "SQLServiceAccount"}, "' -FileServerNetBIOSName '", {"Ref": "WSFCFileServerNetBIOSName"}, "'\""]]}, "waitAfterCompletion": "0"}, {"Ref": "AWS::NoValue"}]}, "f-Enable-AlwaysOn": {"command": {"Fn::Join": ["", ["powershell.exe -ExecutionPolicy RemoteSigned \"C:\\cfn\\scripts\\Enable-AlwaysOn.ps1", " -DomainNetBIOSName '", {"Ref": "DomainNetBIOSName"}, "' -DomainAdminUser '", {"Ref": "DomainAdminUser"}, "' -DomainAdminPassword '", {"Ref": "DomainAdminPassword"}, "' -WSFCNode1NetBIOSName '", {"Ref": "WSFCNode1NetBIOSName"}, "' -WSFCNode2NetBIOSName '", {"Ref": "WSFCNode2NetBIOSName"}, {"Fn::If": ["ThirdAzIsFullNode", "' -WSFCNode3NetBIOSName '", {"Ref": "AWS::NoValue"}]}, {"Fn::If": ["ThirdAzIsFullNode", {"Ref": "WSFCNode3NetBIOSName"}, {"Ref": "AWS::NoValue"}]}, "'\""]]}, "waitAfterCompletion": "0"}, "g-Set-ClusterQuorum": {"command": {"Fn::Join": ["", ["powershell.exe -ExecutionPolicy RemoteSigned \"C:\\cfn\\scripts\\Set-ClusterQuorum.ps1", {"Fn::If": ["ThirdAzIsFullNode", " -Witness $false", {"Ref": "AWS::NoValue"}]}, " -DomainNetBIOSName '", {"Ref": "DomainNetBIOSName"}, "' -DomainAdminUser '", {"Ref": "DomainAdminUser"}, "' -DomainAdminPassword '", {"Ref": "DomainAdminPassword"}, "' -WSFCNode2NetBIOSName '", {"Ref": "WSFCNode2NetBIOSName"}, {"Fn::If": ["IsTwoNode", "' -FileServerNetBIOSName '", {"Ref": "AWS::NoValue"}]}, {"Fn::If": ["IsTwoNode", {"Ref": "WSFCFileServerNetBIOSName"}, {"Ref": "AWS::NoValue"}]}, "'\""]]}, "waitAfterCompletion": "0"}}}, "Cleanup": {"commands": {"a-disable-credssp": {"command": "powershell.exe -ExecutionPolicy RemoteSigned \"C:\\cfn\\scripts\\Disable-CredSSP.ps1\"", "waitAfterCompletion": "0"}}}, "Finalize": {"commands": {"a-reboot": {"command": "powershell.exe -Command \"C:\\cfn\\scripts\\Restart-Computer.ps1\"", "waitAfterCompletion": "forever"}, "b-signal-success": {"command": "powershell -Command \"Write-AWSQuickStartStatus\"", "waitAfterCompletion": "0"}}}}}, "Properties": {"Affinity": {"Fn::If": ["HostTypeIsDediHost", "host", {"Fn::If": ["HostTypeIsDefault", {"Ref": "AWS::NoValue"}, "default"]}]}, "HostId": {"Fn::If": ["HostTypeIsDediHost", {"Ref": "DedicatedHostIDNode2"}, {"Ref": "AWS::NoValue"}]}, "Tenancy": {"Fn::If": ["HostTypeIsDediHost", "host", {"Fn::If": ["HostTypeIsDefault", "default", "dedicated"]}]}, "ImageId": {"Fn::If": ["ByolAmi", {"Ref": "DedicatedHostAMI"}, {"Fn::FindInMap": ["AWSAMIRegionMap", {"Ref": "AWS::Region"}, {"Fn::FindInMap": ["SQLAMINameMap", {"Ref": "SQLServerVersion"}, {"Ref": "SQLLicenseProvided"}]}]}]}, "IamInstanceProfile": {"Ref": "WSFCProfile"}, "InstanceType": {"Ref": "WSFCNode2InstanceType"}, "EbsOptimized": "true", "NetworkInterfaces": [{"DeleteOnTermination": "true", "DeviceIndex": 0, "SubnetId": {"Ref": "PrivateSubnet2ID"}, "PrivateIpAddresses": [{"Primary": "true", "PrivateIpAddress": {"Ref": "WSFCNode2PrivateIP1"}}, {"Primary": "false", "PrivateIpAddress": {"Ref": "WSFCNode2PrivateIP2"}}, {"Primary": "false", "PrivateIpAddress": {"Ref": "WSFCNode2PrivateIP3"}}], "GroupSet": [{"Ref": "DomainMemberSGID"}, {"Ref": "WSFCSecurityGroup"}, {"Ref": "WSFCClientSecurityGroup"}]}], "Tags": [{"Key": "Name", "Value": {"Ref": "WSFCNode2NetBIOSName"}}], "BlockDeviceMappings": [{"DeviceName": "/dev/sda1", "Ebs": {"VolumeSize": "100", "VolumeType": "gp2"}}, {"DeviceName": "/dev/xvdca", "VirtualName": "ephemeral0"}], "KeyName": {"Ref": "KeyPairName"}}}, "WSFCNode1Volume1": {"Type": "AWS::EC2::Volume", "Properties": {"Size": {"Ref": "Volume1Size"}, "VolumeType": {"Ref": "Volume1Type"}, "AvailabilityZone": {"Fn::GetAtt": ["WSFCNode1", "AvailabilityZone"]}, "Iops": {"Fn::If": ["Vol1IsIo1", {"Ref": "Volume1Iops"}, {"Ref": "AWS::NoValue"}]}}}, "WSFCNode1Volume2": {"Type": "AWS::EC2::Volume", "Properties": {"Size": {"Ref": "Volume2Size"}, "VolumeType": {"Ref": "Volume2Type"}, "AvailabilityZone": {"Fn::GetAtt": ["WSFCNode1", "AvailabilityZone"]}, "Iops": {"Fn::If": ["Vol2IsIo1", {"Ref": "Volume2Iops"}, {"Ref": "AWS::NoValue"}]}}}, "WSFCNode1Volume3": {"Type": "AWS::EC2::Volume", "Properties": {"Size": {"Ref": "Volume3Size"}, "VolumeType": {"Ref": "Volume3Type"}, "AvailabilityZone": {"Fn::GetAtt": ["WSFCNode1", "AvailabilityZone"]}, "Iops": {"Fn::If": ["Vol3IsIo1", {"Ref": "Volume3Iops"}, {"Ref": "AWS::NoValue"}]}}}, "WSFCNode2Volume1": {"Type": "AWS::EC2::Volume", "Properties": {"Size": {"Ref": "Volume1Size"}, "VolumeType": {"Ref": "Volume1Type"}, "AvailabilityZone": {"Fn::GetAtt": ["WSFCNode2", "AvailabilityZone"]}, "Iops": {"Fn::If": ["Vol1IsIo1", {"Ref": "Volume1Iops"}, {"Ref": "AWS::NoValue"}]}}}, "WSFCNode2Volume2": {"Type": "AWS::EC2::Volume", "Properties": {"Size": {"Ref": "Volume2Size"}, "VolumeType": {"Ref": "Volume2Type"}, "AvailabilityZone": {"Fn::GetAtt": ["WSFCNode2", "AvailabilityZone"]}, "Iops": {"Fn::If": ["Vol2IsIo1", {"Ref": "Volume2Iops"}, {"Ref": "AWS::NoValue"}]}}}, "WSFCNode2Volume3": {"Type": "AWS::EC2::Volume", "Properties": {"Size": {"Ref": "Volume3Size"}, "VolumeType": {"Ref": "Volume3Type"}, "AvailabilityZone": {"Fn::GetAtt": ["WSFCNode2", "AvailabilityZone"]}, "Iops": {"Fn::If": ["Vol3IsIo1", {"Ref": "Volume3Iops"}, {"Ref": "AWS::NoValue"}]}}}, "WSFCNode3Volume1": {"Type": "AWS::EC2::Volume", "Condition": "ThirdAzIsFullNode", "Properties": {"Size": {"Ref": "Volume1Size"}, "VolumeType": {"Ref": "Volume1Type"}, "AvailabilityZone": {"Fn::GetAtt": ["WSFCNode3", "AvailabilityZone"]}, "Iops": {"Fn::If": ["Vol1IsIo1", {"Ref": "Volume1Iops"}, {"Ref": "AWS::NoValue"}]}}}, "WSFCNode3Volume2": {"Type": "AWS::EC2::Volume", "Condition": "ThirdAzIsFullNode", "Properties": {"Size": {"Ref": "Volume2Size"}, "VolumeType": {"Ref": "Volume2Type"}, "AvailabilityZone": {"Fn::GetAtt": ["WSFCNode3", "AvailabilityZone"]}, "Iops": {"Fn::If": ["Vol2IsIo1", {"Ref": "Volume2Iops"}, {"Ref": "AWS::NoValue"}]}}}, "WSFCNode3Volume3": {"Type": "AWS::EC2::Volume", "Condition": "ThirdAzIsFullNode", "Properties": {"Size": {"Ref": "Volume3Size"}, "VolumeType": {"Ref": "Volume3Type"}, "AvailabilityZone": {"Fn::GetAtt": ["WSFCNode3", "AvailabilityZone"]}, "Iops": {"Fn::If": ["Vol3IsIo1", {"Ref": "Volume3Iops"}, {"Ref": "AWS::NoValue"}]}}}, "WSFCNode1Volume1Attachment": {"Type": "AWS::EC2::VolumeAttachment", "Properties": {"Device": "/dev/xvdb", "InstanceId": {"Ref": "WSFCNode1"}, "VolumeId": {"Ref": "WSFCNode1Volume1"}}}, "WSFCNode1Volume2Attachment": {"Type": "AWS::EC2::VolumeAttachment", "Properties": {"Device": "/dev/xvdc", "InstanceId": {"Ref": "WSFCNode1"}, "VolumeId": {"Ref": "WSFCNode1Volume2"}}}, "WSFCNode1Volume3Attachment": {"Type": "AWS::EC2::VolumeAttachment", "Properties": {"Device": "/dev/xvdd", "InstanceId": {"Ref": "WSFCNode1"}, "VolumeId": {"Ref": "WSFCNode1Volume3"}}}, "WSFCNode2Volume1Attachment": {"Type": "AWS::EC2::VolumeAttachment", "Properties": {"Device": "/dev/xvdb", "InstanceId": {"Ref": "WSFCNode2"}, "VolumeId": {"Ref": "WSFCNode2Volume1"}}}, "WSFCNode2Volume2Attachment": {"Type": "AWS::EC2::VolumeAttachment", "Properties": {"Device": "/dev/xvdc", "InstanceId": {"Ref": "WSFCNode2"}, "VolumeId": {"Ref": "WSFCNode2Volume2"}}}, "WSFCNode2Volume3Attachment": {"Type": "AWS::EC2::VolumeAttachment", "Properties": {"Device": "/dev/xvdd", "InstanceId": {"Ref": "WSFCNode2"}, "VolumeId": {"Ref": "WSFCNode2Volume3"}}}, "WSFCNode3Volume1Attachment": {"Type": "AWS::EC2::VolumeAttachment", "Condition": "ThirdAzIsFullNode", "Properties": {"Device": "/dev/xvdb", "InstanceId": {"Ref": "WSFCNode3"}, "VolumeId": {"Ref": "WSFCNode3Volume1"}}}, "WSFCNode3Volume2Attachment": {"Type": "AWS::EC2::VolumeAttachment", "Condition": "ThirdAzIsFullNode", "Properties": {"Device": "/dev/xvdc", "InstanceId": {"Ref": "WSFCNode3"}, "VolumeId": {"Ref": "WSFCNode3Volume2"}}}, "WSFCNode3Volume3Attachment": {"Type": "AWS::EC2::VolumeAttachment", "Condition": "ThirdAzIsFullNode", "Properties": {"Device": "/dev/xvdd", "InstanceId": {"Ref": "WSFCNode3"}, "VolumeId": {"Ref": "WSFCNode3Volume3"}}}, "WSFCSecurityGroup": {"Type": "AWS::EC2::SecurityGroup", "Properties": {"GroupDescription": "Enable the WSFC and SQL AlwaysOn Availability Group communications", "VpcId": {"Ref": "VPCID"}}}, "WSFCSecurityGroupIngressIcmp": {"Type": "AWS::EC2::SecurityGroupIngress", "Properties": {"GroupId": {"Ref": "WSFCSecurityGroup"}, "SourceSecurityGroupId": {"Ref": "WSFCSecurityGroup"}, "IpProtocol": "icmp", "FromPort": "-1", "ToPort": "-1"}}, "WSFCSecurityGroupIngressTcp135": {"Type": "AWS::EC2::SecurityGroupIngress", "Properties": {"GroupId": {"Ref": "WSFCSecurityGroup"}, "SourceSecurityGroupId": {"Ref": "WSFCSecurityGroup"}, "IpProtocol": "tcp", "FromPort": "135", "ToPort": "135"}}, "WSFCSecurityGroupIngressTcp137": {"Type": "AWS::EC2::SecurityGroupIngress", "Properties": {"GroupId": {"Ref": "WSFCSecurityGroup"}, "SourceSecurityGroupId": {"Ref": "WSFCSecurityGroup"}, "IpProtocol": "tcp", "FromPort": "137", "ToPort": "137"}}, "WSFCSecurityGroupIngressTcp445": {"Type": "AWS::EC2::SecurityGroupIngress", "Properties": {"GroupId": {"Ref": "WSFCSecurityGroup"}, "SourceSecurityGroupId": {"Ref": "WSFCSecurityGroup"}, "IpProtocol": "tcp", "FromPort": "445", "ToPort": "445"}}, "WSFCSecurityGroupIngressTcp1433": {"Type": "AWS::EC2::SecurityGroupIngress", "Properties": {"GroupId": {"Ref": "WSFCSecurityGroup"}, "SourceSecurityGroupId": {"Ref": "WSFCSecurityGroup"}, "IpProtocol": "tcp", "FromPort": "1433", "ToPort": "1434"}}, "WSFCSecurityGroupIngressTcp3343": {"Type": "AWS::EC2::SecurityGroupIngress", "Properties": {"GroupId": {"Ref": "WSFCSecurityGroup"}, "SourceSecurityGroupId": {"Ref": "WSFCSecurityGroup"}, "IpProtocol": "tcp", "FromPort": "3343", "ToPort": "3343"}}, "WSFCSecurityGroupIngressTcp5022": {"Type": "AWS::EC2::SecurityGroupIngress", "Properties": {"GroupId": {"Ref": "WSFCSecurityGroup"}, "SourceSecurityGroupId": {"Ref": "WSFCSecurityGroup"}, "IpProtocol": "tcp", "FromPort": "5022", "ToPort": "5022"}}, "WSFCSecurityGroupIngressTcp5985": {"Type": "AWS::EC2::SecurityGroupIngress", "Properties": {"GroupId": {"Ref": "WSFCSecurityGroup"}, "SourceSecurityGroupId": {"Ref": "WSFCSecurityGroup"}, "IpProtocol": "tcp", "FromPort": "5985", "ToPort": "5985"}}, "WSFCSecurityGroupIngressUdp137": {"Type": "AWS::EC2::SecurityGroupIngress", "Properties": {"GroupId": {"Ref": "WSFCSecurityGroup"}, "SourceSecurityGroupId": {"Ref": "WSFCSecurityGroup"}, "IpProtocol": "udp", "FromPort": "137", "ToPort": "137"}}, "WSFCSecurityGroupIngressUdp3343": {"Type": "AWS::EC2::SecurityGroupIngress", "Properties": {"GroupId": {"Ref": "WSFCSecurityGroup"}, "SourceSecurityGroupId": {"Ref": "WSFCSecurityGroup"}, "IpProtocol": "udp", "FromPort": "3343", "ToPort": "3343"}}, "WSFCSecurityGroupIngressUdp1434": {"Type": "AWS::EC2::SecurityGroupIngress", "Properties": {"GroupId": {"Ref": "WSFCSecurityGroup"}, "SourceSecurityGroupId": {"Ref": "WSFCSecurityGroup"}, "IpProtocol": "udp", "FromPort": "1434", "ToPort": "1434"}}, "SQLServerAccessSecurityGroup": {"Type": "AWS::EC2::SecurityGroup", "Properties": {"VpcId": {"Ref": "VPCID"}, "GroupDescription": "Allows access to SQL Servers"}}, "WSFCClientSecurityGroup": {"Type": "AWS::EC2::SecurityGroup", "Properties": {"GroupDescription": "SQL Client access ports", "VpcId": {"Ref": "VPCID"}, "SecurityGroupIngress": [{"IpProtocol": "tcp", "FromPort": "1433", "ToPort": "1433", "SourceSecurityGroupId": {"Ref": "SQLServerAccessSecurityGroup"}}]}}}, "Outputs": {"DomainAdmin": {"Value": {"Fn::Join": ["", [{"Ref": "DomainNetBIOSName"}, "\\", {"Ref": "DomainAdminUser"}]]}, "Description": "Domain administrator account"}, "LocalAdmin": {"Value": "Administrator", "Description": "Please retrieve Administrator password of the instance"}, "WSFCNode1NetBIOSName": {"Value": {"Ref": "WSFCNode1NetBIOSName"}, "Description": "NetBIOS name of the 1st WSFC Node"}, "WSFCNode2NetBIOSName": {"Value": {"Ref": "WSFCNode2NetBIOSName"}, "Description": "NetBIOS name of the 2nd WSFC Node"}, "WSFCNode3NetBIOSName": {"Condition": "ThirdAzIsFullNode", "Value": {"Ref": "WSFCNode3NetBIOSName"}, "Description": "NetBIOS name of the 3rd WSFC Node"}, "SQLServerAccessSecurityGroupID": {"Value": {"Ref": "SQLServerAccessSecurityGroup"}, "Description": "Add instances that require access to SQL to this Security Group"}}}
