{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "AWS CloudFormation template creates a CloudLens Quick Start environment with 2 Linux instances in an existing VPC. Copyright 2018 Keysight Technologies. (qs-1pa9kcmed)",
  "Parameters": {
    "VPCID": {
      "Description": "ID of the VPC (e.g., vpc-0343606e).",
      "Type": "AWS::EC2::VPC::Id"
    },
    "PublicSubnet1ID": {
      "Description": "ID of the public subnet located in Availability Zone 1 (e.g., subnet-a0246dcd).",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "PublicSubnet2ID": {
      "Description": "ID of the public subnet located in Availability Zone 2 (e.g., subnet-a0246dcd).",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "CloudLensProjectKey": {
      "Description": "CloudLens project key for the source and tool instances.",
      "Type": "String",
      "MinLength": "40"
    },
    "CustomAMIId": {
      "Type": "String",
      "Description": "Optional AMI ID for source instance. If not specified, Ubuntu 16.04 is used.",
      "Default": ""
    },
    "SourceInstanceType": {
      "Description": "EC2 instance type for source instance.",
      "Type": "String",
      "Default": "m4.large",
      "AllowedValues": [
        "c1.medium",
        "c1.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c3.large",
        "c3.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "c4.large",
        "c4.xlarge",
        "c5.18xlarge",
        "c5.2xlarge",
        "c5.4xlarge",
        "c5.9xlarge",
        "c5.large",
        "c5.xlarge",
        "cc2.8xlarge",
        "cg1.4xlarge",
        "cr1.8xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge",
        "d2.xlarge",
        "f1.16xlarge",
        "f1.2xlarge",
        "g2.2xlarge",
        "g2.8xlarge",
        "g3.16xlarge",
        "g3.4xlarge",
        "g3.8xlarge",
        "h1.16xlarge",
        "h1.2xlarge",
        "h1.4xlarge",
        "h1.8xlarge",
        "hs1.8xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "i2.xlarge",
        "i3.16xlarge",
        "i3.2xlarge",
        "i3.4xlarge",
        "i3.8xlarge",
        "i3.large",
        "i3.xlarge",
        "m1.large",
        "m1.medium",
        "m1.small",
        "m1.xlarge",
        "m2.2xlarge",
        "m2.4xlarge",
        "m2.xlarge",
        "m3.2xlarge",
        "m3.large",
        "m3.medium",
        "m3.xlarge",
        "m4.10xlarge",
        "m4.16xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.large",
        "m4.xlarge",
        "m5.12xlarge",
        "m5.24xlarge",
        "m5.2xlarge",
        "m5.4xlarge",
        "m5.large",
        "m5.xlarge",
        "p2.16xlarge",
        "p2.8xlarge",
        "p2.xlarge",
        "p3.16xlarge",
        "p3.2xlarge",
        "p3.8xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r4.16xlarge",
        "r4.2xlarge",
        "r4.4xlarge",
        "r4.8xlarge",
        "r4.large",
        "r4.xlarge",
        "t1.micro",
        "t2.2xlarge",
        "t2.large",
        "t2.medium",
        "t2.micro",
        "t2.nano",
        "t2.small",
        "t2.xlarge",
        "x1.16xlarge",
        "x1.32xlarge",
        "x1e.16xlarge",
        "x1e.2xlarge",
        "x1e.32xlarge",
        "x1e.4xlarge",
        "x1e.8xlarge",
        "x1e.xlarge"
      ],
      "ConstraintDescription": "Must be a valid EC2 instance type."
    },
    "ToolInstanceType": {
      "Description": "EC2 instance type for tool instance.",
      "Type": "String",
      "Default": "m4.large",
      "AllowedValues": [
        "c1.medium",
        "c1.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c3.large",
        "c3.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "c4.large",
        "c4.xlarge",
        "cc2.8xlarge",
        "cg1.4xlarge",
        "cr1.8xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge",
        "d2.xlarge",
        "f1.16xlarge",
        "f1.2xlarge",
        "g2.2xlarge",
        "g2.8xlarge",
        "g3.16xlarge",
        "g3.4xlarge",
        "g3.8xlarge",
        "h1.16xlarge",
        "h1.2xlarge",
        "h1.4xlarge",
        "h1.8xlarge",
        "hs1.8xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "i2.xlarge",
        "i3.16xlarge",
        "i3.2xlarge",
        "i3.4xlarge",
        "i3.8xlarge",
        "i3.large",
        "i3.xlarge",
        "m1.large",
        "m1.medium",
        "m1.small",
        "m1.xlarge",
        "m2.2xlarge",
        "m2.4xlarge",
        "m2.xlarge",
        "m3.2xlarge",
        "m3.large",
        "m3.medium",
        "m3.xlarge",
        "m4.10xlarge",
        "m4.16xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.large",
        "m4.xlarge",
        "p2.16xlarge",
        "p2.8xlarge",
        "p2.xlarge",
        "p3.16xlarge",
        "p3.2xlarge",
        "p3.8xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r4.16xlarge",
        "r4.2xlarge",
        "r4.4xlarge",
        "r4.8xlarge",
        "r4.large",
        "r4.xlarge",
        "t1.micro",
        "t2.2xlarge",
        "t2.large",
        "t2.medium",
        "t2.micro",
        "t2.nano",
        "t2.small",
        "t2.xlarge",
        "x1.16xlarge",
        "x1.32xlarge",
        "x1e.16xlarge",
        "x1e.2xlarge",
        "x1e.32xlarge",
        "x1e.4xlarge",
        "x1e.8xlarge",
        "x1e.xlarge"
      ],
      "ConstraintDescription": "Must be a valid EC2 instance type."
    },
    "SSHKeyName": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description": "Key from current region for SSH access to EC2 instances."
    }
  },
  "Rules": {
    "SubnetsInVPC": {
      "Assertions": [
        {
          "Assert": {
            "Fn::EachMemberIn": [
              {
                "Fn::ValueOfAll": [
                  "AWS::EC2::Subnet::Id",
                  "VpcId"
                ]
              },
              {
                "Fn::RefAll": "AWS::EC2::VPC::Id"
              }
            ]
          },
          "AssertDescription": "All subnets must in the VPC"
        }
      ]
    }
  },
  "Mappings": {
    "AWSAMIRegionMap": {
      "AMI": {
        "SRCUBUNTU": "ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-20180522",
        "TOOLEAST": "eastwind-cloudlens-sensor-1.0-20180112"
      },
      "ap-northeast-1": {
        "SRCUBUNTU": "ami-48a45937",
        "TOOLEAST": "ami-9c68a7e3"
      },
      "ap-northeast-2": {
        "SRCUBUNTU": "ami-f030989e",
        "TOOLEAST": "ami-ef61cb81"
      },
      "ap-south-1": {
        "SRCUBUNTU": "ami-41e9c52e",
        "TOOLEAST": "ami-b74368d8"
      },
      "ap-southeast-1": {
        "SRCUBUNTU": "ami-81cefcfd",
        "TOOLEAST": "ami-458a8d39"
      },
      "ap-southeast-2": {
        "SRCUBUNTU": "ami-963cecf4",
        "TOOLEAST": "ami-c901deab"
      },
      "ca-central-1": {
        "SRCUBUNTU": "ami-7e21a11a",
        "TOOLEAST": "ami-e4088b80"
      },
      "eu-central-1": {
        "SRCUBUNTU": "ami-c7e0c82c",
        "TOOLEAST": "ami-d0c0f33b"
      },
      "eu-west-1": {
        "SRCUBUNTU": "ami-58d7e821",
        "TOOLEAST": "ami-36fef24f"
      },
      "eu-west-2": {
        "SRCUBUNTU": "ami-5daa463a",
        "TOOLEAST": "ami-8ded03ea"
      },
      "eu-west-3": {
        "SRCUBUNTU": "ami-1960d164",
        "TOOLEAST": "ami-7115a40c"
      },
      "sa-east-1": {
        "SRCUBUNTU": "ami-67fca30b",
        "TOOLEAST": "ami-7692c91a"
      },
      "us-east-1": {
        "SRCUBUNTU": "ami-a4dc46db",
        "TOOLEAST": "ami-e03d7e9f"
      },
      "us-east-2": {
        "SRCUBUNTU": "ami-6a003c0f",
        "TOOLEAST": "ami-27e7d942"
      },
      "us-west-1": {
        "SRCUBUNTU": "ami-8d948ced",
        "TOOLEAST": "ami-970beff4"
      },
      "us-west-2": {
        "SRCUBUNTU": "ami-db710fa3",
        "TOOLEAST": "ami-7a6e2c02"
      }
    }
  },
  "Conditions": {
    "HasCustomAMIId": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            "",
            {
              "Ref": "CustomAMIId"
            }
          ]
        }
      ]
    },
    "IsDevAccount": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Fn::Select": [
                "1",
                {
                  "Fn::Split": [
                    "||",
                    {
                      "Fn::Join": [
                        "",
                        [
                          "dummyVar||",
                          {
                            "Ref": "CloudLensProjectKey"
                          }
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Ref": "CloudLensProjectKey"
            }
          ]
        }
      ]
    }
  },
  "Resources": {
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "root",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "arn:aws:logs:*:*:*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ec2:DescribeImages"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "AMIVerificationLambda": {
      "Type": "AWS::Lambda::Function",
      "DependsOn": [
        "LambdaExecutionRole"
      ],
      "Properties": {
        "Code": {
          "ZipFile": {
            "Fn::Join": [
              "",
              [
                "var aws = require(\"aws-sdk\");",
                "var response = require(\"cfn-response\");",
                "exports.handler = function(event, context) {",
                "    var responseStatus = \"FAILED\";",
                "    var responseData = {};",
                "    var ec2 = new aws.EC2({region: event.ResourceProperties.Region});",
                "    var describeImagesParams = {",
                "        Filters: [{ Name: \"name\", Values: [\"*eastwind-cloudlens-sensor*\"]}],",
                "    };",
                "    ec2.describeImages(describeImagesParams, function(err, describeImagesResult) {",
                "       var images = describeImagesResult.Images;",
                "       if(images.length != 0 ){",
                "           responseStatus = \"SUCCESS\";",
                "           response.send(event, context, responseStatus, responseData);",
                "       }else {",
                "           responseStatus = \"FAILED\";",
                "           responseData[\"Reason\"] = \"Quickstart failed because eastwind subscription is not active\";",
                "           response.send(event, context, responseStatus, responseData);",
                "       }",
                "    });",
                "};"
              ]
            ]
          }
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs6.10",
        "Timeout": "30"
      }
    },
    "VerifyEastwindAmi": {
      "DependsOn": [
        "AMIVerificationLambda"
      ],
      "Type": "Custom::AMIInfo",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AMIVerificationLambda",
            "Arn"
          ]
        },
        "Region": {
          "Ref": "AWS::Region"
        }
      },
      "DeletionPolicy": "Retain"
    },
    "CloudLensQuickStartSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable access to only a set of ports",
        "VpcId": {
          "Ref": "VPCID"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "CidrIp": "0.0.0.0/0",
            "FromPort": "443",
            "ToPort": "443"
          },
          {
            "IpProtocol": "tcp",
            "CidrIp": "0.0.0.0/0",
            "FromPort": "8883",
            "ToPort": "8883"
          },
          {
            "IpProtocol": "tcp",
            "CidrIp": "0.0.0.0/0",
            "FromPort": "8443",
            "ToPort": "8443"
          },
          {
            "IpProtocol": "tcp",
            "CidrIp": "0.0.0.0/0",
            "FromPort": "22",
            "ToPort": "22"
          },
          {
            "IpProtocol": "udp",
            "CidrIp": "0.0.0.0/0",
            "FromPort": "19993",
            "ToPort": "19993"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "tcp",
            "CidrIp": "0.0.0.0/0",
            "FromPort": "80",
            "ToPort": "80"
          },
          {
            "IpProtocol": "tcp",
            "CidrIp": "0.0.0.0/0",
            "FromPort": "443",
            "ToPort": "443"
          },
          {
            "IpProtocol": "tcp",
            "CidrIp": "0.0.0.0/0",
            "FromPort": "8883",
            "ToPort": "8883"
          },
          {
            "IpProtocol": "tcp",
            "CidrIp": "0.0.0.0/0",
            "FromPort": "8443",
            "ToPort": "8443"
          },
          {
            "IpProtocol": "udp",
            "CidrIp": "0.0.0.0/0",
            "FromPort": "9993",
            "ToPort": "9993"
          },
          {
            "IpProtocol": "udp",
            "CidrIp": "0.0.0.0/0",
            "FromPort": "19993",
            "ToPort": "19993"
          },
          {
            "IpProtocol": "tcp",
            "CidrIp": "0.0.0.0/0",
            "FromPort": "40000",
            "ToPort": "40007"
          },
          {
            "IpProtocol": "tcp",
            "CidrIp": "0.0.0.0/0",
            "FromPort": "41000",
            "ToPort": "41004"
          }
        ]
      }
    },
    "IAMRole": {
      "Type": "AWS::IAM::Role",
      "Metadata": {
        "Comment": "This role requires permissions for access to EC2 metadata. All other stack resources depend directly or indirectly on this role via DependsOn, Ref, or Fn::GetAtt, to ensure that the role is the last of the stack resources to be deleted."
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "EC2MetaDataAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "ReadOnly",
                  "Effect": "Allow",
                  "Action": [
                    "ec2:Describe*"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "CloudLensQuickStartIAMInstanceProfile": {
      "DependsOn": "IAMRole",
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "IAMRole"
          }
        ]
      }
    },
    "InstanceAutoscaleGroup": {
      "DependsOn": [
        "CloudLensQuickStartIAMInstanceProfile",
        "CloudLensQuickStartSecurityGroup",
        "InstanceLaunchConfig"
      ],
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "VPCZoneIdentifier": [
          {
            "Ref": "PublicSubnet1ID"
          },
          {
            "Ref": "PublicSubnet2ID"
          }
        ],
        "LaunchConfigurationName": {
          "Ref": "InstanceLaunchConfig"
        },
        "MinSize": "1",
        "MaxSize": "1",
        "Tags": [
          {
            "Key": "Name",
            "Value": "CloudLens Quick Start Source Instance",
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "CreatedBy",
            "Value": "CloudLens-QuickStart-Template",
            "PropagateAtLaunch": "true"
          }
        ]
      }
    },
    "InstanceLaunchConfig": {
      "DependsOn": [
        "CloudLensQuickStartIAMInstanceProfile",
        "CloudLensQuickStartSecurityGroup"
      ],
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Fn::If": [
            "HasCustomAMIId",
            {
              "Ref": "CustomAMIId"
            },
            {
              "Fn::FindInMap": [
                "AWSAMIRegionMap",
                {
                  "Ref": "AWS::Region"
                },
                "SRCUBUNTU"
              ]
            }
          ]
        },
        "IamInstanceProfile": {
          "Ref": "CloudLensQuickStartIAMInstanceProfile"
        },
        "InstanceType": {
          "Ref": "SourceInstanceType"
        },
        "InstanceMonitoring": "false",
        "KeyName": {
          "Ref": "SSHKeyName"
        },
        "SecurityGroups": [
          {
            "Ref": "CloudLensQuickStartSecurityGroup"
          }
        ]
      }
    },
    "ToolAutoscaleGroup": {
      "DependsOn": [
        "CloudLensQuickStartIAMInstanceProfile",
        "CloudLensQuickStartSecurityGroup",
        "ToolLaunchConfig"
      ],
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "VPCZoneIdentifier": [
          {
            "Ref": "PublicSubnet1ID"
          },
          {
            "Ref": "PublicSubnet2ID"
          }
        ],
        "LaunchConfigurationName": {
          "Ref": "ToolLaunchConfig"
        },
        "MinSize": "1",
        "MaxSize": "1",
        "Tags": [
          {
            "Key": "Name",
            "Value": "CloudLens Quick Start Tool Instance",
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "CreatedBy",
            "Value": "CloudLens-QuickStart-Template",
            "PropagateAtLaunch": "true"
          }
        ]
      }
    },
    "ToolLaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "AWSAMIRegionMap",
            {
              "Ref": "AWS::Region"
            },
            "TOOLEAST"
          ]
        },
        "IamInstanceProfile": {
          "Ref": "CloudLensQuickStartIAMInstanceProfile"
        },
        "InstanceType": {
          "Ref": "ToolInstanceType"
        },
        "InstanceMonitoring": "false",
        "KeyName": {
          "Ref": "SSHKeyName"
        },
        "SecurityGroups": [
          {
            "Ref": "CloudLensQuickStartSecurityGroup"
          }
        ]
      }
    }
  },
  "Outputs": {},
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Network Configuration"
          },
          "Parameters": [
            "VPCID",
            "PublicSubnet1ID",
            "PublicSubnet2ID"
          ]
        },
        {
          "Label": {
            "default": "CloudLens configuration"
          },
          "Parameters": [
            "CloudLensProjectKey"
          ]
        },
        {
          "Label": {
            "default": "Source instance configuration"
          },
          "Parameters": [
            "CustomAMIId",
            "SourceInstanceType"
          ]
        },
        {
          "Label": {
            "default": "Tool instance configuration"
          },
          "Parameters": [
            "ToolInstanceType"
          ]
        },
        {
          "Label": {
            "default": "SSH configuration"
          },
          "Parameters": [
            "SSHKeyName"
          ]
        }
      ],
      "ParameterLabels": {
        "VPCID": {
          "default": "VPC ID"
        },
        "PublicSubnet1ID": {
          "default": "Public subnet 1 ID"
        },
        "PublicSubnet2ID": {
          "default": "Public subnet 2 ID"
        },
        "CloudLensProjectKey": {
          "default": "Project key"
        },
        "CustomAMIId": {
          "default": "Optional source AMI"
        },
        "SourceInstanceType": {
          "default": "Source instance type"
        },
        "ToolInstanceType": {
          "default": "Tool instance type"
        },
        "SSHKeyName": {
          "default": "SSH configuration"
        }
      }
    }
  }
}
