AWSTemplateFormatVersion: "2010-09-09"
Description: Deploys EKS nodes into an existing VPC (qs-1p7nknoid)
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network Configuration
        Parameters:
          - VPCID
          - PrivateSubnet1ID
          - PrivateSubnet2ID
          - PrivateSubnet3ID
      - Label:
          default: Amazon EC2 Configuration
        Parameters:
          - KeyPairName
          - NodeAMIOS
      - Label:
          default: EKS Configuration
        Parameters:
          - NodeInstanceType
          - NumberOfNodes
          - NodeGroupName
          - NodeVolumeSize
      - Label:
          default: AWS Quick Start Configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
    ParameterLabels:
      KeyPairName:
        default: SSH Key Name
      NodeAMIOS:
        default: Node AMI Operating System
      PrivateSubnet1ID:
        default: Private Subnet 1 ID
      PrivateSubnet2ID:
        default: Private Subnet 2 ID
      PrivateSubnet3ID:
        default: Private Subnet 3 ID
      VPCID:
        default: VPC ID
      NodeInstanceType:
        default: Nodes Instance Type
      NumberOfNodes:
        default: Number of Nodes
      NodeGroupName:
        default: Node Group Name
      NodeVolumeSize:
        default: Node Volume Size
      QSS3BucketName:
        default: Quick Start S3 Bucket Name
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
Parameters:
  KeyPairName:
    Description: Name of an existing EC2 key pair. All instances will launch with this key pair.
    Type: AWS::EC2::KeyPair::KeyName
  NodeAMIOS:
    AllowedValues:
      - Amazon-Linux-HVM
      - SUSE-SLES-15-HVM
    Default: Amazon-Linux-HVM
    Description: The Linux distribution for the AMI to be used for the node instances.
    Type: String
  PrivateSubnet1ID:
    Description: ID of private subnet 1 in Availability Zone 1 for the Workload (e.g., subnet-a0246dcd)
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2ID:
    Description: ID of private subnet 2 in Availability Zone 2 for the Workload (e.g., subnet-b1f432cd)
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet3ID:
    Description: ID of private subnet 3 in Availability Zone 3 for the Workload (e.g., subnet-b1f4a2cd)
    Type: AWS::EC2::Subnet::Id
  VPCID:
    Description: ID of your existing VPC for deployment
    Type: AWS::EC2::VPC::Id
  NodeInstanceType:
    Default: t3.medium
    AllowedValues:
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - x1.16xlarge
      - x1.32xlarge
      - p2.xlarge
      - p2.8xlarge
      - p2.16xlarge
      - p3.2xlarge
      - p3.8xlarge
      - p3.16xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.12xlarge
      - r5.24xlarge
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.12xlarge
      - r5d.24xlarge
      - z1d.large
      - z1d.xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.12xlarge
    ConstraintDescription: Must be a valid EC2 instance type
    Description: Type of EC2 instance for the Node instances
    Type: String
  NumberOfNodes:
    Default: '3'
    Description: Number of EKS node instances
    Type: Number
  NodeGroupName:
    Default: Default
    Description: Name for EKS node group
    Type: String
  NodeVolumeSize:
    Default: 20
    Description: Size for node volumes
    Type: String
  EKSControlPlane:
    Description: Name of the EKS cluster to join
    Type: String
  BootstrapArguments:
    Description: Arguments to pass to the bootstrap script. See files/bootstrap.sh in https://github.com/awslabs/amazon-eks-ami
    Type: String
    Default: ""
  ControlPlaneSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
  NodeInstanceProfile:
    Type: String
  NodeInstanceRoleName:
    Type: String
  KubernetesVersion:
    Type: String
    AllowedValues: ["1.11", "1.10"]
    Default: "1.11"
  TargetGroupARNs:
    Type: CommaDelimitedList
    Default: ""
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Default: aws-ia
    Description: S3 bucket name for the Quick Start assets. This string can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).
    Default: quickstart-amazon-eks/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).
    Type: String
Conditions:
  AmznOS: !Equals
    - !Ref NodeAMIOS
    - Amazon-Linux-HVM
  DisableTargetGroups: !Equals
    - !Join [",", !Ref 'TargetGroupARNs']
    - ""
Mappings:
  K8sVersionMap:
    "1.11":
      BinaryPath: 1.11.5/2018-12-06/bin/linux/amd64
      STD: EKS111
      GPU: EKS111GPU
    "1.10":
      BinaryPath: 1.10.11/2018-12-06/bin/linux/amd64
      STD: EKS110
      GPU: EKS110GPU
  InstanceTypes:
    t2.small: {Type: STD}
    t2.medium: {Type: STD}
    t2.large: {Type: STD}
    t2.xlarge: {Type: STD}
    t2.2xlarge: {Type: STD}
    t3.nano: {Type: STD}
    t3.micro: {Type: STD}
    t3.small: {Type: STD}
    t3.medium: {Type: STD}
    t3.large: {Type: STD}
    t3.xlarge: {Type: STD}
    t3.2xlarge: {Type: STD}
    m3.medium: {Type: STD}
    m3.large: {Type: STD}
    m3.xlarge: {Type: STD}
    m3.2xlarge: {Type: STD}
    m4.large: {Type: STD}
    m4.xlarge: {Type: STD}
    m4.2xlarge: {Type: STD}
    m4.4xlarge: {Type: STD}
    m4.10xlarge: {Type: STD}
    m5.large: {Type: STD}
    m5.xlarge: {Type: STD}
    m5.2xlarge: {Type: STD}
    m5.4xlarge: {Type: STD}
    m5.12xlarge: {Type: STD}
    m5.24xlarge: {Type: STD}
    c4.large: {Type: STD}
    c4.xlarge: {Type: STD}
    c4.2xlarge: {Type: STD}
    c4.4xlarge: {Type: STD}
    c4.8xlarge: {Type: STD}
    c5.large: {Type: STD}
    c5.xlarge: {Type: STD}
    c5.2xlarge: {Type: STD}
    c5.4xlarge: {Type: STD}
    c5.9xlarge: {Type: STD}
    c5.18xlarge: {Type: STD}
    i3.large: {Type: STD}
    i3.xlarge: {Type: STD}
    i3.2xlarge: {Type: STD}
    i3.4xlarge: {Type: STD}
    i3.8xlarge: {Type: STD}
    i3.16xlarge: {Type: STD}
    r3.xlarge: {Type: STD}
    r3.2xlarge: {Type: STD}
    r3.4xlarge: {Type: STD}
    r3.8xlarge: {Type: STD}
    r4.large: {Type: STD}
    r4.xlarge: {Type: STD}
    r4.2xlarge: {Type: STD}
    r4.4xlarge: {Type: STD}
    r4.8xlarge: {Type: STD}
    r4.16xlarge: {Type: STD}
    x1.16xlarge: {Type: STD}
    x1.32xlarge: {Type: STD}
    p2.xlarge: {Type: GPU}
    p2.8xlarge: {Type: GPU}
    p2.16xlarge: {Type: GPU}
    p3.2xlarge: {Type: GPU}
    p3.8xlarge: {Type: GPU}
    p3.16xlarge: {Type: GPU}
    r5.large: {Type: STD}
    r5.xlarge: {Type: STD}
    r5.2xlarge: {Type: STD}
    r5.4xlarge: {Type: STD}
    r5.12xlarge: {Type: STD}
    r5.24xlarge: {Type: STD}
    r5d.large: {Type: STD}
    r5d.xlarge: {Type: STD}
    r5d.2xlarge: {Type: STD}
    r5d.4xlarge: {Type: STD}
    r5d.12xlarge: {Type: STD}
    r5d.24xlarge: {Type: STD}
    z1d.large: {Type: STD}
    z1d.xlarge: {Type: STD}
    z1d.2xlarge: {Type: STD}
    z1d.3xlarge: {Type: STD}
    z1d.6xlarge: {Type: STD}
    z1d.12xlarge: {Type: STD}
  OStoK8sVersionMap:
    Amazon-Linux-HVM:
      EKS111: AMZNEKS111
      EKS111GPU: AMZNEKS111GPU
      EKS110: AMZNEKS110
      EKS110GPU: AMZNEKS110GPU
    SUSE-SLES-15-HVM:
      EKS111: SLES15EKS111
      EKS111GPU: SLES15EKS111GPU
      EKS110: SLES15EKS110
      EKS110GPU: SLES15EKS110GPU
  AWSAMIRegionMap:
    AMI:
      AMZNEKS111: amazon-eks-node-1.11-v20
      AMZNEKS111GPU: amazon-eks-gpu-node-1.11-v20
      AMZNEKS110: amazon-eks-node-1.10-v20
      AMZNEKS110GPU: amazon-eks-gpu-node-1.10-v20
      SLES15EKS111: suse-sles-15-v20
      SLES15EKS111GPU: suse-sles-15-v20
      SLES15EKS110: suse-sles-15-v20
      SLES15EKS110GPU: suse-sles-15-v20
    ap-northeast-1:
      AMZNEKS111: ami-0f0e8066383e7a2cb
      AMZNEKS111GPU: ami-036b3969c5eb8d3cf
      AMZNEKS110: ami-06398bdd37d76571d
      AMZNEKS110GPU: ami-0afc9d14b2fe11ad9
      SLES15EKS111: ami-09161bc9964f46a98
      SLES15EKS111GPU: ami-09161bc9964f46a98
      SLES15EKS110: ami-09161bc9964f46a98
      SLES15EKS110GPU: ami-09161bc9964f46a98
    ap-northeast-2:
      AMZNEKS111: ami-0b7baa90de70f683f
      AMZNEKS111GPU: ami-0b7f163f7194396f7
      AMZNEKS110: ami-08a87e0a7c32fa649
      AMZNEKS110GPU: ami-0d75b9ab57bfc8c9a
      SLES15EKS111: ami-04ecb44b7d8e8d354
      SLES15EKS111GPU: ami-04ecb44b7d8e8d354
      SLES15EKS110: ami-04ecb44b7d8e8d354
      SLES15EKS110GPU: ami-04ecb44b7d8e8d354
    ap-southeast-1:
      AMZNEKS111: ami-019966ed970c18502
      AMZNEKS111GPU: ami-093f742654a955ee6
      AMZNEKS110: ami-0ac3510e44b5bf8ef
      AMZNEKS110GPU: ami-0ecce0670cb66d17b
      SLES15EKS111: ami-0920c364049458e86
      SLES15EKS111GPU: ami-0920c364049458e86
      SLES15EKS110: ami-0920c364049458e86
      SLES15EKS110GPU: ami-0920c364049458e86
    ap-southeast-2:
      AMZNEKS111: ami-06ade0abbd8eca425
      AMZNEKS111GPU: ami-05e09575123ff498b
      AMZNEKS110: ami-0d2c929ace88cfebe
      AMZNEKS110GPU: ami-03b048bd9d3861ce9
      SLES15EKS111: ami-05dff2fbe99ec205f
      SLES15EKS111GPU: ami-05dff2fbe99ec205f
      SLES15EKS110: ami-05dff2fbe99ec205f
      SLES15EKS110GPU: ami-05dff2fbe99ec205f
    eu-central-1:
      AMZNEKS111: ami-010caa98bae9a09e2
      AMZNEKS111GPU: ami-0d6f0554fd4743a9d
      AMZNEKS110: ami-08eb700778f03ea94
      AMZNEKS110GPU: ami-000622b1016d2a5bf
      SLES15EKS111: ami-0a1886cf45f944eb1
      SLES15EKS111GPU: ami-0a1886cf45f944eb1
      SLES15EKS110: ami-0a1886cf45f944eb1
      SLES15EKS110GPU: ami-0a1886cf45f944eb1
    eu-north-1:
      AMZNEKS111: ami-06ee67302ab7cf838
      AMZNEKS111GPU: ami-0b159b75
      AMZNEKS110: ami-068b8a1efffd30eda
      AMZNEKS110GPU: ami-cc149ab2
      SLES15EKS111: ami-0c8b9b0a3c655a6a5
      SLES15EKS111GPU: ami-0c8b9b0a3c655a6a5
      SLES15EKS110: ami-0c8b9b0a3c655a6a5
      SLES15EKS110GPU: ami-0c8b9b0a3c655a6a5
    eu-west-1:
      AMZNEKS111: ami-01e08d22b9439c15a
      AMZNEKS111GPU: ami-097978e7acde1fd7c
      AMZNEKS110: ami-0de10c614955da932
      AMZNEKS110GPU: ami-0dafd3a1dc43781f7
      SLES15EKS111: ami-050889503ddaec473
      SLES15EKS111GPU: ami-050889503ddaec473
      SLES15EKS110: ami-050889503ddaec473
      SLES15EKS110GPU: ami-050889503ddaec473
    eu-west-2:
      AMZNEKS111: ami-0420d737e57af699c
      AMZNEKS111GPU: ami-04ea4358308b693ef
      AMZNEKS110: ami-0bfa0f971add9fb2f
      AMZNEKS110GPU: ami-0286d34d9642b1717
      SLES15EKS111: ami-03369083fb3227e96
      SLES15EKS111GPU: ami-03369083fb3227e96
      SLES15EKS110: ami-03369083fb3227e96
      SLES15EKS110GPU: ami-03369083fb3227e96
    eu-west-3:
      AMZNEKS111: ami-0f5a996749bdfa436
      AMZNEKS111GPU: ami-03a8c02c95426b5f6
      AMZNEKS110: ami-0f0e4bda9786ec624
      AMZNEKS110GPU: ami-05c4fa636d6b561e3
      SLES15EKS111: ami-05677c6482b0bc6e7
      SLES15EKS111GPU: ami-05677c6482b0bc6e7
      SLES15EKS110: ami-05677c6482b0bc6e7
      SLES15EKS110GPU: ami-05677c6482b0bc6e7
    us-east-1:
      AMZNEKS111: ami-0c24db5df6badc35a
      AMZNEKS111GPU: ami-0ff0241c02b279f50
      AMZNEKS110: ami-04358410d28eaab63
      AMZNEKS110GPU: ami-0131c0ca222183def
      SLES15EKS111: ami-06ea7729e394412c8
      SLES15EKS111GPU: ami-06ea7729e394412c8
      SLES15EKS110: ami-06ea7729e394412c8
      SLES15EKS110GPU: ami-06ea7729e394412c8
    us-east-2:
      AMZNEKS111: ami-0c2e8d28b1f854c68
      AMZNEKS111GPU: ami-006a12f54eaafc2b1
      AMZNEKS110: ami-0b779e8ab57655b4b
      AMZNEKS110GPU: ami-0abfb3be33c196cbf
      SLES15EKS111: ami-0eb9f58db22854f8f
      SLES15EKS111GPU: ami-0eb9f58db22854f8f
      SLES15EKS110: ami-0eb9f58db22854f8f
      SLES15EKS110GPU: ami-0eb9f58db22854f8f
    us-west-2:
      AMZNEKS111: ami-0a2abab4107669c1b
      AMZNEKS111GPU: ami-0c9e5e2d8caa9fb5e
      AMZNEKS110: ami-09e1df3bad220af0b
      AMZNEKS110GPU: ami-0ebf0561e61a2be02
      SLES15EKS111: ami-0de02b68de6f5f732
      SLES15EKS111GPU: ami-0de02b68de6f5f732
      SLES15EKS110: ami-0de02b68de6f5f732
      SLES15EKS110GPU: ami-0de02b68de6f5f732
Resources:
  NodeSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for all nodes in the node group
      VpcId: !Ref VPCID
      Tags:
        - Key: !Sub "kubernetes.io/cluster/${EKSControlPlane}"
          Value: 'owned'
  NodeSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow nodes to communicate with each other
      GroupId: !Ref NodeSecurityGroup
      SourceSecurityGroupId: !Ref NodeSecurityGroup
      IpProtocol: '-1'
      FromPort: 0
      ToPort: 65535
  NodeSecurityGroupFromControlPlaneIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow worker Kubelets and pods to receive communication from the cluster control plane
      GroupId: !Ref NodeSecurityGroup
      SourceSecurityGroupId: !Ref ControlPlaneSecurityGroup
      IpProtocol: tcp
      FromPort: 1025
      ToPort: 65535
  ControlPlaneEgressToNodeSecurityGroup:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Allow the cluster control plane to communicate with worker Kubelet and pods
      GroupId: !Ref ControlPlaneSecurityGroup
      DestinationSecurityGroupId: !Ref NodeSecurityGroup
      IpProtocol: tcp
      FromPort: 1025
      ToPort: 65535
  NodeSecurityGroupFromControlPlaneOn443Ingress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow pods running extension API servers on port 443 to receive communication from cluster control plane
      GroupId: !Ref NodeSecurityGroup
      SourceSecurityGroupId: !Ref ControlPlaneSecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
  ControlPlaneEgressToNodeSecurityGroupOn443:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Allow the cluster control plane to communicate with pods running extension API servers on port 443
      GroupId: !Ref ControlPlaneSecurityGroup
      DestinationSecurityGroupId: !Ref NodeSecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
  ClusterControlPlaneSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow pods to communicate with the cluster API Server
      GroupId: !Ref ControlPlaneSecurityGroup
      SourceSecurityGroupId: !Ref NodeSecurityGroup
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
  NodeGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: !Ref NumberOfNodes
      LaunchConfigurationName: !Ref NodeLaunchConfig
      MinSize: !Ref NumberOfNodes
      MaxSize: !Ref NumberOfNodes
      VPCZoneIdentifier: [!Ref PrivateSubnet1ID, !Ref PrivateSubnet2ID, !Ref PrivateSubnet3ID]
      TargetGroupARNs: !If [DisableTargetGroups, !Ref "AWS::NoValue", !Ref TargetGroupARNs]
      Tags:
        - Key: Name
          Value: !Sub "${EKSControlPlane}-${NodeGroupName}-Node"
          PropagateAtLaunch: true
        - Key: !Sub 'kubernetes.io/cluster/${EKSControlPlane}'
          Value: 'owned'
          PropagateAtLaunch: true
    CreationPolicy:
      ResourceSignal:
        Count: !Ref NumberOfNodes
        Timeout: PT15M
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: 1
        MaxBatchSize: 1
  NodeLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Authentication:
        S3Auth:
          buckets:
            - !Ref QSS3BucketName
          roleName: !Ref NodeInstanceRoleName
          type: S3
      AWS::CloudFormation::Init:
        config:
          files:
            /tmp/worker/bootstrap.sh:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/amazon-eks/bootstrap.sh
              group: root
              owner: root
              mode: '000644'
              authentication: S3Auth
            /tmp/worker/docker-daemon.json:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/amazon-eks/docker-daemon.json
              group: root
              owner: root
              mode: '000644'
              authentication: S3Auth
            /tmp/worker/eni-max-pods.txt:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/amazon-eks/eni-max-pods.txt
              group: root
              owner: root
              mode: '000644'
              authentication: S3Auth
            /tmp/worker/install-worker.sh:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/install-worker.sh
              group: root
              owner: root
              mode: '000755'
              authentication: S3Auth
            /tmp/worker/kubelet-config.json:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/amazon-eks/kubelet-config.json
              group: root
              owner: root
              mode: '000644'
              authentication: S3Auth
            /tmp/worker/kubelet-kubeconfig:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/amazon-eks/kubelet-kubeconfig
              group: root
              owner: root
              mode: '000644'
              authentication: S3Auth
            /tmp/worker/kubelet.service:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/amazon-eks/kubelet.service
              group: root
              owner: root
              mode: '000644'
              authentication: S3Auth
            /tmp/worker/logrotate-kube-proxy:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/amazon-eks/logrotate-kube-proxy
              group: root
              owner: root
              mode: '000644'
              authentication: S3Auth
          commands:
            a-install:
              command: /tmp/worker/install-worker.sh
              env:
                BINARY_BUCKET_NAME: amazon-eks
                BINARY_BUCKET_PATH: !FindInMap
                  - K8sVersionMap
                  - !Ref KubernetesVersion
                  - BinaryPath
                BINARY_BUCKET_REGION: us-west-2
            b-bootstrap:
              command: !Sub /etc/eks/bootstrap.sh ${EKSControlPlane} ${BootstrapArguments}
    Properties:
      AssociatePublicIpAddress: true
      IamInstanceProfile: !Ref NodeInstanceProfile
      ImageId: !FindInMap
        - AWSAMIRegionMap
        - !Ref "AWS::Region"
        - !FindInMap
          - OStoK8sVersionMap
          - !Ref NodeAMIOS
          - !FindInMap
            - K8sVersionMap
            - !Ref KubernetesVersion
            - !FindInMap
              - InstanceTypes
              - !Ref NodeInstanceType
              - Type
      InstanceType: !Ref NodeInstanceType
      KeyName: !Ref KeyPairName
      SecurityGroups:
        - !Ref NodeSecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: !Ref NodeVolumeSize
            VolumeType: gp2
            DeleteOnTermination: true
Outputs:
  EKSNodeSecurityGroup:
    Value: !Ref NodeSecurityGroup
