{"AWSTemplateFormatVersion": "2010-09-09", "Description": "(qs-1nae6brn7) Hashicorp Consul+Nomad, License: Apache 2.0 (Please do not remove) Aug,16,2017", "Metadata": {"AWS::CloudFormation::Interface": {"ParameterGroups": [{"Label": {"default": " VPC Network Configuration"}, "Parameters": ["PrivateSubnet1ID", "PrivateSubnet2ID", "PrivateSubnet3ID", "AccessCIDR", "VPCCIDR", "VPCID"]}, {"Label": {"default": "Consul Client"}, "Parameters": ["ConsulEc2RetryTagKey", "ConsulEc2RetryTagValue"]}, {"Label": {"default": "Nomad Setup"}, "Parameters": ["KeyPair", "NomadInstanceType", "NomadServerNodes", "PrivateNomadClientNodes", "MinPrivateNomadClientNodes"]}, {"Label": {"default": "AWS Quick Start Configuration"}, "Parameters": ["QSS3BucketName", "QSS3KeyPrefix"]}], "ParameterLabels": {"AccessCIDR": {"default": "Permitted IP range"}, "ConsulEc2RetryTagKey": {"default": "Consul Ec2 Retry Tag Key"}, "ConsulEc2RetryTagValue": {"default": "Consul Ec2 Retry Tag Value"}, "KeyPair": {"default": "Key Pair Name"}, "MinPrivateNomadClientNodes": {"default": "Minimum Private Nomad Client Nodes"}, "NomadInstanceType": {"default": "Nomad Instance Type"}, "NomadServerNodes": {"default": "Nomad Server Nodes"}, "PrivateNomadClientNodes": {"default": "Private Nomad Client Nodes"}, "PrivateSubnet1CIDR": {"default": "Private Subnet 1 CIDR"}, "PrivateSubnet1ID": {"default": "Private Subnet ID 1"}, "PrivateSubnet2CIDR": {"default": "Private Subnet 2 CIDR"}, "PrivateSubnet2ID": {"default": "Private Subnet ID 2"}, "PrivateSubnet3CIDR": {"default": "Private Subnet 3 CIDR"}, "PrivateSubnet3ID": {"default": "Private Subnet ID 3"}, "PublicSubnet1CIDR": {"default": "Public Subnet 1 CIDR"}, "PublicSubnet2CIDR": {"default": "Public Subnet 2 CIDR"}, "PublicSubnet3CIDR": {"default": "Public Subnet 3 CIDR"}, "QSS3BucketName": {"default": "Quick Start S3 Bucket Name"}, "QSS3KeyPrefix": {"default": "Quick Start S3 Key Prefix"}, "VPCCIDR": {"default": "VPC CIDR"}, "VPCID": {"default": "VPC ID"}}}}, "Conditions": {"GovCloudCondition": {"Fn::Equals": [{"Ref": "AWS::Region"}, "us-gov-west-1"]}}, "Mappings": {"AWSAMIRegionMap": {"AMI": {"US1604HVM": "ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-20190628"}, "ap-northeast-1": {"US1604HVM": "ami-014cc8d7cb6d26dc8"}, "ap-northeast-2": {"US1604HVM": "ami-004b3430b806f3b1a"}, "ap-south-1": {"US1604HVM": "ami-0f59afa4a22fad2f0"}, "ap-southeast-1": {"US1604HVM": "ami-08b3278ea6e379084"}, "ap-southeast-2": {"US1604HVM": "ami-00d7116c396e73b04"}, "eu-central-1": {"US1604HVM": "ami-0062c497b55437b01"}, "eu-west-1": {"US1604HVM": "ami-0987ee37af7792903"}, "eu-west-2": {"US1604HVM": "ami-05945867d79b7d926"}, "sa-east-1": {"US1604HVM": "ami-0fb487b6f6ab53ff4"}, "us-east-1": {"US1604HVM": "ami-09f9d773751b9d606"}, "us-east-2": {"US1604HVM": "ami-0891395d749676c2e"}, "us-west-1": {"US1604HVM": "ami-0c0e5a396959508b0"}, "us-west-2": {"US1604HVM": "ami-0bbe9b07c5fe8e86e"}}}, "Parameters": {"AccessCIDR": {"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$", "Description": "The CIDR IP range that is permitted to access Nomad Note: a value of 0.0.0.0/0 will allow access from ANY ip address", "Type": "String"}, "ConsulEc2RetryTagKey": {"ConstraintDescription": "Must match EC2 Tag Name requirements.", "Default": "aws:cloudformation:stack-name", "Description": "The Amazon EC2 instance tag key to filter on when joining to other Consul nodes.", "Type": "String"}, "ConsulEc2RetryTagValue": {"Description": "The Amazon EC2 instance tag value to filter on when joining to other Consul nodes.", "Type": "String"}, "KeyPair": {"ConstraintDescription": "Must be the name of an existing EC2 KeyPair.", "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances", "Type": "AWS::EC2::KeyPair::KeyName"}, "MinPrivateNomadClientNodes": {"Default": "1", "Description": "Sets the min capacity for client nodes.", "Type": "String"}, "NomadInstanceType": {"AllowedValues": ["t2.micro", "t2.small", "t2.medium", "t2.large", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge"], "ConstraintDescription": "Choose an instance type. m4.large or larger recommended.", "Default": "m4.large", "Description": "nomad node instance type", "Type": "String"}, "NomadServerNodes": {"AllowedValues": ["3", "5", "7"], "Default": "3", "Description": "Sets DesiredCapacity and MaxSize ", "Type": "String"}, "PrivateNomadClientNodes": {"Default": "3", "Description": "Sets DesiredCapacity and MaxSize ", "Type": "String"}, "PrivateSubnet1ID": {"Description": "ID of the private subnet 1 in Availability Zone 1 (e.g., subnet-xxxxxxxx)", "Type": "AWS::EC2::Subnet::Id"}, "PrivateSubnet2ID": {"Description": "ID of the private subnet 2 in Availability Zone 2 (e.g., subnet-xxxxxxxx)", "Type": "AWS::EC2::Subnet::Id"}, "PrivateSubnet3ID": {"Description": "ID of the private subnet 3 in Availability Zone 2 (e.g., subnet-xxxxxxxx)", "Type": "AWS::EC2::Subnet::Id"}, "QSS3BucketName": {"AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$", "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).", "Default": "aws-quickstart", "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).", "Type": "String"}, "QSS3KeyPrefix": {"AllowedPattern": "^[0-9a-zA-Z-/]*$", "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).", "Default": "quickstart-hashicorp-nomad/", "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).", "Type": "String"}, "VPCCIDR": {"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$", "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28", "Description": "CIDR Block for the VPC", "Type": "String"}, "VPCID": {"Description": "VPC ID", "Type": "AWS::EC2::VPC::Id"}}, "Resources": {"NomadClientWaitCondition": {"Properties": {"Count": {"Ref": "PrivateNomadClientNodes"}, "Handle": {"Ref": "NomadClientWaitHandle"}, "Timeout": "5000"}, "Type": "AWS::CloudFormation::WaitCondition"}, "NomadClientWaitHandle": {"Type": "AWS::CloudFormation::WaitConditionHandle"}, "NomadSecGroup": {"Properties": {"GroupDescription": "Enables all access within the VPC to the Nomad clusters", "SecurityGroupIngress": [{"CidrIp": {"Ref": "VPCCIDR"}, "FromPort": "0", "IpProtocol": "tcp", "ToPort": "65535"}], "Tags": [{"Key": "Name", "Value": "NomadSecGroup"}], "VpcId": {"Ref": "VPCID"}}, "Type": "AWS::EC2::SecurityGroup"}, "NomadServerASG": {"Properties": {"DesiredCapacity": {"Ref": "NomadServerNodes"}, "LaunchConfigurationName": {"Ref": "NomadServerLaunchConfig"}, "MaxSize": {"Ref": "NomadServerNodes"}, "MinSize": "3", "Tags": [{"Key": "Name", "PropagateAtLaunch": "true", "Value": {"Fn::Join": ["-", [{"Ref": "AWS::StackName"}, "NomadServer"]]}}], "VPCZoneIdentifier": [{"Ref": "PrivateSubnet1ID"}, {"Ref": "PrivateSubnet2ID"}, {"Ref": "PrivateSubnet3ID"}]}, "Type": "AWS::AutoScaling::AutoScalingGroup"}, "NomadServerLaunchConfig": {"Metadata": {"AWS::CloudFormation::Init": {"configSets": {"nomad_install": ["install_awscli"]}, "install_awscli": {"commands": {"01_install_awscli": {"command": "pip install awscli"}}, "packages": {"apt": {"curl": [], "unzip": []}}}}}, "Properties": {"IamInstanceProfile": {"Ref": "nomadinstanceprofile"}, "ImageId": {"Fn::FindInMap": ["AWSAMIRegionMap", {"Ref": "AWS::Region"}, "US1604HVM"]}, "InstanceType": {"Ref": "NomadInstanceType"}, "KeyName": {"Ref": "KeyPair"}, "SecurityGroups": [{"Ref": "NomadSecGroup"}]}, "Type": "AWS::AutoScaling::LaunchConfiguration"}, "NomadServerWaitCondition": {"Properties": {"Count": {"Ref": "NomadServerNodes"}, "Handle": {"Ref": "NomadServerWaitHandle"}, "Timeout": "5000"}, "Type": "AWS::CloudFormation::WaitCondition"}, "NomadServerWaitHandle": {"Type": "AWS::CloudFormation::WaitConditionHandle"}, "PrivateNomadClientASG": {"Properties": {"DesiredCapacity": {"Ref": "PrivateNomadClientNodes"}, "LaunchConfigurationName": {"Ref": "PrivateNomadClientLaunchConfig"}, "MaxSize": {"Ref": "PrivateNomadClientNodes"}, "MinSize": {"Ref": "MinPrivateNomadClientNodes"}, "Tags": [{"Key": "Name", "PropagateAtLaunch": "true", "Value": {"Fn::Join": ["-", [{"Ref": "AWS::StackName"}, "PrivateNomadClient"]]}}, {"Key": "Datacenter", "PropagateAtLaunch": "true", "Value": {"Fn::Join": ["-", [{"Ref": "AWS::Region"}, "private"]]}}], "VPCZoneIdentifier": [{"Ref": "PrivateSubnet1ID"}, {"Ref": "PrivateSubnet2ID"}, {"Ref": "PrivateSubnet3ID"}]}, "Type": "AWS::AutoScaling::AutoScalingGroup"}, "PrivateNomadClientLaunchConfig": {"Metadata": {"AWS::CloudFormation::Init": {"configSets": {"nomad_install": ["install_awscli"]}, "install_awscli": {"commands": {"01_install_awscli": {"command": "pip install awscli"}}, "files": {"/etc/cron.hourly/ecr-cred-refresh": {"content": {"Fn::Sub": ["#!/bin/bash\naws ecr get-login --no-include-email --region=${Region} |  bash", {"Region": {"Ref": "AWS::Region"}}]}, "group": "root", "mode": "00700", "owner": "root"}}, "packages": {"apt": {"curl": [], "unzip": []}}}}}, "Properties": {"IamInstanceProfile": {"Ref": "nomadinstanceprofile"}, "ImageId": {"Fn::FindInMap": ["AWSAMIRegionMap", {"Ref": "AWS::Region"}, "US1604HVM"]}, "InstanceType": {"Ref": "NomadInstanceType"}, "KeyName": {"Ref": "KeyPair"}, "SecurityGroups": [{"Ref": "NomadSecGroup"}]}, "Type": "AWS::AutoScaling::LaunchConfiguration"}, "nomadinstanceprofile": {"Properties": {"Path": "/", "Roles": [{"Ref": "nomadinstancerole"}]}, "Type": "AWS::IAM::InstanceProfile"}, "nomadinstancerole": {"Properties": {"AssumeRolePolicyDocument": {"Statement": [{"Action": ["sts:AssumeRole"], "Effect": "Allow", "Principal": {"Service": ["ec2.amazonaws.com"]}}], "Version": "2012-10-17"}, "Path": "/", "Policies": [{"PolicyDocument": {"Statement": [{"Action": "ec2:Describe*", "Effect": "Allow", "Resource": "*"}, {"Action": "elasticloadbalancing:Describe*", "Effect": "Allow", "Resource": "*"}, {"Action": ["cloudwatch:ListMetrics", "cloudwatch:GetMetricStatistics", "cloudwatch:Describe*"], "Effect": "Allow", "Resource": "*"}, {"Action": "autoscaling:Describe*", "Effect": "Allow", "Resource": "*"}], "Version": "2012-10-17"}, "PolicyName": "EC2ReadOnly"}, {"PolicyDocument": {"Statement": [{"Action": ["ecr:GetAuthorizationToken", "ecr:BatchCheckLayerAvailability", "ecr:GetDownloadUrlForLayer", "ecr:GetRepositoryPolicy", "ecr:DescribeRepositories", "ecr:ListImages", "ecr:DescribeImages", "ecr:BatchGetImage"], "Effect": "Allow", "Resource": "*"}], "Version": "2012-10-17"}, "PolicyName": "ECR_readonly"}]}, "Type": "AWS::IAM::Role"}}}
